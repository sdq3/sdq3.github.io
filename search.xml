<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>33种编程语言的HelloWorld</title>
    <url>/HelloWorld.html</url>
    <content><![CDATA[<p><strong>我的核心代码</strong></p>
<a id="more"></a>
<h1 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">printf(&quot;Hello, World!&quot;);</span><br></pre></td></tr></table></figure>
<h1 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cout&lt;&lt;&quot;Hello, World!&quot;;</span><br></pre></td></tr></table></figure>

<h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &quot;Hello, World!&quot;;</span><br></pre></td></tr></table></figure>

<h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(&quot;Hello, World!&quot;)</span><br></pre></td></tr></table></figure>

<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt; Hello World! &lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">Hello, World!</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>
<h1 id="易语言"><a href="#易语言" class="headerlink" title="易语言"></a>易语言</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">信息框（“Hello, World!”，，64）</span><br></pre></td></tr></table></figure>
<h1 id="Jscript"><a href="#Jscript" class="headerlink" title="Jscript"></a>Jscript</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">document.write(&quot;Hello, World!&quot;)</span><br></pre></td></tr></table></figure>

<h1 id="java"><a href="#java" class="headerlink" title="java"></a>java</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">System.out.println(&quot;Hello, World!&quot;);</span><br></pre></td></tr></table></figure>

<h1 id="SQL"><a href="#SQL" class="headerlink" title="SQL"></a>SQL</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE MESSAGE (TEXT CHAR(13));</span><br><span class="line">INSERT INTO MESSAGE (TEXT) VALUES (&#39;Hello, World!&#39;);</span><br><span class="line">SELECT TEXT FROM MESSAGE;</span><br><span class="line">DROP TABLE MESSAGE;</span><br></pre></td></tr></table></figure>

<h1 id="JScript"><a href="#JScript" class="headerlink" title="JScript"></a>JScript</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alert(&quot;Hello, World!&quot;)</span><br></pre></td></tr></table></figure>

<h1 id="VBScript"><a href="#VBScript" class="headerlink" title="VBScript"></a>VBScript</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MsgBox &quot;Hello, World!&quot;</span><br></pre></td></tr></table></figure>

<h1 id="VB"><a href="#VB" class="headerlink" title="VB"></a>VB</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Print &quot;Hello, World!&quot;</span><br></pre></td></tr></table></figure>

<h1 id="VC"><a href="#VC" class="headerlink" title="VC"></a>VC</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MessageBox(&quot;Hello, World!&quot;);</span><br></pre></td></tr></table></figure>

<h1 id="shell"><a href="#shell" class="headerlink" title="shell"></a>shell</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo Hello, World!</span><br></pre></td></tr></table></figure>
<h1 id="perl"><a href="#perl" class="headerlink" title="perl:"></a>perl:</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print &#39;Hello, World!&#39;</span><br></pre></td></tr></table></figure>

<h1 id="powerBuilder"><a href="#powerBuilder" class="headerlink" title="powerBuilder"></a>powerBuilder</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">messagebox（&quot;Hello, World!&quot;)</span><br></pre></td></tr></table></figure>

<h1 id="C-1"><a href="#C-1" class="headerlink" title="C#"></a>C#</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">System.Console.WriteLine(&quot;Hello, World!&quot;)</span><br></pre></td></tr></table></figure>

<h1 id="COBOL"><a href="#COBOL" class="headerlink" title="COBOL"></a>COBOL</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DISPLAY &#39;Hello, World!&#39;</span><br></pre></td></tr></table></figure>

<h1 id="AS"><a href="#AS" class="headerlink" title="AS"></a>AS</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Alert.show(&quot;Hello, World!&quot;);</span><br></pre></td></tr></table></figure>

<h1 id="Malbolge"><a href="#Malbolge" class="headerlink" title="Malbolge"></a>Malbolge</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(&#39;&amp;%:9]!~&#125;|z2Vxwv-,POqponl$Hjig%eB@@&gt;&#125;&#x3D;&lt;M:9wv6WsU2T|nm-,jcL(I&amp;%$#&quot;</span><br><span class="line">&#96;CB]V?Tx&lt;uVtT&#96;Rpo3NlF.Jh++FdbCBA@?]!~|4XzyTT43Qsqq(Lnmkj&quot;Fhg$&#123;z@&gt;</span><br></pre></td></tr></table></figure>

<h1 id="DOS-批处理"><a href="#DOS-批处理" class="headerlink" title="DOS 批处理"></a>DOS 批处理</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo Hello, World!</span><br></pre></td></tr></table></figure>

<h1 id="OC"><a href="#OC" class="headerlink" title="OC"></a>OC</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSLog(@&quot;Hello, World!&quot;)</span><br></pre></td></tr></table></figure>

<h1 id="QBasic"><a href="#QBasic" class="headerlink" title="QBasic"></a>QBasic</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Print &quot;Hello, World!&quot;</span><br></pre></td></tr></table></figure>

<h1 id="Asp"><a href="#Asp" class="headerlink" title="Asp"></a>Asp</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Response.Write &quot;Hello, World!&quot;</span><br></pre></td></tr></table></figure>
<h1 id="ActionScript"><a href="#ActionScript" class="headerlink" title="ActionScript"></a>ActionScript</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">trace(&quot;Hello, World!&quot;);</span><br></pre></td></tr></table></figure>
<h1 id="ASP"><a href="#ASP" class="headerlink" title="ASP"></a>ASP</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;% Response.Write(&quot;Hello, World!&quot;) %&gt;</span><br></pre></td></tr></table></figure>
<h1 id="Delphi"><a href="#Delphi" class="headerlink" title="Delphi"></a>Delphi</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ShowMessage(&#39;Hello, World!&#39;);</span><br></pre></td></tr></table></figure>

<h1 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sed -ne &#39;1s&#x2F;.*&#x2F;Hello, World!&#x2F;p&#39;</span><br></pre></td></tr></table></figure>

<h1 id="bc"><a href="#bc" class="headerlink" title="bc"></a>bc</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;bc -q</span><br><span class="line">print &quot;Hello World&quot;</span><br><span class="line">quit</span><br></pre></td></tr></table></figure>

<h1 id="Small-Basic"><a href="#Small-Basic" class="headerlink" title="Small Basic"></a>Small Basic</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TextWindow.WriteLine(&quot;Hello, World!&quot;)</span><br></pre></td></tr></table></figure>

<h1 id="SNOBOL"><a href="#SNOBOL" class="headerlink" title="SNOBOL"></a>SNOBOL</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">OUTPUT &#x3D; &quot;Hello, World!&quot;</span><br><span class="line">END</span><br></pre></td></tr></table></figure>

<h1 id="Smalltalk"><a href="#Smalltalk" class="headerlink" title="Smalltalk"></a>Smalltalk</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Transcript show: &#39;Hello, World!&#39;</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>Anroid 项目结构</title>
    <url>/Anroid-structure.html</url>
    <content><![CDATA[<p><strong>未完待续</strong></p>
<a id="more"></a>

<h1 id="Project-项目结构"><a href="#Project-项目结构" class="headerlink" title="Project 项目结构"></a>Project 项目结构</h1> <ul>
        <li>app/android：项目依赖的库</li>
        <li>app/com：项目源代码</li>
        <li>app/Libraries：项目资源</li>
 <ul>


 <ul>
      <li>.gradle： Gradle编译系统，版本由wrapper指定</li>
      <li>.idea：IDE所需要的文件</li>
      <li>java(generated)</li>
      <li>app：开发项目的所有代码和资源文件
       <ul>
        <li>build：app模块编译输出的文件</li>
        <li>libs： 放置引用的类库文件</li>
        <li>src： 放置应用的主要文件目录
            <ul>
                <li>androidTest：单元测试目录</li>
                <li>main：主要的项目目录和代
                    <ul>
                        <li>assets：放置原生文件，里面的文件会保留原取需要通过流</li>
                        <li>java：项目的源代码</li>
                        <li>res：项目的资源</li>
                    <ul>
                </ul></ul></li>
            <ul>
        <ul>
        </ul></ul></ul></li>
      </ul></li>
 <ul>

<h1 id="app里面的结构"><a href="#app里面的结构" class="headerlink" title="app里面的结构"></a>app里面的结构</h1><div id="treeView"></div>

<script type="text/javascript">

var data = {
    files: [
    {
        id: 0,
        pid: -1,
        title: '全部文件'
    },

    {
        id: 1,
        pid: 0,
        title: '我的收藏'
    },
    {
        id: 2,
        pid: 0,
        title: '我的音乐'
    },
    {
        id: 3,
        pid: 0,
        title: '我的电影'
    },
    {
        id: 4,
        pid: 0,
        title: '我的书籍'
    },

    {
        id: 11,
        pid: 1,
        title: '工具'
    },
    {
        id: 12,
        pid: 1,
        title: '画册'
    },
    {
        id: 13,
        pid: 1,
        title: '班级图片'
    },

    {
        id: 41,
        pid: 4,
        title: 'JavaScript 高级程序设计'
    },
    {
        id: 42,
        pid: 4,
        title: '锋利的jQuery'
    },
    {
        id: 43,
        pid: 4,
        title: 'JavaScript语言精粹'
    }
    ]
};

function getLevelById(data,id) {
    return getParents(data,id).length;
}

function hasChilds(data,id){
    return getChildById(data,id).length !== 0;
}

function getChildById(arr,pid){
    var newArr = [];
    for( var i = 0; i < arr.length; i++ ){
        if( arr[i].pid == pid ){
            newArr.push(arr[i]);
        }
    };

    return newArr;
}

function getParents(data,currentId){
    var arr = [];
    for( var i = 0; i < data.length; i++ ){
        if( data[i].id == currentId ){
            arr.push(data[i]);
            arr = arr.concat(getParents(data,data[i].pid))
            break;
        }
    }
    return arr;
}

;(function (window, undefined) {
  var treeView = tools.$('#treeView');
  var fileData = data.files;

  // 初始化
  treeView.innerHTML = treeHtml(fileData, -1);

  // 事件
  var fileItem = tools.$('.treeNode');
  var root_icon = tools.$('.icon-control', fileItem[0])[0];

  root_icon.className = 'icon icon-control icon-minus';

  tools.each(fileItem, function (item) {
    filesHandle(item);
  });

  function treeHtml(fileData, fileId) {
    var _html = '';
    var children = getChildById(fileData, fileId);
    var hideChild = fileId > 0 ? 'none' : '';

    _html += '<ul class="'+hideChild+'">';

    children.forEach(function (item, index) {
      var level = getLevelById(fileData, item.id);
      var distance = (level - 1) * 20 + 'px';
      var hasChild = hasChilds(fileData, item.id);
      var className = hasChild ? '' : 'treeNode-empty';
      var treeRoot_cls = fileId === -1 ? 'treeNode-cur' : '';

      _html += `
        <li>
          <div class="treeNode ${className} ${treeRoot_cls}" style="padding-left: ${distance}" data-file-id="${item.id}">
            <i class="icon icon-control icon-add"></i>
            <i class="icon icon-file"></i>
            <span class="title">${item.title}</span>
          </div>
          ${treeHtml(fileData, item.id)}
        </li>`;
    });

    _html += '</ul>';

    return _html;
  };

  function filesHandle(item) {
    tools.addEvent(item, 'click', function () {
      var treeNode_cur = tools.$('.treeNode-cur')[0];
      var fileId = item.dataset.fileId;
      var curElem = document.querySelector('.treeNode[data-file-id="'+fileId+'"]');
      var hasChild = hasChilds(fileData, fileId);
      var icon_control = tools.$('.icon-control', item)[0];
      var openStatus = true;

      tools.removeClass(treeNode_cur, 'treeNode-cur');
      tools.addClass(curElem, 'treeNode-cur');

      if (hasChild) {
        openStatus = tools.toggleClass(item.nextElementSibling, 'none');

        if (openStatus) {
          icon_control.className = 'icon icon-control icon-add';
        } else {
          icon_control.className = 'icon icon-control icon-minus';
        }
      }
    });
  };
})(window);

var tools = (function(){
    var toolsObj = {
        $:function(selector,context){
            /*

             * #id
             * .class
             * 标签
             * "#id li"
             * ".class a"
             * */
            context = context || document;
            if(selector.indexOf(" ") !== -1){
                return context.querySelectorAll(selector);
            }else if( selector.charAt(0) === "#" ){
                return document.getElementById(selector.slice(1))
            }else if( selector.charAt(0) === "." ){
                return context.getElementsByClassName(selector.slice(1));
            }else{
                return context.getElementsByTagName(selector);
            }
        },
        addEvent:function(ele,eventName,eventFn){
            ele.addEventListener(eventName,eventFn,false);
        },
        removeEvent:function(ele,eventName,eventFn){
            ele.removeEventListener(eventName,eventFn,false);
        },
        addClass:function (element,clsNames){
            if( typeof clsNames === "string" ){
                if(!tools.hasClass(element,clsNames)){
                    element.className += " "+clsNames;
                }
            }
        },
        removeClass:function (element,clsNames){
            var classNameArr = element.className.split(" ");
            for( var i = 0; i < classNameArr.length; i++ ){
                if( classNameArr[i] === clsNames ){
                    classNameArr.splice(i,1);
                    i--;
                }
            }
            element.className = classNameArr.join(" ");
        },
        hasClass:function(ele,classNames){

            var classNameArr = ele.className.split(" ");
            for( var i = 0; i < classNameArr.length; i++ ){
                if( classNameArr[i] === classNames ){
                    return true;
                }
            }

            return false;
        },
        toggleClass:function (ele,classNames){
            if( tools.hasClass(ele,classNames) ){
                tools.removeClass(ele,classNames);
                return false;
            }else{
                tools.addClass(ele,classNames);
                return true;
            }
        },
        parents:function(obj,selector){
            /*

             * selector
             * id
             * class
             * 标签
             * */

            if( selector.charAt(0) === "#" ){
                while(obj.id !== selector.slice(1)){
                    obj = obj.parentNode;
                }
            }else if( selector.charAt(0) === "." ){
                while((obj && obj.nodeType !== 9) && !tools.hasClass(obj,selector.slice(1))){
                    obj = obj.parentNode;
                }
            }else{
                while(obj && obj.nodeType !== 9 && obj.nodeName.toLowerCase() !== selector){
                    obj = obj.parentNode;
                }
            }

            return obj && obj.nodeType === 9  ? null : obj;
        },
        each:function(obj,callBack){
            for( var i = 0; i < obj.length; i++ ){
                callBack(obj[i],i);
            }
        },
        getEleRect:function(obj){
            return obj.getBoundingClientRect();
        },
        collisionRect:function(obj1,obj2){
            var obj1Rect = tools.getEleRect(obj1);
            var obj2Rect = tools.getEleRect(obj2);

            var obj1W = obj1Rect.width;
            var obj1H = obj1Rect.height;
            var obj1L = obj1Rect.left;
            var obj1T = obj1Rect.top;

            var obj2W = obj2Rect.width;
            var obj2H = obj2Rect.height;
            var obj2L = obj2Rect.left;
            var obj2T = obj2Rect.top;
            //碰上返回true 否则返回false
            if( obj1W+obj1L>obj2L && obj1T+obj1H > obj2T && obj1L < obj2L+obj2W && obj1T<obj2T+obj2H ){
                return true
            }else{
                false;
            }
        },
        store:function (namespace, data)  {
            if (data) {
                return localStorage.setItem(namespace, JSON.stringify(data));
            }

            var store = localStorage.getItem(namespace);
            return (store && JSON.parse(store)) || [];
        },
        extend:function (obj){
            var newArr = obj.constructor === Array ? [] : {};
            for( var attr in obj ){
                if( typeof obj[attr] === "object"){
                    newArr[attr] = tools.extend(obj[attr]);
                }else{
                    newArr[attr] = obj[attr];
                }
            }
            return newArr;
        },
        hide:function (element){
            return element.style.display = "none";
        },
        show:function (element){
            return element.style.display = "block";
        },
        getOffset:function (obj){
            return {
                width:obj.offsetWidth,
                height:obj.offsetHeight
            }
        },
        insertBefore: function(newElem, parentNode) {
          if (parentNode.firstElementChild) {
            parentNode.insertBefore(newElem, parentNode.firstElementChild);
          } else {
            parentNode.appendChild(newElem);
          }
        }
    }

    return toolsObj;

}())


</script>
</ul></ul></ul></ul>]]></content>
  </entry>
  <entry>
    <title>Arch系统包桌面傻瓜式安装 (有手就行)</title>
    <url>/Arch-install.html</url>
    <content><![CDATA[<p><strong>本人是Arch教徒过来传一下教</strong> </p>
<img src="/images/Arch傻瓜式安装/Arch教徒.jpg" style="width: 200px; height: 200px;">
<a id="more"></a>

<p><strong>在Windows里用DiskGenius转GPT之后 删除你所要安装Arch的分区</strong></p>
<img src="/images/Arch傻瓜式安装/转GPT格式.jpg" style="width: 300px; height: 150px;">

<p><strong>磁盘变更还可以用Lixux命令来 不建议使用</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ partrd /dev/xxx  //你要变更的磁盘</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gpt</span><br></pre></td></tr></table></figure>
<p>然后退出</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ quit</span><br></pre></td></tr></table></figure>
<h1 id="第一步-先要有一个启动盘-这里推荐清华大学开源软件镜像站"><a href="#第一步-先要有一个启动盘-这里推荐清华大学开源软件镜像站" class="headerlink" title="第一步 先要有一个启动盘 这里推荐清华大学开源软件镜像站"></a>第一步 先要有一个启动盘 这里推荐<a href="https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/">清华大学开源软件镜像站</a></h1><h1 id="第二步-引导界面选择第一个-进入U盘"><a href="#第二步-引导界面选择第一个-进入U盘" class="headerlink" title="第二步 引导界面选择第一个 进入U盘"></a>第二步 引导界面选择第一个 进入U盘</h1><p><strong>先检查一下是不是UEFI启动,输入以下命令，有输出就代码是UEFI启动，检查BIOS设置是否为UEFI, BIOS设置每个机型都不一样</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ls /sys/firmware/efi/efivars</span><br></pre></td></tr></table></figure>
<h1 id="第三步-检查网络连接"><a href="#第三步-检查网络连接" class="headerlink" title="第三步 检查网络连接"></a>第三步 检查网络连接</h1><p><strong>建议直接插网线，然后ping一下百度，有反应继续 没反应检查网线</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ping www.baidu.com</span><br></pre></td></tr></table></figure>

<p>然后CTRL+Z退出</p>
<p><strong>如果你想用WIFI就执行以下步骤</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ iwctl</span><br></pre></td></tr></table></figure>
<p><strong>查看网卡 通常都是wlan0</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ device list</span><br></pre></td></tr></table></figure>
<p><strong>以下命令是扫描你范围内的无线网卡</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ station wlan0 get-networks</span><br></pre></td></tr></table></figure>

<p><strong>找到你的WIFI</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ station wlan0 connect xxx    //无线网卡名字通常是wlan0，WIFI名字xxx</span><br></pre></td></tr></table></figure>
<p><strong>Passphrase:是让你输密码</strong></p>
<p><strong>然后以下命令退出</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">exit</span></span><br></pre></td></tr></table></figure>
<h1 id="第四步-设置系统时钟更新-与网络时间同步"><a href="#第四步-设置系统时钟更新-与网络时间同步" class="headerlink" title="第四步 设置系统时钟更新 与网络时间同步"></a>第四步 设置系统时钟更新 与网络时间同步</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ timedatectl set-ntp <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p><strong>查看是否执行完同步</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ timedatectl status</span><br></pre></td></tr></table></figure>
<h1 id="第五步-更换镜像源"><a href="#第五步-更换镜像源" class="headerlink" title="第五步 更换镜像源"></a>第五步 更换镜像源</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim /etc/pamcan.d/mtrrorlist</span><br></pre></td></tr></table></figure>
<p><strong>查找: Server = <a href="https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch">https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch</a></strong></p>
<h1 id="第六步-分区"><a href="#第六步-分区" class="headerlink" title="第六步 分区"></a>第六步 分区</h1><p><strong>查看分区</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ lsblk</span><br></pre></td></tr></table></figure>
<p><strong>然后正式分区</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cfdisk /dev/xxx   //你要变更的磁盘</span><br></pre></td></tr></table></figure>
<p><strong>终于到这里了 这里是图形化界面很好查找</strong><br><img src="/images/Arch傻瓜式安装/图形化界面.jpg" style="width: 750px; height: 100px;"></p>
<p><strong>(New是新建) (Resize是调整大小) (Quit是退出) (Type是类型) (Heip是帮助) (Wrire是保存) (Dump是丢弃)</strong></p>
<p><strong>步骤: 先点New建一个300M的文件，然后点Type选择EFI System点击，再点New建一个2G的文件，然后点Type选择Linux swap点击，最后点New建一个(根目录)主分区把剩下的所有内存用上，然后点Type选择Linux filesystem点击，然后Wrire回车，并输入yes，然后拍照，点击Quit退出</strong></p>
<img src="/images/Arch傻瓜式安装/例子.jpg" style="width: 900px; height: 300px;">

<p><strong>以防万一，检查一下</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cfdisk -l</span><br></pre></td></tr></table></figure>
<h1 id="第七步-格式化操作"><a href="#第七步-格式化操作" class="headerlink" title="第七步 格式化操作"></a>第七步 格式化操作</h1><p><strong>格式化主分区(根目录)</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkfs.ext4 /dev/xxx   //就是你刚刚Linux filesystem的</span><br></pre></td></tr></table></figure>
<p><strong>格式化EFI分区</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkfs.vfat /dev/xxx     //就是你刚刚EFI System的</span><br></pre></td></tr></table></figure>
<p><strong>格式化swap分区</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkfswap -f /dev/xxx     //就是你刚刚Linux swap的</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ swapon /dev/xxx     //就是你刚刚Linux swap的</span><br></pre></td></tr></table></figure>
<h1 id="第八步-挂载"><a href="#第八步-挂载" class="headerlink" title="第八步 挂载"></a>第八步 挂载</h1><p><strong>挂载根目录 注意/mnt前面有空格</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mount /dev/(就是你刚刚Linux filesystem的) /mnt</span><br></pre></td></tr></table></figure>
<p><strong>挂载EFI分区 先创建boot目录 再里面创建EFI目录 注意/mnt前面还有空格</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir /mnt/boot</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir /mnt/boot/EFI</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mount /dev/xxx /mnt/boot/EFI       //xxx就是你刚刚EFI System的</span><br></pre></td></tr></table></figure>
<h1 id="第九步-安装系统"><a href="#第九步-安装系统" class="headerlink" title="第九步 安装系统"></a>第九步 安装系统</h1><p><strong>这三个包必安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacstrap /mnt base linux linux-firmware</span><br></pre></td></tr></table></figure>
<p><strong>然后安装功能性软件 联网的有dhcpcd iwd，编辑器有vim，提权有sudo</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacstrap /mnt dhcpcd iwd vim sudo</span><br></pre></td></tr></table></figure>
<p><strong>然后定义etc分区</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure>
<p><strong>以防万一还是检查一下</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat /mnt/etc/fstab</span><br></pre></td></tr></table></figure>
<h1 id="第七步-把环境迁移到新系统"><a href="#第七步-把环境迁移到新系统" class="headerlink" title="第七步 把环境迁移到新系统"></a>第七步 把环境迁移到新系统</h1><p><strong>迁移命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ arch-chroot /mnt</span><br></pre></td></tr></table></figure>
<p><strong>创建时区 例如: 上海</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ln -sf /usr.share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure>
<p><strong>同步时区</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hwclock --systohc</span><br></pre></td></tr></table></figure>
<p><strong>设置语言 留意en_US.UTF-8 UTF-8</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim /etc/locale.gen</span><br></pre></td></tr></table></figure>
<p><strong>然后生成</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ locale-gen</span><br></pre></td></tr></table></figure>
<p><strong>然后输入内容</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">&#x27;LANG=EN_us.utf-8 &gt; /etc/locale.conf&#x27;</span></span><br></pre></td></tr></table></figure>
<p><strong>以防万一 检查一下</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cat /etc/locale.conf</span><br></pre></td></tr></table></figure>
<h1 id="第八步-用户设置"><a href="#第八步-用户设置" class="headerlink" title="第八步 用户设置"></a>第八步 用户设置</h1><p><strong>Root用户设置密码</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ passwd root</span><br></pre></td></tr></table></figure>
<p><strong>intel英特尔CPU安装这个</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S intel-ucode</span><br></pre></td></tr></table></figure>
<p><strong>AMD超微CPU安装这个</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S amd-ucode</span><br></pre></td></tr></table></figure>
<h1 id="第九步-安装引导程序"><a href="#第九步-安装引导程序" class="headerlink" title="第九步 安装引导程序"></a>第九步 安装引导程序</h1><p><strong>安装grub引导</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S grub efibootmgr</span><br></pre></td></tr></table></figure>
<p><strong>然后给grub引导取个名字</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ grub-install --target=x86_64-efi --efi-directory=/bootloader-id=Arch      //这里我起Arch 顺便起个名字就好了</span><br></pre></td></tr></table></figure>
<p><strong>生成配置文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>
<p><strong>退出安装环境</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">exit</span></span><br></pre></td></tr></table></figure>
<p><strong>卸载分区</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ umount -R /mnt</span><br></pre></td></tr></table></figure>
<p><strong>然后重启一下 可选择物理重启和命令重启</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ reboot</span><br></pre></td></tr></table></figure>
<img src="/images/Arch傻瓜式安装/效果.jpg" style="width: 318px; height: 144px;">

<h1 id="第九步-安装到此为止-安装桌面玩下看"><a href="#第九步-安装到此为止-安装桌面玩下看" class="headerlink" title="第九步 安装到此为止 安装桌面玩下看"></a>第九步 安装到此为止 安装桌面玩下看</h1><h1 id="桌面环境"><a href="#桌面环境" class="headerlink" title="桌面环境"></a>桌面环境</h1><p><strong>创建用户 有利于提权</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ useradd -m -g users G wheel -s /bin/bash xxx     //xxx是你顺便起个用户名</span><br></pre></td></tr></table></figure>
<p><strong>创建密码</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ passwd wallen</span><br></pre></td></tr></table></figure>
<p><strong>编辑新用户权限 %wheel ALL=(ALL) ALL</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ EDITOR=vim visudo</span><br></pre></td></tr></table></figure>
<p><strong>创建桌面环境命令和其他必要软件命令  dolpin是文件管理器  konsole是终端</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S plasma-meta dolphin konsole</span><br></pre></td></tr></table></figure>
<p><strong>配置sddm设置为开机自启</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl <span class="built_in">enable</span> sddm</span><br></pre></td></tr></table></figure>
<p><strong>开启一下32位支持库 有些程序还是32位 所以要装一些库</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo vim /etc/pacman.conf</span><br></pre></td></tr></table></figure>
<p><strong>配置</strong></p>
<img src="/images/Arch傻瓜式安装/配置.jpg" style="width: 900px; height: 300px;">

<p><strong>刷新数据库内容</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacmam -Syyu</span><br></pre></td></tr></table></figure>
<p><strong>然后重启一下 可选择物理重启和命令重启</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ reboot</span><br></pre></td></tr></table></figure>
<h1 id="Vim命令"><a href="#Vim命令" class="headerlink" title="Vim命令"></a>Vim命令</h1><p><strong>按A键是编辑模式</strong><br><strong>按回车键是执行</strong><br><strong>按两下D键是剪切</strong><br><strong>按两下G键是回到第一行</strong><br><strong>按P键粘贴</strong><br><strong>按N键查找下一个</strong><br><strong>按ESC 然后输入 :wq 是保存并退出</strong></p>
<h1 id="neofetch查看系统"><a href="#neofetch查看系统" class="headerlink" title="neofetch查看系统"></a>neofetch查看系统</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S neofetch</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ neofetch</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Bodhi Linux安装教程(老电脑的福利)</title>
    <url>/Bodhi-Linux.html</url>
    <content><![CDATA[<p><strong>本人是2008年的联想电脑, Bodhi Linux是我唯一能完美运行的带桌面的发行版</strong></p>
<a id="more"></a>

<p><strong>以下是我的电脑的参数</strong></p>
<p><img src="/images/BodhiLinux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B(%E8%80%81%E7%94%B5%E8%84%91%E7%9A%84%E7%A6%8F%E5%88%A9)/%E8%81%94%E6%83%B3G430.jpg"></p>
<h1 id="第一步-安装Bodhi-Linux"><a href="#第一步-安装Bodhi-Linux" class="headerlink" title="第一步 安装Bodhi Linux"></a>第一步 安装Bodhi Linux</h1><p><strong>Bodhi Linux<a href="https://nchc.dl.sourceforge.net/project/bodhilinux/5.1.0/bodhi-5.1.0-64.iso">个人建议Standard版本</a>如果你想选择别的版本到<a href="https://www.bodhilinux.com/download/">官网找</a></strong></p>
<p><a href="https://www.bilibili.com/video/BV1aW411C7NR">安装视频参考Ubantu的, 都是可视化界面安装</a></p>
<h1 id="第二步-老电脑无法连接WIFI-所以终端输入以下命令"><a href="#第二步-老电脑无法连接WIFI-所以终端输入以下命令" class="headerlink" title="第二步 老电脑无法连接WIFI 所以终端输入以下命令"></a>第二步 老电脑无法连接WIFI 所以终端输入以下命令</h1><p><strong>建议用网线装机</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install bcmwl-kernel-source</span><br></pre></td></tr></table></figure>

<p><strong>仍然没有的话 就在终端输入以下命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo nano /etc/modprobe.d/blacklist.conf   //nano命令ctrl+x退出，选择y后保存</span><br><span class="line">$ blacklist acer-wmi   //最后一行加入</span><br></pre></td></tr></table></figure>

<h1 id="第三步-安装安装中文环境"><a href="#第三步-安装安装中文环境" class="headerlink" title="第三步 安装安装中文环境"></a>第三步 安装安装中文环境</h1><p><strong>安装中文字体和中文语言包</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install -y language-pack-zh-hans language-pack-zh-hans-base language-pack-gnome-zh-hans language-pack-gnome-zh-hans-base fonts-wqy-microhei</span><br></pre></td></tr></table></figure>

<p><strong>然后按照以下打开步骤</strong></p>
<p><img src="/images/BodhiLinux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B(%E8%80%81%E7%94%B5%E8%84%91%E7%9A%84%E7%A6%8F%E5%88%A9)/%E8%AE%BE%E7%BD%AE%E4%B8%AD%E6%96%871.jpg"><br><img src="/images/BodhiLinux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B(%E8%80%81%E7%94%B5%E8%84%91%E7%9A%84%E7%A6%8F%E5%88%A9)/%E8%AE%BE%E7%BD%AE%E4%B8%AD%E6%96%872.jpg"><br><img src="/images/BodhiLinux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B(%E8%80%81%E7%94%B5%E8%84%91%E7%9A%84%E7%A6%8F%E5%88%A9)/%E8%AE%BE%E7%BD%AE%E4%B8%AD%E6%96%873.jpg"><br><img src="/images/BodhiLinux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B(%E8%80%81%E7%94%B5%E8%84%91%E7%9A%84%E7%A6%8F%E5%88%A9)/%E8%AE%BE%E7%BD%AE%E4%B8%AD%E6%96%874.jpg"></p>
<h1 id="第四步安装输入法"><a href="#第四步安装输入法" class="headerlink" title="第四步安装输入法"></a>第四步安装输入法</h1><p><strong>这里<a href="https://pinyin.sogou.com/linux/">安装搜狗输入法</a></strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install fonts-droid-fallback zip   //安装它的依赖包</span><br><span class="line">$ sudo dpkg -i xxx    //xxx为下载的包名 后缀名也要</span><br></pre></td></tr></table></figure>
<h1 id="第五步安装一些常用软件"><a href="#第五步安装一些常用软件" class="headerlink" title="第五步安装一些常用软件"></a>第五步安装一些常用软件</h1><p><strong>例如安装vim</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install vim   //vim是文本编辑软件</span><br></pre></td></tr></table></figure>
<p><strong>例如浏览器 它自身也有web浏览器 看个人喜欢</strong></p>
<p><strong>安装火狐浏览器和中文语言包</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get remove firefox</span><br><span class="line">$ sudo apt-get install -y firefox firefox-locale-zh-hans</span><br></pre></td></tr></table></figure>
<p><strong>安装谷歌浏览器</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo wget http://www.linuxidc.com/files/repo/google-chrome.list -P /etc/apt/sources.list.d/</span><br><span class="line">wget -q -O - https://dl.google.com/linux/linux_signing_key.pub  | sudo apt-key add -     //先添加源</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install google-chrome-stable     //安装谷歌浏览器</span><br></pre></td></tr></table></figure>
<h1 id="安装neofetch"><a href="#安装neofetch" class="headerlink" title="安装neofetch"></a>安装neofetch</h1><p><strong>终端输入以下命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo add-apt-repository ppa:dawidd0811/neofetch</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install neofetch</span><br><span class="line">$ neofetch</span><br></pre></td></tr></table></figure>
<p><strong>本人试了(CrunchBang Linux), (Zenix Linux), (antiX Linux), (Zenwalk Linux), (Xubuntu Linux), (Lubuntu Linux), (Tiny Core Linux), (SliTaz Linux), (Porteus Linux), (Puppy Linux), (Silverblue Linux), (4MLinux)等等带桌面的发行版然后就唯独Bodhi Linux最满意</strong></p>
<p><strong>至于为什么要带桌面的发行版, 因为要日用偶尔看看B站什么的</strong></p>
<p><strong>关于这台电脑用的硬盘 大小80G 有9724个坏道 拆掉坏掉的戴尔一条三星的DDR2 才有2G内存可以体验</strong></p>
<p><img src="/images/BodhiLinux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B(%E8%80%81%E7%94%B5%E8%84%91%E7%9A%84%E7%A6%8F%E5%88%A9)/%E5%9D%8F%E9%81%93.jpg"></p>
]]></content>
  </entry>
  <entry>
    <title>CSS 三种基本选择器</title>
    <url>/CSS%E4%B8%89%E7%A7%8D%E5%9F%BA%E6%9C%AC%E9%80%89%E6%8B%A9%E5%99%A8.html</url>
    <content><![CDATA[<p><strong>CSS个人整理</strong></p>
<a id="more"></a>

<h1 id="第一种-标签选择器"><a href="#第一种-标签选择器" class="headerlink" title="第一种  标签选择器"></a>第一种  标签选择器</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$    p&#123;</span><br><span class="line">$        color: blue;   //蓝色字体</span><br><span class="line">$        background: red;    //设置背景图颜色</span><br><span class="line">$        borde-radius: 24px;    //设置圆角边框</span><br><span class="line">$        font-size: 80px;    //设置字体大小</span><br><span class="line">$      &#125;</span><br><span class="line">$  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;sdq1&quot;</span>&gt;</span>史迪奇骑士<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;sdq2&quot;</span>&gt;</span>史迪奇打手<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">p</span>&gt;</span>史迪奇国王<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="第二种-类-class-选择器"><a href="#第二种-类-class-选择器" class="headerlink" title="第二种 类 class 选择器"></a>第二种 类 class 选择器</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    .sdq1&#123;</span><br><span class="line">$        color: blue;   //蓝色字体</span><br><span class="line">$        background: red;    //设置背景图颜色</span><br><span class="line">$        borde-radius: 24px;    //设置圆角边框</span><br><span class="line">$        font-size: 80px;    //设置字体大小</span><br><span class="line">$    &#125;</span><br><span class="line">$    .sdq2&#123;</span><br><span class="line">$        color: red;   //红色字体</span><br><span class="line">$    &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;sdq1&quot;</span>&gt;</span>史迪奇骑士<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;sdq2&quot;</span>&gt;</span>史迪奇打手<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇国王<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>类选择器 .class的名称{}</strong></p>
<p><strong>好处: 可以多个标签归类, 是同一个class, 可以复用</strong></p>
<h1 id="第三种-id选择器"><a href="#第三种-id选择器" class="headerlink" title="第三种 id选择器"></a>第三种 id选择器</h1><p><strong>id选择器 #id的名称{}</strong></p>
<p><strong>id必须保证全局唯一</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    #sdq1&#123;</span><br><span class="line">$        color: blue;   //蓝色字体</span><br><span class="line">$        background: red;    //设置背景图颜色</span><br><span class="line">$        borde-radius: 24px;    //设置圆角边框</span><br><span class="line">$        font-size: 80px;    //设置字体大小</span><br><span class="line">$    &#125;</span><br><span class="line">$    .sdq2&#123;</span><br><span class="line">$        color: red;   //红色字体</span><br><span class="line">$    &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;sdq1&quot;</span>&gt;</span>史迪奇骑士<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;sdq2&quot;</span>&gt;</span>史迪奇打手<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇国王<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="优先级-id选择器-gt-class选择器-gt-标签选择器"><a href="#优先级-id选择器-gt-class选择器-gt-标签选择器" class="headerlink" title="优先级: id选择器 &gt; class选择器&gt; 标签选择器"></a>优先级: id选择器 &gt; class选择器&gt; 标签选择器</h1><p><strong>优先级不遵循就近原则, 是固定的</strong></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>标签选择器: 选择一类标签 标签名{}</strong></p>
<p><strong>类/class选择器: 选择所有的class属性一致的标签, 跨标签 .类名{}</strong></p>
<p><strong>id选择器: 全局唯一 id名{}</strong></p>
]]></content>
  </entry>
  <entry>
    <title>CSS 伪类选择器</title>
    <url>/CSS%E4%BC%AA%E7%B1%BB%E9%80%89%E6%8B%A9%E5%99%A8.html</url>
    <content><![CDATA[<p><strong>CSS个人整理</strong></p>
<a id="more"></a>

<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    &#125;</span><br><span class="line">$    ul li:first-child&#123;   //first-child意思是选中第一个</span><br><span class="line">$        color: red;   //红色字体</span><br><span class="line">$    &#125;</span><br><span class="line">$    ul li:last-child&#123;   //last-child意思是选中最后一个</span><br><span class="line">$        color: blue;   //红色字体</span><br><span class="line">$    &#125;</span><br><span class="line">$    p:nth-child(2)&#123;   //选中p1: 定位到父元素, 选择当前的第一个元素也就是选择当前p元素的父级元素, 选中父级元素的第一个, 并且是当前元素才生效</span><br><span class="line">$        color: yellow;   //黄色字体</span><br><span class="line">$    &#125;</span><br><span class="line">$    ul li:last-child&#123;   //last-child意思是选中最后一个</span><br><span class="line">$        color: red;   //红色字体</span><br><span class="line">$    &#125;</span><br><span class="line">$    p:nth-of-type(2)&#123;   //nth-of-type意思是选中父类下元素的第二个类型</span><br><span class="line">$        color: red;   //红色字体</span><br><span class="line">$    &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">p</span>&gt;</span>p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">p</span>&gt;</span>p2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">p</span>&gt;</span>p3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇骑士<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇打手<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇国王<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>




]]></content>
  </entry>
  <entry>
    <title>CSS 列表</title>
    <url>/CSS%E5%88%97%E8%A1%A8.html</url>
    <content><![CDATA[<p><strong>CSS个人整理</strong></p>
<a id="more"></a>

<h1 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    ol li&#123;</span><br><span class="line">$          color: blue;</span><br><span class="line">$         &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">$       <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇法师<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$       <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇战士<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$       <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇辅助<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$       <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇坦克<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$       <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇刺客<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    ul li&#123;</span><br><span class="line">$        list-style: none;          //去掉原点</span><br><span class="line">$        list-style: cirle;         //空心圆</span><br><span class="line">$        list-style: decimal;       //数字</span><br><span class="line">$        list-style: square;        //正方形</span><br><span class="line">$          &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">$       <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇法师<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$       <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇战士<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$       <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇辅助<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$       <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇坦克<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$       <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇刺客<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="自定义列表"><a href="#自定义列表" class="headerlink" title="自定义列表"></a>自定义列表</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    dl dd dt&#123;</span><br><span class="line">$          color: blue;</span><br><span class="line">$         &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">$      <span class="tag">&lt;<span class="name">dt</span>&gt;</span>史迪奇近战<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">$          <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇战士<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$          <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇辅助<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$          <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇坦克<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$          <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇刺客<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$      <span class="tag">&lt;<span class="name">dt</span>&gt;</span>史迪奇远程<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">$          <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇法师<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$          <span class="tag">&lt;<span class="name">li</span>&gt;</span>史迪奇射手<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>CSS 三种导入样式</title>
    <url>/CSS%E4%B8%89%E7%A7%8D%E5%AF%BC%E5%85%A5%E6%A0%B7%E5%BC%8F.html</url>
    <content><![CDATA[<p><strong>CSS个人整理</strong></p>
<a id="more"></a>

<h1 id="span标签"><a href="#span标签" class="headerlink" title="span标签"></a>span标签</h1><p><strong>span标签: 重点突出的字, 使用span套起来</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    #sdq1&#123;</span><br><span class="line">$        color: blue;</span><br><span class="line">$      &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">$ 我叫<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;sdq1&quot;</span>&gt;</span>史迪奇<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<h1 id="字体风格"><a href="#字体风格" class="headerlink" title="字体风格"></a>字体风格</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    body&#123;</span><br><span class="line">$        font-family: &quot;Arial Black&quot;, 楷体;   //字体</span><br><span class="line">$        color:blue;</span><br><span class="line">$      &#125;</span><br><span class="line">$    h1&#123;</span><br><span class="line">$        font-size: 50px;    //字体大小</span><br><span class="line">$      &#125;</span><br><span class="line">$    .sdq1&#123;</span><br><span class="line">$        font-weight: bolder;  //粗体</span><br><span class="line">$      &#125;</span><br><span class="line">$    p&#123;</span><br><span class="line">$        font: oblique bolder 12px &quot;楷体&quot;;   //斜体oblique粗细bolder大小12px</span><br><span class="line">$        color:blue;</span><br><span class="line">$      &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇的故事<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;sdq1&quot;</span>&gt;</span>生物史迪奇<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">p</span>&gt;</span>5岁女孩莉萝聪明善良, 她最爱听猫王的老歌, 也一直梦想拥有一只属于自己的宠物狗<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">p</span>&gt;</span>史迪奇只能把自己的两只脚藏起来, 外表看起来和别的小狗一样<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">p</span>&gt;</span>当外星人终于在地球上发现了伪装的史迪奇时, 他们绑架了莉萝想逼史迪奇就范, 为了救回自己的好朋友, 也为了证明自己不是无可救药的危险分子, 史迪奇只有使出浑身解数, 放手一搏了<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="文本样式"><a href="#文本样式" class="headerlink" title="文本样式"></a>文本样式</h1><p><strong>装饰</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    h1&#123;</span><br><span class="line">$        color:blue;     //颜色</span><br><span class="line">$        text-align: center;  //文本对齐的方式 </span><br><span class="line">$        text-indent: 2em;     //首行缩进</span><br><span class="line">$        line-height: 20px;    //行高 </span><br><span class="line">$        text-decoration: overline;   //上划线</span><br><span class="line">$        text-decoration: line-through;   //中划线</span><br><span class="line">$        text-decoration: underline   //下划线</span><br><span class="line">$      &#125;</span><br><span class="line">$     img,span&#123;</span><br><span class="line">$               vertical-align: middle;</span><br><span class="line">$            &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$<span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇的王国<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/x.jpg&quot;</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">span</span>&gt;</span>史迪奇<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="超链接伪类"><a href="#超链接伪类" class="headerlink" title="超链接伪类"></a>超链接伪类</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    //默认颜色</span><br><span class="line">$     a&#123;  </span><br><span class="line">$          text-decoration: none;</span><br><span class="line">$          color: #000000;</span><br><span class="line">$       &#125;  </span><br><span class="line">$     //鼠标悬浮状态 </span><br><span class="line">$     a:hover&#123;  </span><br><span class="line">$          color: blue;</span><br><span class="line">$       &#125;     </span><br><span class="line">$     //鼠标按住未释放状态 </span><br><span class="line">$     a:active&#123;  </span><br><span class="line">$          color: rad;</span><br><span class="line">$       &#125;      </span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">$<span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇的王国<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">a</span>&gt;</span>史迪奇<span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="阴影"><a href="#阴影" class="headerlink" title="阴影"></a>阴影</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    //默认颜色</span><br><span class="line">$     #sdq&#123;  </span><br><span class="line">$          text-shawdow: blue 10px 10px 10px;    //text-shawdow是阴影, 阴影颜色, 水平偏移, 垂直偏移, 阴影半径</span><br><span class="line">$       &#125;       </span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">$<span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇的王国<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;sdq&quot;</span>&gt;</span>史迪奇<span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>CSS 层次选择器</title>
    <url>/CSS%E5%B1%82%E6%AC%A1%E9%80%89%E6%8B%A9%E5%99%A8.html</url>
    <content><![CDATA[<p><strong>CSS个人整理</strong></p>
<a id="more"></a>

<h1 id="第一种-后代选择器"><a href="#第一种-后代选择器" class="headerlink" title="第一种  后代选择器"></a>第一种  后代选择器</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    &#125;</span><br><span class="line">$    body h1&#123;</span><br><span class="line">$        color: red;   //红色字体</span><br><span class="line">$    &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇骑士<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇打手<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇国王<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>后代选择器: 在某个元素的后面 祖爷爷 爷爷 爸爸 儿子</strong></p>
<h1 id="第二种-子选择器"><a href="#第二种-子选择器" class="headerlink" title="第二种 子选择器"></a>第二种 子选择器</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    &#125;</span><br><span class="line">$    body&gt;h1&#123;</span><br><span class="line">$        color: red;   //红色字体</span><br><span class="line">$    &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇骑士<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇打手<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇国王<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>子选择器: 只有一代 儿子</strong></p>
<h1 id="第三种-相邻兄弟选择器"><a href="#第三种-相邻兄弟选择器" class="headerlink" title="第三种 相邻兄弟选择器"></a>第三种 相邻兄弟选择器</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    &#125;</span><br><span class="line">$    .sdq+h1&#123;</span><br><span class="line">$        color: red;   //红色字体</span><br><span class="line">$    &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇骑士<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;sdq1&quot;</span>&gt;</span>史迪奇打手<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇国王<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>相邻兄弟选择器: 只有一个, 相邻(向下)</strong></p>
<h1 id="通用选择器"><a href="#通用选择器" class="headerlink" title="通用选择器"></a>通用选择器</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    &#125;</span><br><span class="line">$    .sdq~h1&#123;</span><br><span class="line">$        color: red;   //红色字体</span><br><span class="line">$    &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇骑士<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;sdq1&quot;</span>&gt;</span>史迪奇打手<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>史迪奇国王<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>通用选择器: 当前选中元素的向下的所有兄弟元素</strong></p>
]]></content>
  </entry>
  <entry>
    <title>CSS 属性选择器(常用)</title>
    <url>/CSS%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E5%99%A8.html</url>
    <content><![CDATA[<p><strong>CSS个人整理</strong></p>
<a id="more"></a>

<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$</span><br><span class="line">$  .sdq1 a&#123; </span><br><span class="line">$       float: left;  //left往左float浮动</span><br><span class="line">$       dispay: block;  //dispay规定元素应该生成的框的类型block此元素将显示为块级元素，此元素前后会带有换行符。</span><br><span class="line">$       heigh: 50px;  //heigh高度</span><br><span class="line">$       width: 50px;  //width宽度</span><br><span class="line">$       border-radius: 10px;  //border-radius圆角边框</span><br><span class="line">$       </span><br><span class="line">$       text-align: center;   //text-align对齐center剧中</span><br><span class="line">$       color: yellow;  //color文字颜色</span><br><span class="line">$       text-decoration: none;  //text-decoration下划线none不显示</span><br><span class="line">$       margin-right: 5px;    //margin-right外边距向右</span><br><span class="line">$       font: bold 20px/50px Arial;   //font设置文字的字体bold字体大小20px字体的大小50px行高Arial是一种字体</span><br><span class="line">$   &#125;</span><br><span class="line">$    //格式a[]&#123;&#125;  存在id的属性的元素  </span><br><span class="line">$   a[class*=first]&#123;        //=是绝对等于  *=是包含这个元素</span><br><span class="line">$       background: yellow;</span><br><span class="line">$   &#125;</span><br><span class="line">$   a[href^=xxy]&#123;          //^=表示以什么开头     </span><br><span class="line">$       background: green;</span><br><span class="line">$   &#125;</span><br><span class="line">$   a[href$=ghfgh]&#123;          //$=表示以什么结尾     </span><br><span class="line">$       background: powder;</span><br><span class="line">$   &#125;</span><br><span class="line">$    </span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;xxy.fgdhrth&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item first&quot;</span> <span class="attr">id</span>=<span class="string">&quot;first&quot;</span>&gt;</span>史迪奇<span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;xxx&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item&quot;</span>&gt;</span>史迪仔<span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;xxx&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item&quot;</span>&gt;</span>史迪奇骑士<span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;xxx&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item&quot;</span>&gt;</span>史迪奇国王<span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;xxx&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item&quot;</span>&gt;</span>史迪奇勇士<span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;hh.ghfgh&quot;</span> <span class="attr">class</span>=<span class="string">&quot;links item&quot;</span>&gt;</span>史迪奇巫师<span class="tag">&lt;<span class="name">a</span>&gt;</span></span><br><span class="line">$  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>




]]></content>
  </entry>
  <entry>
    <title>CSS-边距-边框-阴影-浮动-定位-透明-z-index-动画</title>
    <url>/CSS8.html</url>
    <content><![CDATA[<p><strong>CSS个人整理</strong></p>
<a id="more"></a>

<h1 id="内外边距"><a href="#内外边距" class="headerlink" title="内外边距"></a>内外边距</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$      <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$          div&#123;</span><br><span class="line">$             /* margin是外边距 1 2 3 4 分别对应 上 下 左 右  */</span><br><span class="line">$             margin:1 2 3 4; </span><br><span class="line">$             /* padding是内边距 上下左右的边距都是33px */</span><br><span class="line">$             padding:33px;       </span><br><span class="line">$              &#125;</span><br><span class="line">$        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>![](/images/BodhiLinux安装教程(</p>
<p>)/1.jpg)</p>
<h1 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$<span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$  div&#123;</span><br><span class="line">$       /* border是边框 3px是边框的粗细 soshed是边框的样式 black是边框的颜色 */</span><br><span class="line">$       border: 3px soshed black;</span><br><span class="line">$        &#125;</span><br><span class="line">$<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="圆角边框"><a href="#圆角边框" class="headerlink" title="圆角边框"></a>圆角边框</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$<span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$  div&#123;</span><br><span class="line">$       /* border是边框 10px是边框的粗细 solid是边框的样式 blue是边框的颜色 */</span><br><span class="line">$       border: 10px solid blue;</span><br><span class="line">$       border-radius: 100px;  //100px这是圆角边框 这个值可以随便改很好玩的</span><br><span class="line">$        &#125;</span><br><span class="line">$<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="阴影"><a href="#阴影" class="headerlink" title="阴影"></a>阴影</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$<span class="tag">&lt;<span class="name">style</span>&gt;</span> </span><br><span class="line">$  div&#123;</span><br><span class="line">$     width:300px;  //宽</span><br><span class="line">$     height:100px;  //高</span><br><span class="line">$     background-color:#ff9900;  //颜色</span><br><span class="line">$     -moz-box-shadow: 10px 10px 5px #888888; // 老的 Firefox </span><br><span class="line">$     box-shadow: 10px 10px 5px #888888; //box-shadow 属性向框添加一个或多个阴影</span><br><span class="line">$     &#125;</span><br><span class="line">$<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$<span class="tag">&lt;<span class="name">style</span>&gt;</span> </span><br><span class="line">$  div&#123;</span><br><span class="line">$     display: inline-block;  //将对象呈现为inline对象，但是对象的作为daoblock对象呈现</span><br><span class="line">$     float:right;  //float浮动 right右</span><br><span class="line">$     clear: right;  //右侧不允许有浮动元素</span><br><span class="line">$     clear: left;  //左侧不允许有浮动元素</span><br><span class="line">$     clear: both;  //两侧都不允许有浮动元素</span><br><span class="line">$     &#125;</span><br><span class="line">$<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<!-- **解决方法 增加父级元素的高度**
**解决方法 增加一个空的div标签, 清除浮动** -->
<h1 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$<span class="tag">&lt;<span class="name">style</span>&gt;</span> </span><br><span class="line">$  div&#123;</span><br><span class="line">$     //固定定位</span><br><span class="line">$     position: fixed;</span><br><span class="line">$     //绝对定位    没有父级元素定位的前提下, 相对浏览器定位</span><br><span class="line">$     position: absolute;</span><br><span class="line">$     //相对定位</span><br><span class="line">$     position: relative;</span><br><span class="line">$     &#125;</span><br><span class="line">$<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="透明"><a href="#透明" class="headerlink" title="透明"></a>透明</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$<span class="tag">&lt;<span class="name">style</span>&gt;</span> </span><br><span class="line">$  div&#123;</span><br><span class="line">$      opacity: 0.5;</span><br><span class="line">$     &#125;</span><br><span class="line">$<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="z-index"><a href="#z-index" class="headerlink" title="z-index"></a>z-index</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$<span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$   p&#123;</span><br><span class="line">$       position:absolute;  //绝对定位</span><br><span class="line">$       left:0px;  //左侧</span><br><span class="line">$       top:0px;   //top规定元素的顶部边缘</span><br><span class="line">$       z-index:-1;</span><br><span class="line">$   &#125;</span><br><span class="line">$<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h1><style> 
$   div {
$       width: 100px;  //宽
$       height: 100px;  //高
$       background-color: red; //颜色
$       animation-name: example;  //animation-name 属性为 @keyframes 动画规定名称
$       animation-duration: 4s; //4秒
$   }
$
$  @keyframes example {    //animation-name 属性为 @keyframes 动画规定名称
$           from {background-color: red;}  //变化颜色
$           to {background-color: yellow;}  //最后颜色
$            }
$</style>







]]></content>
  </entry>
  <entry>
    <title>CSS 三种导入样式</title>
    <url>/CSS-Import-styles.html</url>
    <content><![CDATA[<p><strong>CSS个人整理</strong></p>
<a id="more"></a>

<h1 id="第一种-行内样式"><a href="#第一种-行内样式" class="headerlink" title="第一种  行内样式"></a>第一种  行内样式</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>行内样式<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/CSS%E4%B8%89%E7%A7%8D%E5%AF%BC%E5%85%A5%E6%A0%B7%E5%BC%8F/%E8%A1%8C%E5%86%85%E6%A0%B7%E5%BC%8F.jpg"></p>
<h1 id="第二种-内部样式"><a href="#第二种-内部样式" class="headerlink" title="第二种 内部样式"></a>第二种 内部样式</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    h1&#123;</span><br><span class="line">$        color: blue;</span><br><span class="line">$      &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/CSS%E4%B8%89%E7%A7%8D%E5%AF%BC%E5%85%A5%E6%A0%B7%E5%BC%8F/%E5%86%85%E9%83%A8%E6%A0%B7%E5%BC%8F.jpg"></p>
<h1 id="第三种-外部样式"><a href="#第三种-外部样式" class="headerlink" title="第三种 外部样式"></a>第三种 外部样式</h1><p><strong>另外一个css页面</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$   <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span>    //链接式  属于html</span><br><span class="line">$    @import url(&quot;css/style.css&quot;)          //导入式  属于CSS2.1 了解就可以</span><br><span class="line">$ <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">$    h1&#123;</span><br><span class="line">$        color: blue;</span><br><span class="line">$      &#125;</span><br><span class="line">$ <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/images/CSS%E4%B8%89%E7%A7%8D%E5%AF%BC%E5%85%A5%E6%A0%B7%E5%BC%8F/%E5%A4%96%E9%83%A8%E6%A0%B7%E5%BC%8F.jpg"></p>
<h1 id="优先级-行内样式-gt-内部样式-gt-外部样式"><a href="#优先级-行内样式-gt-内部样式-gt-外部样式" class="headerlink" title="优先级: 行内样式 &gt; 内部样式 &gt; 外部样式"></a>优先级: 行内样式 &gt; 内部样式 &gt; 外部样式</h1><p><strong>优先级看就近原则</strong></p>
]]></content>
  </entry>
  <entry>
    <title>EJS常用标签</title>
    <url>/EJS.html</url>
    <content><![CDATA[<p><strong>EJS个人整理</strong></p>
<a id="more"></a>

<h1 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ //用于控制流</span><br><span class="line">$ &lt;%    %&gt;    //逻辑代码输出(JS编辑), 如 <span class="keyword">if</span>, <span class="keyword">for</span>等使用 </span><br><span class="line">$</span><br><span class="line">$ //用于转义的输出 </span><br><span class="line">$ &lt;%=  %&gt;     //输出 HTML转义后  的字符串 到模板中      用于转义的输出</span><br><span class="line">$</span><br><span class="line">$ //用于非转义的输出</span><br><span class="line">$ &lt;%-  %&gt;     //输出 原始的HTML串到模板中, 不对HTML进行转义    &lt;&gt;被浏览器识别  看做HTML  </span><br><span class="line">$</span><br><span class="line">$ &lt;%_ _%&gt;     //控制流使用空白字符移除模式</span><br><span class="line">$ </span><br><span class="line">$ &lt;%<span class="comment">#   %&gt;    //注释</span></span><br><span class="line">$</span><br><span class="line">$ &lt;%%  %&gt;     //直接输出 &lt;%  %&gt;</span><br><span class="line">$</span><br><span class="line">$ -%&gt;         //结束标签用于换行移除模式</span><br><span class="line">$</span><br><span class="line">$自定义分隔符 (例如, 使用 <span class="string">&#x27;&lt;? ?&gt;&#x27;</span> 代替 <span class="string">&#x27;&lt;% %&gt;&#x27;</span>)</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>关于Hexo搭建博客我所踩过的坑和小白安装教程</title>
    <url>/Hexo-install.html</url>
    <content><![CDATA[<p><strong>搭建博客笔记</strong></p>
<a id="more"></a>

<h1 id="第一是-Hexo-环境搭建"><a href="#第一是-Hexo-环境搭建" class="headerlink" title="第一是 Hexo 环境搭建"></a>第一是 Hexo 环境搭建</h1><p>前提是需要安装 Node.js,不懂的可以百度下载然后按照<a href="https://www.bilibili.com/video/BV1wA411s7re?from=search&seid=11841654225437997570">B站的安装视频按照</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure>
<h1 id="第二是-Hexo初始化博客"><a href="#第二是-Hexo初始化博客" class="headerlink" title="第二是 Hexo初始化博客"></a>第二是 Hexo初始化博客</h1><p><strong>cd 到你想存放博客源码的一个目录里面，这时会自动建立一个博客文件夹</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init blog  //hexo init (博客名字自定义)</span><br></pre></td></tr></table></figure>

<h1 id="第三是-给安装博客依赖"><a href="#第三是-给安装博客依赖" class="headerlink" title="第三是 给安装博客依赖"></a>第三是 给安装博客依赖</h1><p><strong>cd 进刚创建的博客文件夹，安装依赖模块命令如下</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<h1 id="第四是-找主题"><a href="#第四是-找主题" class="headerlink" title="第四是 找主题"></a>第四是 找主题</h1><p><strong>到这个 <a href="https://hexo.bootcss.com/themes/">Hexo网站</a> 去找主题</strong></p>
<h1 id="第五是-清除静态文件"><a href="#第五是-清除静态文件" class="headerlink" title="第五是 清除静态文件"></a>第五是 清除静态文件</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure>
<h1 id="第六是-生成静态文件和"><a href="#第六是-生成静态文件和" class="headerlink" title="第六是 生成静态文件和"></a>第六是 生成静态文件和</h1><p><strong>部署在GitHub 或者 Gitee服务器上，生成静态文件，生成的静态文件在博客工程的 public文件夹下 到哪里找就行了</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure>
<h1 id="第七是-部署"><a href="#第七是-部署" class="headerlink" title="第七是 部署"></a>第七是 部署</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>
<h1 id="第八是-本地运行"><a href="#第八是-本地运行" class="headerlink" title="第八是 本地运行"></a>第八是 本地运行</h1><p><strong>这里地址是localhost:4000</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<h1 id="查看你有没有被百度收录文章"><a href="#查看你有没有被百度收录文章" class="headerlink" title="查看你有没有被百度收录文章"></a>查看你有没有被百度收录文章</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ site:(你的博客)  //直接复制命令百度搜索</span><br></pre></td></tr></table></figure>
<h1 id="amp-的作用"><a href="#amp-的作用" class="headerlink" title="&amp;的作用"></a>&amp;的作用</h1><p><strong>表示清除静态文件和部署</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean &amp; hexo d </span><br></pre></td></tr></table></figure>
<h1 id="改变文章链接规则"><a href="#改变文章链接规则" class="headerlink" title="改变文章链接规则"></a>改变文章链接规则</h1><p><strong>Ctrl+f搜索 permalink</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ permalink: :id.html   //填入:id.html</span><br></pre></td></tr></table></figure>
<p><strong>然后在指定位置填入id即可 数字随意，只要保证每篇文章里面的数字不要一样就行</strong></p>
<img src="/images/Hexo博客/案例.jpg">]]></content>
  </entry>
  <entry>
    <title>Java Swing 图形界面速背表(未完工)</title>
    <url>/Java-Swing.html</url>
    <content><![CDATA[<p><strong>学习Java个人整理</strong></p>
<a id="more"></a>

<blockquote>
<h1 id="JavaSwing-布局管理器"><a href="#JavaSwing-布局管理器" class="headerlink" title="JavaSwing 布局管理器"></a>JavaSwing 布局管理器</h1></blockquote>
<p>getWigth 得到宽度 或者 控件的高度<br>getHeight 得到高度 或者 控件的宽度<br>root.setLayout(layoutMgr) 给容器设置一个布局器<br>layoutMgr.layoutContainer(…) 当容器改变大小时，自动调用布局器重新布局<br>Perferred Size 指控件最佳大小<br>Dimension 表示尺寸信息 size.width/size.height</p>
<h1 id="FlowLayout-流式布局"><a href="#FlowLayout-流式布局" class="headerlink" title="FlowLayout (流式布局)"></a>FlowLayout (流式布局)</h1><p>setPreferred Size() 控制每个控件的显示高度和宽度</p>
<p>GridLayout (网格布局)</p>
<p>GridBagLayout (网格袋布局)</p>
<p>BoxLayout (箱式布局)</p>
<p>GroupLayout (分组布局)</p>
<p>AFXLayout  (水平布局)</p>
<h1 id="AfAnyWhere-自由位置布局"><a href="#AfAnyWhere-自由位置布局" class="headerlink" title="AfAnyWhere (自由位置布局)"></a>AfAnyWhere (自由位置布局)</h1><p>new AfMargin(top,left,botton,right)</p>
<h1 id="CardLayout-卡片布局"><a href="#CardLayout-卡片布局" class="headerlink" title="CardLayout (卡片布局)"></a>CardLayout (卡片布局)</h1><p>CardLayout.show(pane,”name”)</p>
<h1 id="BorderLayout-边界布局"><a href="#BorderLayout-边界布局" class="headerlink" title="BorderLayout (边界布局)"></a>BorderLayout (边界布局)</h1><p>setPreferrendSize() 对于上下边界调高度，左右边界调宽度<br>PAGE_START 上边界<br>PAGE_END 下边界<br>LINE_START 左边界<br>LINE_END 右边<br>CENTER 中央</p>
<p>SpringLayout (弹性布局)</p>
<p>null (绝对布局)</p>
<blockquote>
<h1 id="JavaSwing-基本组件"><a href="#JavaSwing-基本组件" class="headerlink" title="JavaSwing 基本组件"></a>JavaSwing 基本组件</h1></blockquote>
<h1 id="JLabel-标签"><a href="#JLabel-标签" class="headerlink" title="JLabel (标签)"></a>JLabel (标签)</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ JLabel x = new JLabel(<span class="string">&quot;我是JLabel&quot;</span>);</span><br><span class="line">$ contenntPane.add(x);</span><br><span class="line">$ //也可以用一行</span><br><span class="line">$ contenntPane.add(new JLabel(<span class="string">&quot;我是JLabel&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>JLabel 用于显示短文本或图标<br>setText() 设置文件<br>setFont() 设置字体<br>setForeground() 设置文件颜色<br>setToolTipText() 设置工具提示<br>getText() 取得用户输入</p>
<h2 id="JButton-按钮"><a href="#JButton-按钮" class="headerlink" title="JButton (按钮)"></a>JButton (按钮)</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ JButton x = new JButton(<span class="string">&quot;我是JButton&quot;</span>);</span><br><span class="line">$ contenntPane.add(x);</span><br><span class="line">$ //也可以用一行</span><br><span class="line">$ contenntPane.add(new JButton(<span class="string">&quot;我是JButton&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>JRadioButton (单选按钮)</p>
<h1 id="JCheckBox-复选框"><a href="#JCheckBox-复选框" class="headerlink" title="JCheckBox (复选框)"></a>JCheckBox (复选框)</h1><p>getSelected() 选中状态<br>setSelected() 设置<br>getText() 选项文字<br>addActionListener() 用户选中/取消时触发</p>
<p>JToggleButton (开关按钮)</p>
<h1 id="JTextField-文本框-或者-单行文本框"><a href="#JTextField-文本框-或者-单行文本框" class="headerlink" title="JTextField (文本框 或者 单行文本框)"></a>JTextField (文本框 或者 单行文本框)</h1><p>JTextField 用于显示单行文本<br>new JTextField(10) 其中,10用于表示列数，用于计算宽度(并不是字数限制)<br>setText() 设置文本<br>getText() 获取文本<br>setFont() 设置字体</p>
<h1 id="JoptionPane-消息框"><a href="#JoptionPane-消息框" class="headerlink" title="JoptionPane 消息框"></a>JoptionPane 消息框</h1><p>JoptionPane.showMessageDialog() 提示消息框<br>showMessageDialog  简单消息提示<br>showConfirmDialog  简单消息确认<br>showInputDialog  简单数据输入<br>showoptionDialog  简单选择输入<br>Blocked 阻塞<br>JoptionPane.showInputDialog() 提示消息框</p>
<p>JPasswordField (密码框)</p>
<h2 id="JTextArea-文本区域-或者-多行文本框"><a href="#JTextArea-文本区域-或者-多行文本框" class="headerlink" title="JTextArea (文本区域 或者 多行文本框)"></a>JTextArea (文本区域 或者 多行文本框)</h2><p>JComboBox (下拉列表框)</p>
<p>JList (列表框)</p>
<p>JProgressBar (进度条)</p>
<p>JSlider (滑块)</p>
<blockquote>
<h1 id="JavaSwing-面板组件"><a href="#JavaSwing-面板组件" class="headerlink" title="JavaSwing 面板组件"></a>JavaSwing 面板组件</h1></blockquote>
<p>JPanel (面板)</p>
<p>JScrollPane (滚动面板)</p>
<p>JSplitPane (分隔面板)</p>
<p>JTabbedPane (选项卡面板)</p>
<p>JLayeredPane (层级面板)</p>
<blockquote>
<h1 id="JavaSwing-其他组件"><a href="#JavaSwing-其他组件" class="headerlink" title="JavaSwing 其他组件"></a>JavaSwing 其他组件</h1></blockquote>
<p>JFrame (窗口)[一般存放标题]<br>setTitle  (设置标题)</p>
<p>Container (内容面板)</p>
<h1 id="setVisible-设置窗口大小-和-setVisble-显示窗口大小"><a href="#setVisible-设置窗口大小-和-setVisble-显示窗口大小" class="headerlink" title="setVisible (设置窗口大小) 和 setVisble(显示窗口大小)"></a>setVisible (设置窗口大小) 和 setVisble(显示窗口大小)</h1><p>setVisible(boolean)方法是用来显示/隐藏GUI组件的。<br>需要显示则使用true，需要隐藏则使用false</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ setVisible(<span class="literal">true</span>)  //例如这个</span><br></pre></td></tr></table></figure>
<p>意思是说数据模型已经构造好了，允许JVM可以根据数据模型执行paint方法开始画图并显示到屏幕上了，并不是显示图形，而是可以运行开始画图，要把setVisible()方法放到最后面，代码是按顺序执行的 ，如果把setVisible()放在前边，后边再添加其他组件的时候，有可能不会显示出来</p>
<p>JDialog, JOptionPane (对话框)</p>
<p>JFileChooser (文件选择器)</p>
<p>JColorChooser (颜色选择器)</p>
<h1 id="JMenuBar-菜单栏"><a href="#JMenuBar-菜单栏" class="headerlink" title="JMenuBar (菜单栏)"></a>JMenuBar (菜单栏)</h1><p>JMenuBar (菜单项)<br>JMenu (菜单)<br>JMenuItem (菜单项)</p>
<h1 id="JToolBar-工具栏"><a href="#JToolBar-工具栏" class="headerlink" title="JToolBar (工具栏)"></a>JToolBar (工具栏)</h1><p>JButton 工具按钮<br>setIcin() 图标<br>setAction Command() 命令<br>setToolTipText() 提示文字<br>add Action Listener() 事件处理</p>
<p>JPopupMenu (弹出菜单 或者 上下文菜单 或者 右键菜单)<br>JPopupMenu 创建<br>JMenuItem  添加<br>添加鼠标右键的响应，显示窗口菜单<br>菜单项被点击时，执行事件处理</p>
<p>JTable (表格)</p>
<p>JTree (树)</p>
<p>JInternalFrame (内部窗口)</p>
<blockquote>
<h1 id="JavaSwing-相关特性-了解就行"><a href="#JavaSwing-相关特性-了解就行" class="headerlink" title="JavaSwing 相关特性(了解就行)"></a>JavaSwing 相关特性(了解就行)</h1></blockquote>
<p>组件的位置和尺寸</p>
<h1 id="组件边框-Border"><a href="#组件边框-Border" class="headerlink" title="组件边框 (Border)"></a>组件边框 (Border)</h1><p>Border本身就是一个接口<br>Padding：边框与它的内容之间的间距<br>Margin：边框与它外面的容器之间的间距</p>
<h1 id="AfBorder-添加边框和边距"><a href="#AfBorder-添加边框和边距" class="headerlink" title="AfBorder 添加边框和边距"></a>AfBorder 添加边框和边距</h1><p>addPadding() 内边距<br>addMargin() 外边距<br>addOuterBorder() 外边添加Border<br>addInnerBorder() 里面添加Border</p>
<h1 id="AfPanel-用于快速布局"><a href="#AfPanel-用于快速布局" class="headerlink" title="AfPanel 用于快速布局"></a>AfPanel 用于快速布局</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ AfPanel p = new AfPanel();</span><br><span class="line">$ p.padding();  //设置内边距</span><br><span class="line">$ p.margin();  //设置外边距</span><br><span class="line">$ p.preferredWidth();  //设置PrefedSise的宽度</span><br><span class="line">$ p.preferredHeight();  //设置PrefedSise的高度</span><br></pre></td></tr></table></figure>
<h1 id="图片缩放工具"><a href="#图片缩放工具" class="headerlink" title="图片缩放工具"></a>图片缩放工具</h1><p>fitXY()  XY方向拉伸占满<br>fitCenter()  居中显示，并保持长宽比<br>fitCenterInside() 如果图片较小，则居中显示，如果图片越出范围，则舒服显示</p>
<h1 id="图片显示控件"><a href="#图片显示控件" class="headerlink" title="图片显示控件"></a>图片显示控件</h1><p>AfImageView  图片显示控件<br>setScaleType()  设置缩放类型<br>setImage()  显示图片<br>setBgColor()  设置背景图</p>
<h1 id="鼠标事件-MouseEvent"><a href="#鼠标事件-MouseEvent" class="headerlink" title="鼠标事件 MouseEvent"></a>鼠标事件 MouseEvent</h1><p>addMouseliskener()<br>鼠标点击 mouseClicked<br>鼠标按下 mousePressed<br>鼠标抬起 mouseExited<br>鼠标移入 mouseEntered<br>鼠标移出 mouseExited<br>addMouseMotionliskener()<br>鼠标移动 mouseMoved<br>鼠标拖动 mouseDragged<br>addMouseWheelListener<br>鼠标滚动 mouseWheelMoved</p>
<p>事件处理</p>
<p>多线程并发与线程安全</p>
<p>拖拽功能</p>
<p>系统托盘 (System Tray)</p>
<p>闪屏 (Splash Screen)</p>
<h1 id="Java-AWT-Swing-其他相关"><a href="#Java-AWT-Swing-其他相关" class="headerlink" title="Java AWT/Swing 其他相关"></a>Java AWT/Swing 其他相关</h1><p>Java绘图: 使用Graphics类绘制线段, 矩形, 椭圆/圆弧/扇形, 图片, 文本</p>
<p>Java图片操作 — 图片的读取, 绘制, 缩放, 裁剪, 保存</p>
<p>Java代码截屏：使用 Java 代码截取电脑屏幕并保存</p>
<p>Java模拟鼠标键盘输入事件 — Robot 类</p>
<p>Java操作桌面应用 — Desktop 类</p>
<p>Java操作系统剪贴板(Clipboard)实现复制和粘贴 –&gt;</p>
<h1 id="特别提醒-AWT-例如-Label-Button"><a href="#特别提醒-AWT-例如-Label-Button" class="headerlink" title="特别提醒 AWT 例如: Label,Button"></a>特别提醒 AWT 例如: Label,Button</h1><h1 id="特别提醒-Swing-例如-JLabel-JButton-只要是以J开头的"><a href="#特别提醒-Swing-例如-JLabel-JButton-只要是以J开头的" class="headerlink" title="特别提醒 Swing 例如: JLabel,JButton 只要是以J开头的"></a>特别提醒 Swing 例如: JLabel,JButton 只要是以J开头的</h1><h1 id="ActionListener-是一个接口，所以派生时用impleme"><a href="#ActionListener-是一个接口，所以派生时用impleme" class="headerlink" title="ActionListener 是一个接口，所以派生时用impleme"></a>ActionListener 是一个接口，所以派生时用impleme</h1><p>addActionListener(…)  传入的参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ Button.addActionListener(x);  //意思是把什么交给谁，例如button(按键) 和 x </span><br></pre></td></tr></table></figure>
<h1 id="演示drawString（）方法的示例程序："><a href="#演示drawString（）方法的示例程序：" class="headerlink" title="演示drawString（）方法的示例程序："></a>演示drawString（）方法的示例程序：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">// drawString示例程序</span><br><span class="line"><span class="variable">$import</span> java.awt.*; </span><br><span class="line"><span class="variable">$import</span> java.applet.*; </span><br><span class="line"><span class="variable">$public</span> class HelloWorldApplet扩展Applet &#123;     </span><br><span class="line">$ public void paint(Graphics g)&#123;         </span><br><span class="line">$ g.drawString(<span class="string">&quot;Hello World&quot;</span>，100,100);</span><br></pre></td></tr></table></figure>
<h1 id="显示消息对话框"><a href="#显示消息对话框" class="headerlink" title="显示消息对话框"></a>显示消息对话框</h1><p>showMessageDialog(“里面的文字”)<br>f.setVisible(true)<br>f.setTitle(“框框上的文字”)<br>charAt<br>看见actionPerformed 就要implements ActionListener<br><strong>(Button saveButton = new Button)</strong><br>saveButton.addActionListener(this);没什么加就this<br>(ActionListener=监听器)<br>(this=当前对象的意思)<br>(super是父级对象)<br><strong>如果Container contentPane = newContainer();</strong><br><strong>就Container contentPane = getContentPane();</strong><br>有Thread就想起Runnable</p>
]]></content>
  </entry>
  <entry>
    <title>HTML iframe内联框架</title>
    <url>/HTML-iframe.html</url>
    <content><![CDATA[<p><strong>HTML个人整理</strong></p>
<a id="more"></a>

<h1 id="iframe-内联框架"><a href="#iframe-内联框架" class="headerlink" title="iframe 内联框架"></a>iframe 内联框架</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ &lt;body&gt;</span><br><span class="line">$     &lt;iframe src=<span class="string">&quot;path&quot;</span> name=<span class="string">&quot;mainFrame&quot;</span>&gt;&lt;/iframe&gt;</span><br><span class="line">$     &lt;p&gt;&lt;a href=<span class="string">&quot;https://sdq3.gitee.io&quot;</span> target=<span class="string">&quot;mainFrame&quot;</span>&gt;我叫史迪奇&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">$ &lt;/body&gt;</span><br></pre></td></tr></table></figure>
<p><strong>其中path是引用页面地址 mainFrame是框架标识名</strong></p>
<h1 id="Iframe-删除边框"><a href="#Iframe-删除边框" class="headerlink" title="Iframe - 删除边框"></a>Iframe - 删除边框</h1><p><strong>frameborder 属性规定是否显示 iframe 周围的边框 设置属性值为 “0” 就可以移除边框</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ &lt;body&gt;</span><br><span class="line">$     &lt;iframe src=<span class="string">&quot;demo_iframe.html&quot;</span> frameborder=<span class="string">&quot;0&quot;</span>&gt;&lt;/iframe&gt;</span><br><span class="line">$ &lt;/body&gt;</span><br></pre></td></tr></table></figure>
<h1 id="使用-iframe-作为链接的目标"><a href="#使用-iframe-作为链接的目标" class="headerlink" title="使用 iframe 作为链接的目标"></a>使用 iframe 作为链接的目标</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ &lt;body&gt;</span><br><span class="line">$     &lt;iframe src=<span class="string">&quot;xxx/xxx.html&quot;</span> name=<span class="string">&quot;iframe_a&quot;</span>&gt;&lt;/iframe&gt;</span><br><span class="line">$     &lt;p&gt;&lt;a href=<span class="string">&quot;https://sdq3.gitee.io&quot;</span> target=<span class="string">&quot;iframe_a&quot;</span>&gt;我叫史迪奇&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">$ &lt;/body&gt;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>HTML 基本控件大集合</title>
    <url>/HTML-operation.html</url>
    <content><![CDATA[<p><strong>HTML个人整理</strong></p>
<a id="more"></a>

<h1 id="输入框与密码框"><a href="#输入框与密码框" class="headerlink" title="输入框与密码框"></a>输入框与密码框</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ &lt;p&gt;名字: &lt;input <span class="built_in">type</span>=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> size=<span class="string">&quot;33&quot;</span>&gt;&lt;/p&gt;    &lt;!-- text指输入框  size 文本框的长度 --&gt;</span><br><span class="line">$ &lt;p&gt;密码: &lt;input <span class="built_in">type</span>=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;pwd&quot;</span> maxlength=<span class="string">&quot;8&quot;</span> size=<span class="string">&quot;33&quot;</span>&gt;&lt;/p&gt;    &lt;!-- password指密码框   maxlength最大长度 --&gt;   </span><br></pre></td></tr></table></figure>
<p><font color="#DC143C"> 以下为效果</font></p>
<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>HTML基本控件大集合</title>
</head>
<body>
<p>名字: <input type="text" name="username" size="33"></p>    
<p>密码: <input type="password" name="pwd" maxlength="8" size="33"></p> 
</body>
</html>

<hr>
<!-- <font size=28 color='#00BFFF'>-------------------------------------------------------------------</font> -->

<h1 id="get与post"><a href="#get与post" class="headerlink" title="get与post"></a>get与post</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ &lt;form action=<span class="string">&quot;史迪奇的第一个网站.html&quot;</span> mathod=<span class="string">&quot;get&quot;</span>&gt;&lt;/iframe&gt;    &lt;!-- get方式提交 uil可以看到提交信息 不安全 但是高效 --&gt;</span><br><span class="line">$ &lt;form action=<span class="string">&quot;史迪奇的第一个网站.html&quot;</span> mathod=<span class="string">&quot;post&quot;</span>&gt;&lt;/iframe&gt;   &lt;!-- post方式提交 Form Data可以看到提交信息 比较安全 传输大文件 --&gt;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="单选框"><a href="#单选框" class="headerlink" title="单选框"></a>单选框</h1><p><strong>单选框 radio 要value表示单选框的值 name表示组用来实现单选效果</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  &lt;p&gt;</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;radio&quot;</span> value=<span class="string">&quot;boy&quot;</span> name=<span class="string">&quot;sex&quot;</span>/&gt;男</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;radio&quot;</span> value=<span class="string">&quot;girl&quot;</span> name=<span class="string">&quot;sex&quot;</span>/&gt;女</span><br><span class="line">$  &lt;/p&gt;</span><br></pre></td></tr></table></figure>
<p><font color="#DC143C"> 以下为效果</font></p>
<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>HTML基本控件大集合</title>
</head>
<body>
<p>
    <input type="radio" value="boy" name="sex">男
    <input type="radio" value="girl" name="sex">女
</p>
</body>
</html>

<hr>
<h1 id="多选框"><a href="#多选框" class="headerlink" title="多选框"></a>多选框</h1><p><strong>多选框 checkbox 也要value表示单选框的值 name表示组用来实现单选效果</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  &lt;p&gt;</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;checkbox&quot;</span> value=<span class="string">&quot;code&quot;</span> name=<span class="string">&quot;hobby&quot;</span>/&gt;敲代码</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;checkbox&quot;</span> value=<span class="string">&quot;sleep&quot;</span> name=<span class="string">&quot;hobby&quot;</span>/&gt;睡觉</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;checkbox&quot;</span> value=<span class="string">&quot;eat&quot;</span> name=<span class="string">&quot;hobby&quot;</span>/&gt;吃饭</span><br><span class="line">$  &lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p><font color="#DC143C"> 以下为效果</font></p>
<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>HTML基本控件大集合</title>
</head>
<body>
<p>
    <input type="checkbox" value="code" name="hobby">敲代码
    <input type="checkbox" value="sleep" name="hobby">睡觉
    <input type="checkbox" value="eat" name="hobby">吃饭
</p>
</body>
</html>

<hr>
<h1 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  &lt;p&gt;</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;code&quot;</span> name=<span class="string">&quot;btn1&quot;</span>/&gt;   &lt;!-- button普通按钮 --&gt;</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;image&quot;</span> src=<span class="string">&quot;...&quot;</span>/&gt;   &lt;!-- 图片按钮 这里懒得添加图片了--&gt;</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;submit&quot;</span>&gt;       &lt;!-- submit提交 --&gt;</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;reset&quot;</span>&gt;        &lt;!-- reset重置 --&gt;</span><br><span class="line">$  &lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p><font color="#DC143C"> 以下为效果</font></p>
<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>HTML基本控件大集合</title>
</head>
<body>
<p>
    <input type="button" value="code" name="btn1">
    <input type="image" src="...">
    <input type="submit">  
    <input type="reset">   
</p>
</body>
</html>

<hr>
<h1 id="下拉框-列表框"><a href="#下拉框-列表框" class="headerlink" title="下拉框/列表框"></a>下拉框/列表框</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  &lt;p&gt;</span><br><span class="line">$  地区:</span><br><span class="line">$      &lt;select name=<span class="string">&quot;列表名称&quot;</span>&gt;</span><br><span class="line">$      &lt;option value=<span class="string">&quot;选择地区&quot;</span>&gt;金星&lt;/option&gt;</span><br><span class="line">$      &lt;option value=<span class="string">&quot;选择地区&quot;</span>&gt;木星&lt;/option&gt;</span><br><span class="line">$      &lt;option value=<span class="string">&quot;选择地区&quot;</span>&gt;水星&lt;/option&gt;</span><br><span class="line">$      &lt;option value=<span class="string">&quot;选择地区&quot;</span>&gt;火星&lt;/option&gt;</span><br><span class="line">$      &lt;option value=<span class="string">&quot;选择地区&quot;</span>&gt;图星&lt;/option&gt;</span><br><span class="line">$      &lt;option value=<span class="string">&quot;选择地区&quot;</span>&gt;地球&lt;/option&gt;</span><br><span class="line">$      &lt;/select&gt;</span><br><span class="line">$  &lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p><font color="#DC143C"> 以下为效果</font></p>
<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>HTML基本控件大集合</title>
</head>
<body>
<p>
地区:
    <select name="列表名称">
    <option value="选择地区">金星</option>
    <option value="选择地区">木星</option>
    <option value="选择地区">水星</option>
    <option value="选择地区">火星</option>
    <option value="选择地区">土星</option>
    <option value="选择地区">地球</option>
    </select>
</p>
</body>
</html>

<hr>
<h1 id="文本域"><a href="#文本域" class="headerlink" title="文本域"></a>文本域</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  &lt;p&gt;反馈:</span><br><span class="line">$       &lt;!--textarea表示文本域 cols表示列 row表示行 --&gt;</span><br><span class="line">$      &lt;textarea name = <span class="string">&quot;textarea&quot;</span> cols=<span class="string">&quot;50&quot;</span> row=<span class="string">&quot;10&quot;</span>&gt;文本内容&lt;/textarea&gt;    </span><br><span class="line">$  &lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p><font color="#DC143C"> 以下为效果</font></p>
<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>HTML基本控件大集合t</title>
</head>
<body>
<p>反馈:
    <textarea name="textarea" cols="50" row="10">文本内容</textarea>    
</p>
</body>
</html>

<hr>
<h1 id="文件域"><a href="#文件域" class="headerlink" title="文件域"></a>文件域</h1><p><strong>通过name属性上传, 没有name属性就上传不了</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  &lt;p&gt;请选择文件:</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;files&quot;</span>&gt;</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;上传&quot;</span> name=<span class="string">&quot;upload&quot;</span>&gt;</span><br><span class="line">$  &lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p><font color="#DC143C"> 以下为效果</font></p>
<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>HTML基本控件大集合</title>
</head>
<body>
<p>请选择文件:
    <input type="file" name="files">
    <input type="button" value="上传" name="upload">
</p>
</body>
</html>

<hr>
<h1 id="简单验证"><a href="#简单验证" class="headerlink" title="简单验证"></a>简单验证</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  &lt;p&gt;邮箱:</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;email&quot;</span> name=<span class="string">&quot;email&quot;</span>&gt;   &lt;!-- email表示邮箱 --&gt;</span><br><span class="line">$  &lt;/p&gt;</span><br><span class="line">$</span><br><span class="line">$  &lt;p&gt;网址:</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;url&quot;</span> name=<span class="string">&quot;url&quot;</span>&gt;       &lt;!-- url表示网址 --&gt;</span><br><span class="line">$  &lt;/p&gt;</span><br><span class="line">$</span><br><span class="line">$  &lt;p&gt;商品数量:</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;number&quot;</span> name=<span class="string">&quot;num&quot;</span> max=<span class="string">&quot;100&quot;</span> min=<span class="string">&quot;0&quot;</span> step=<span class="string">&quot;1&quot;</span>&gt;       &lt;!-- number表示数字 max表示最大值 min表示最小值 step表示步长 --&gt;</span><br><span class="line">$  &lt;/p&gt;</span><br><span class="line">$</span><br><span class="line">$  &lt;p&gt;声音大小:</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;range&quot;</span> name=<span class="string">&quot;voice&quot;</span> max=<span class="string">&quot;100&quot;</span> min=<span class="string">&quot;0&quot;</span> step=<span class="string">&quot;1&quot;</span> &gt;       &lt;!-- range表示滑块 max表示最大值 min表示最小值 step表示步长 --&gt;</span><br><span class="line">$</span><br><span class="line">$  &lt;/p&gt;</span><br><span class="line">$  &lt;p&gt;搜索框:</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;search&quot;</span> name=<span class="string">&quot;search&quot;</span>&gt;       &lt;!-- search表示搜索框 --&gt;</span><br><span class="line">$  &lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p><font color="#DC143C"> 以下为效果</font></p>
<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>HTML基本控件大集合</title>    
</head>
<body>
<p>邮箱:
    <input type="email" name="email">   
</p>
<p>网址:
    <input type="url" name="url">       
</p>
<p>商品数量:
    <input type="number" name="num" max="100" min="0" step="1">       
</p>
<p>声音大小:
    <input type="range" name="voice" max="100" min="0" step="1" style="width:350px;">       
</p>
<p>搜索框:
    <input type="search" name="search">       
</p>
</body>
</html>

<hr>
<h1 id="表单应用"><a href="#表单应用" class="headerlink" title="表单应用"></a>表单应用</h1><p><strong>隐藏域 hidden</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ &lt;p&gt;名字: &lt;input <span class="built_in">type</span>=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> size=<span class="string">&quot;33&quot;</span>&gt;&lt;/p&gt;</span><br><span class="line">$ &lt;p&gt;密码: &lt;input <span class="built_in">type</span>=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;pwd&quot;</span> maxlength=<span class="string">&quot;8&quot;</span> size=<span class="string">&quot;33&quot;</span> hidden&gt;&lt;/p&gt;    &lt;!-- hidden表示隐藏 --&gt;</span><br></pre></td></tr></table></figure>
<p><font color="#DC143C"> 以下为效果</font></p>
<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>HTML基本控件大集合</title>
</head>
<body>
<p>名字: <input type="text" name="username" size="33"></p>
<p>密码: <input type="password" name="pwd" maxlength="8" size="33" hidden></p> 
</body>
</html>

<hr>
<p><strong>只读 readonly</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  &lt;span&gt;贱贱的操作:&lt;/span&gt;</span><br><span class="line">$   &lt;p&gt;名字: &lt;input <span class="built_in">type</span>=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> value=<span class="string">&quot;史迪奇国王&quot;</span> <span class="built_in">readonly</span>&gt;&lt;/p&gt;   &lt;!-- <span class="built_in">readonly</span>表示只读 --&gt;</span><br><span class="line">$   &lt;p&gt;密码: &lt;input <span class="built_in">type</span>=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;pwd&quot;</span>&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure>
<p><font color="#DC143C"> 以下为效果</font></p>
<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>HTML基本控件大集合</title>
</head>
<body>
<span>贱贱的操作:</span>
 <p>名字: <input type="text" name="username" value="史迪奇国王" readonly></p>
 <p>密码: <input type="password" name="pwd"></p>
</body>
</html>

<hr>
<p><strong>禁用 checked disabled</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  &lt;p&gt;</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;radio&quot;</span> value=<span class="string">&quot;boy&quot;</span> name=<span class="string">&quot;sex&quot;</span>/&gt;男</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;radio&quot;</span> value=<span class="string">&quot;girl&quot;</span> name=<span class="string">&quot;sex&quot;</span> checked disabled/&gt;女  &lt;!-- checked disabled表示禁用 假如你是男生也会默认给你性别女, 并且不能更改 --&gt;</span><br><span class="line">$  &lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p><font color="#DC143C"> 以下为效果</font></p>
<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>HTML基本控件大集合</title>
</head>
<body>
<p>
    <input type="radio" value="boy" name="sex" disabled>男
    <input type="radio" value="girl" name="sex" checked disabled>女  
</p>
</body>
</html>

<hr>
<h1 id="扩大鼠标范围"><a href="#扩大鼠标范围" class="headerlink" title="扩大鼠标范围"></a>扩大鼠标范围</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  &lt;p&gt;</span><br><span class="line">$      &lt;label <span class="keyword">for</span>=<span class="string">&quot;sdq&quot;</span>&gt;扩大范围至文字&lt;/label&gt;  &lt;!-- label标签扩充鼠标的可用性 --&gt;</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;sdq&quot;</span>&gt;</span><br><span class="line">$  &lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p><font color="#DC143C"> 以下为效果</font></p>
<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>HTML基本控件大集合</title>
</head>
<body>
<p>
    <label for="sdq">扩大范围至文字</label>
    <input type="text" id="sdq">
</p>
</body>
</html>

<hr>
<h1 id="提示信息"><a href="#提示信息" class="headerlink" title="提示信息"></a>提示信息</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ &lt;p&gt;账户: &lt;input <span class="built_in">type</span>=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> size=<span class="string">&quot;33&quot;</span> placeholder=<span class="string">&quot;请输入账号&quot;</span> required&gt;&lt;/p&gt;   &lt;!-- required表示非空状态 也就是说必须要填 --&gt;</span><br><span class="line">$ &lt;p&gt;密码: &lt;input <span class="built_in">type</span>=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;pwd&quot;</span> maxlength=<span class="string">&quot;8&quot;</span> size=<span class="string">&quot;33&quot;</span> placeholder=<span class="string">&quot;请输入密码&quot;</span>&gt;&lt;/p&gt;   &lt;!-- placeholder表示提示信息 --&gt;</span><br></pre></td></tr></table></figure>

<p><font color="#DC143C"> 以下为效果</font></p>
<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>HTML基本控件大集合</title>
</head>
<body>
<p>账户: <input type="text" name="username" size="33" placeholder="请输入账号" required></p>
<p>密码: <input type="password" name="pwd" maxlength="8" size="33" placeholder="请输入密码"></p>
</body>
</html>

<hr>
<h1 id="正则表达式-pattern"><a href="#正则表达式-pattern" class="headerlink" title="正则表达式 pattern"></a>正则表达式 pattern</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  &lt;p&gt;自定义邮箱</span><br><span class="line">$      &lt;input <span class="built_in">type</span>=text name=<span class="string">&quot;diymain&quot;</span> pattern=<span class="string">&quot;邮箱的正则表达式&quot;</span>&gt;  &lt;!-- pattern表示正则表达式  diy意思是自定义 --&gt;</span><br><span class="line">$  &lt;/p&gt;</span><br></pre></td></tr></table></figure>

<p><font color="#DC143C"> 以下为效果</font></p>
<!DOCTYPE html>
<html lang="cn">
<head>
    <meta charset="UTF-8">
    <title>HTML基本控件大集合</title>
</head>
<body>
<p>自定义邮箱
    <input type="text" name="diymain" pattern="邮箱的正则表达式">
</p></body>
</html>

<hr>
<p><img src="/images/HTML%E5%8F%AF%E6%93%8D%E4%BD%9C%E5%A4%A7%E9%9B%86%E5%90%88/%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0%E6%A0%BC%E5%BC%8F.jpg"></p>
<h1 id="只要input都需要value值和name值-这样就可以养成好习惯"><a href="#只要input都需要value值和name值-这样就可以养成好习惯" class="headerlink" title="只要input都需要value值和name值, 这样就可以养成好习惯"></a>只要input都需要value值和name值, 这样就可以养成好习惯</h1>]]></content>
  </entry>
  <entry>
    <title>HTML 表格</title>
    <url>/HTML-form.html</url>
    <content><![CDATA[<p><strong>HTML个人整理</strong></p>
<a id="more"></a>

<h1 id="table"><a href="#table" class="headerlink" title="table"></a>table</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ tr  //行</span><br><span class="line">$ td  //列</span><br></pre></td></tr></table></figure>

<h1 id="跨列"><a href="#跨列" class="headerlink" title="跨列"></a>跨列</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">$    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">$        <span class="tag">&lt;<span class="name">tb</span> <span class="attr">cospan</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">$     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="跨行"><a href="#跨行" class="headerlink" title="跨行"></a>跨行</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$ <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">$    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">$        <span class="tag">&lt;<span class="name">tb</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">$     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">$ <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>JavaScript 数据类型之(Map和Set)</title>
    <url>/JavaScript-Map-Set.html</url>
    <content><![CDATA[<p><strong>JavaScript个人整理</strong></p>
<a id="more"></a>

<h1 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  <span class="comment">/*ES6 Map*/</span></span><br><span class="line">$  <span class="comment">/*学生的成绩, 学生的名字 两种方式*/</span></span><br><span class="line">$  <span class="keyword">var</span> names = [<span class="string">&quot;史迪奇&quot;</span>,<span class="string">&quot;史迪仔&quot;</span>,<span class="string">&quot;强霸&quot;</span>];</span><br><span class="line">$  <span class="keyword">var</span> scores = [<span class="number">100</span>,<span class="number">100</span>,<span class="number">36</span>]</span><br><span class="line">$  <span class="comment">/*另一种*/</span></span><br><span class="line">$  <span class="keyword">var</span> map = naw <span class="built_in">Map</span>([[<span class="string">&quot;史迪奇&quot;</span>,<span class="number">100</span>],[<span class="string">&quot;史迪仔&quot;</span>,<span class="number">100</span>],[<span class="string">&quot;强霸&quot;</span>,<span class="number">36</span>]]);</span><br><span class="line">$  <span class="keyword">var</span> name = map.get(<span class="string">&quot;史迪奇&quot;</span>);    <span class="comment">/*通过key获得value*/</span> </span><br><span class="line">$  map.set(<span class="string">&quot;独眼霹雳&quot;</span>,<span class="number">60</span>);          <span class="comment">/*新增或修改*/</span> </span><br><span class="line">$  map.delete(<span class="string">&quot;强霸&quot;</span>);              <span class="comment">/*删除*/</span></span><br></pre></td></tr></table></figure>
<h1 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   set.add(<span class="number">3</span>)                 <span class="comment">/*添加*/</span>  </span><br><span class="line">$   set.delete(<span class="string">&quot;强霸&quot;</span>);        <span class="comment">/*删除*/</span></span><br><span class="line">$   <span class="built_in">console</span>.log(set.has(<span class="number">3</span>))    <span class="comment">/*是否包含某个元素*/</span></span><br></pre></td></tr></table></figure>
<h1 id="iterator"><a href="#iterator" class="headerlink" title="iterator"></a>iterator</h1><p><strong>遍历数组</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   <span class="comment">/*通过for of, for in 下标 */</span>  </span><br><span class="line">$   <span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">$   <span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">of</span> arr)&#123;</span><br><span class="line">$        <span class="built_in">console</span>.log(x)</span><br><span class="line">$   &#125;</span><br></pre></td></tr></table></figure>
<p><strong>遍历map</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="string">&quot;史迪奇&quot;</span>,<span class="number">100</span>],[<span class="string">&quot;史迪仔&quot;</span>,<span class="number">100</span>],[<span class="string">&quot;强霸&quot;</span>,<span class="number">100</span>]]);</span><br><span class="line">$   <span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">of</span> map)&#123;</span><br><span class="line">$        <span class="built_in">console</span>.log(x)</span><br><span class="line">$   &#125;</span><br></pre></td></tr></table></figure>
<p><strong>遍历set</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   <span class="keyword">var</span> set = <span class="keyword">new</span> set([[<span class="string">&quot;史迪奇&quot;</span>,<span class="number">100</span>],[<span class="string">&quot;史迪仔&quot;</span>,<span class="number">100</span>],[<span class="string">&quot;强霸&quot;</span>,<span class="number">100</span>]]);</span><br><span class="line">$   <span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">of</span> set)&#123;</span><br><span class="line">$        <span class="built_in">console</span>.log(x)</span><br><span class="line">$   &#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>JavaScript JavaScript (函数之定义和获取)</title>
    <url>/JavaScript-definition-obtain.html</url>
    <content><![CDATA[<p><strong>JavaScript个人整理</strong></p>
<a id="more"></a>

<h1 id="绝对值函数"><a href="#绝对值函数" class="headerlink" title="绝对值函数"></a>绝对值函数</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  <span class="function"><span class="keyword">function</span> <span class="title">abs</span>(<span class="params">x</span>) </span>&#123;&#125;</span><br><span class="line">$      <span class="keyword">if</span>(x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">$          <span class="keyword">return</span> x;</span><br><span class="line">$      &#125;</span><br><span class="line">$      <span class="keyword">else</span> &#123;</span><br><span class="line">$          <span class="keyword">return</span> -x;</span><br><span class="line">$      &#125;</span><br><span class="line">$  &#125;</span><br></pre></td></tr></table></figure>
<p><strong>一旦执行return 代表函数结束,返回结果 没有执行return, 函数执行完也会返回结果 undefined</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  <span class="keyword">var</span> abs = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;&#125;</span><br><span class="line">$      <span class="keyword">if</span>(x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">$          <span class="keyword">return</span> x;</span><br><span class="line">$      &#125;</span><br><span class="line">$      <span class="keyword">else</span> &#123;</span><br><span class="line">$          <span class="keyword">return</span> -x;</span><br><span class="line">$      &#125;</span><br><span class="line">$  &#125;</span><br></pre></td></tr></table></figure>
<p><strong>function(x){….}是匿名函数, 可以把结果赋值给abs, 可以调用函数</strong></p>
<h1 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h1><p><strong>可以传任意个参数, 也可以不传递参数 假设不传递参数, 如何规避</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  <span class="keyword">var</span> abs = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;&#125;</span><br><span class="line">$      <span class="comment">//手动抛出异常来判断</span></span><br><span class="line">$      <span class="keyword">if</span> (<span class="keyword">typeof</span> x!== <span class="string">&quot;number&quot;</span>) &#123;</span><br><span class="line">$          thow <span class="string">&quot;Not a Number&quot;</span>;</span><br><span class="line">$      &#125;</span><br><span class="line">$      <span class="keyword">if</span>(x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">$          <span class="keyword">return</span> x;</span><br><span class="line">$      &#125;</span><br><span class="line">$      <span class="keyword">else</span> &#123;</span><br><span class="line">$          <span class="keyword">return</span> -x;</span><br><span class="line">$      &#125;</span><br><span class="line">$  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="arguments-传递进来的所有的参数是一个数组"><a href="#arguments-传递进来的所有的参数是一个数组" class="headerlink" title="arguments 传递进来的所有的参数是一个数组"></a>arguments 传递进来的所有的参数是一个数组</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  <span class="keyword">var</span> abs = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>) </span>&#123;&#125;</span><br><span class="line">$      <span class="built_in">console</span>.log(<span class="string">&quot;x=&gt;&quot;</span>+x)</span><br><span class="line">$          thow <span class="string">&quot;Not a Number&quot;</span>;</span><br><span class="line">$      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i&lt;<span class="built_in">arguments</span>.length;i++)&#123;</span><br><span class="line">$          <span class="built_in">console</span>,log(<span class="built_in">arguments</span>[i]);</span><br><span class="line">$      &#125;</span><br><span class="line">$      <span class="keyword">if</span>(x&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">$          <span class="keyword">return</span> x;</span><br><span class="line">$      &#125;</span><br><span class="line">$      <span class="keyword">else</span> &#123;</span><br><span class="line">$          <span class="keyword">return</span> -x;</span><br><span class="line">$      &#125;</span><br><span class="line">$  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="rest"><a href="#rest" class="headerlink" title="rest"></a>rest</h1><p><strong>以前:</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   <span class="keyword">if</span> (<span class="built_in">arguments</span>.;length&gt;<span class="number">2</span>) &#123;</span><br><span class="line">$   <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">2</span>;i&lt;<span class="built_in">arguments</span>.length;i++) &#123;</span><br><span class="line">$        &#125;</span><br><span class="line">$   &#125;</span><br></pre></td></tr></table></figure>
<p><strong>ES6的引入的新特性, 获取除了已经定义的参数之外的所有参数</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   <span class="function"><span class="keyword">function</span> <span class="title">sdq</span>(<span class="params">s,d,q,... rest</span>) </span>&#123;&#125;</span><br><span class="line">$       <span class="built_in">console</span>.log(<span class="string">&quot;s=&gt;&quot;</span>+s);</span><br><span class="line">$       <span class="built_in">console</span>.log(<span class="string">&quot;d=&gt;&quot;</span>+d);</span><br><span class="line">$       <span class="built_in">console</span>.log(<span class="string">&quot;q=&gt;&quot;</span>+q);</span><br><span class="line">$       <span class="built_in">console</span>.log(rest);</span><br><span class="line">$   &#125;</span><br></pre></td></tr></table></figure>
<p><strong>rest参数只能写在最后面, 必须用…标识</strong></p>
]]></content>
  </entry>
  <entry>
    <title>JavaScript 数据类型之(分支和循环)</title>
    <url>/JavaScript-branch-loop.html</url>
    <content><![CDATA[<p><strong>JavaScript个人整理</strong></p>
<a id="more"></a>

<h1 id="if-判断-循环"><a href="#if-判断-循环" class="headerlink" title="if 判断/循环"></a>if 判断/循环</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  <span class="keyword">var</span> age = <span class="number">3</span>;</span><br><span class="line">$  <span class="keyword">if</span>(sdq &gt; <span class="number">3</span>)&#123;    <span class="comment">/*第一个判断*/</span></span><br><span class="line">$   alert(<span class="string">&quot;史迪奇骑士&quot;</span>);</span><br><span class="line">$   &#125;</span><br><span class="line">$  <span class="keyword">else</span> <span class="keyword">if</span>(sdq &lt; <span class="number">5</span>)&#123;    <span class="comment">/*第二个判断*/</span></span><br><span class="line">$   alert(<span class="string">&quot;史迪奇国王&quot;</span>);</span><br><span class="line">$   &#125;</span><br><span class="line">$  <span class="keyword">else</span> &#123;               <span class="comment">/*否则*/</span></span><br><span class="line">$   alert(<span class="string">&quot;史迪奇战士&quot;</span>);</span><br><span class="line">$   &#125; </span><br></pre></td></tr></table></figure>
<h1 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   <span class="keyword">while</span>(sdq &lt; <span class="number">100</span>)&#123;</span><br><span class="line">$        sdq = sdq + <span class="number">1</span>;</span><br><span class="line">$        <span class="built_in">console</span>.log(sdq)</span><br><span class="line">$        &#125;  </span><br></pre></td></tr></table></figure>
<h1 id="do-while-循环"><a href="#do-while-循环" class="headerlink" title="do while 循环"></a>do while 循环</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   <span class="keyword">do</span> &#123;</span><br><span class="line">$        sdq = sdq + <span class="number">1</span>;</span><br><span class="line">$        <span class="built_in">console</span>.log(sdq)</span><br><span class="line">$        &#125; </span><br><span class="line">$    <span class="keyword">while</span>(sdq &lt; <span class="number">100</span>) </span><br></pre></td></tr></table></figure>
<h1 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)&#123;</span><br><span class="line">$       <span class="built_in">console</span>.log(i)</span><br><span class="line">$  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="forEach-循环"><a href="#forEach-循环" class="headerlink" title="forEach 循环"></a>forEach 循环</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   <span class="keyword">var</span> sdq = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>];</span><br><span class="line">$   <span class="comment">/*函数*/</span></span><br><span class="line">$   sdq.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">$       <span class="built_in">console</span>.log(value)</span><br><span class="line">$   &#125;)</span><br></pre></td></tr></table></figure>
<h1 id="for-…-in-循环"><a href="#for-…-in-循环" class="headerlink" title="for … in 循环"></a>for … in 循环</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   <span class="keyword">for</span>(<span class="keyword">var</span> sdq <span class="keyword">in</span> age) &#123;</span><br><span class="line">$       <span class="keyword">if</span> (sdq.hasOwnProperty(sdz)) &#123;</span><br><span class="line">$           <span class="built_in">console</span>.log(<span class="string">&quot;存在&quot;</span>)</span><br><span class="line">$           <span class="built_in">console</span>.log(sdq[sdz])</span><br><span class="line">$       &#125;</span><br><span class="line">$   &#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>JavaScript 数据类型之(Map和Set)</title>
    <url>/JavaScript-Map-Set.html</url>
    <content><![CDATA[<p><strong>JavaScript个人整理</strong></p>
<a id="more"></a>

<h1 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  <span class="comment">/*ES6 Map*/</span></span><br><span class="line">$  <span class="comment">/*学生的成绩, 学生的名字 两种方式*/</span></span><br><span class="line">$  <span class="keyword">var</span> names = [<span class="string">&quot;史迪奇&quot;</span>,<span class="string">&quot;史迪仔&quot;</span>,<span class="string">&quot;强霸&quot;</span>];</span><br><span class="line">$  <span class="keyword">var</span> scores = [<span class="number">100</span>,<span class="number">100</span>,<span class="number">36</span>]</span><br><span class="line">$  <span class="comment">/*另一种*/</span></span><br><span class="line">$  <span class="keyword">var</span> map = naw <span class="built_in">Map</span>([[<span class="string">&quot;史迪奇&quot;</span>,<span class="number">100</span>],[<span class="string">&quot;史迪仔&quot;</span>,<span class="number">100</span>],[<span class="string">&quot;强霸&quot;</span>,<span class="number">36</span>]]);</span><br><span class="line">$  <span class="keyword">var</span> name = map.get(<span class="string">&quot;史迪奇&quot;</span>);    <span class="comment">/*通过key获得value*/</span> </span><br><span class="line">$  map.set(<span class="string">&quot;独眼霹雳&quot;</span>,<span class="number">60</span>);          <span class="comment">/*新增或修改*/</span> </span><br><span class="line">$  map.delete(<span class="string">&quot;强霸&quot;</span>);              <span class="comment">/*删除*/</span></span><br></pre></td></tr></table></figure>
<h1 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   set.add(<span class="number">3</span>)                 <span class="comment">/*添加*/</span>  </span><br><span class="line">$   set.delete(<span class="string">&quot;强霸&quot;</span>);        <span class="comment">/*删除*/</span></span><br><span class="line">$   <span class="built_in">console</span>.log(set.has(<span class="number">3</span>))    <span class="comment">/*是否包含某个元素*/</span></span><br></pre></td></tr></table></figure>
<h1 id="iterator"><a href="#iterator" class="headerlink" title="iterator"></a>iterator</h1><p><strong>遍历数组</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   <span class="comment">/*通过for of, for in 下标 */</span>  </span><br><span class="line">$   <span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">$   <span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">of</span> arr)&#123;</span><br><span class="line">$        <span class="built_in">console</span>.log(x)</span><br><span class="line">$   &#125;</span><br></pre></td></tr></table></figure>
<p><strong>遍历map</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="built_in">Map</span>([[<span class="string">&quot;史迪奇&quot;</span>,<span class="number">100</span>],[<span class="string">&quot;史迪仔&quot;</span>,<span class="number">100</span>],[<span class="string">&quot;强霸&quot;</span>,<span class="number">100</span>]]);</span><br><span class="line">$   <span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">of</span> map)&#123;</span><br><span class="line">$        <span class="built_in">console</span>.log(x)</span><br><span class="line">$   &#125;</span><br></pre></td></tr></table></figure>
<p><strong>遍历set</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   <span class="keyword">var</span> set = <span class="keyword">new</span> set([[<span class="string">&quot;史迪奇&quot;</span>,<span class="number">100</span>],[<span class="string">&quot;史迪仔&quot;</span>,<span class="number">100</span>],[<span class="string">&quot;强霸&quot;</span>,<span class="number">100</span>]]);</span><br><span class="line">$   <span class="keyword">for</span> (<span class="keyword">var</span> x <span class="keyword">of</span> set)&#123;</span><br><span class="line">$        <span class="built_in">console</span>.log(x)</span><br><span class="line">$   &#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>JavaScript 数据类型之(字符串类型)</title>
    <url>/JavaScript-string.html</url>
    <content><![CDATA[<p><strong>JavaScript个人整理</strong></p>
<a id="more"></a>

<h1 id="字符串常用"><a href="#字符串常用" class="headerlink" title="字符串常用"></a>字符串常用</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$ <span class="string">&quot;字符串&quot;</span>     <span class="comment">/*双引号包裹*/</span></span><br><span class="line">$ <span class="string">&#x27;字符串&#x27;</span>     <span class="comment">/*单引号包裹*/</span></span><br></pre></td></tr></table></figure>

<h1 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  \<span class="string">&#x27;           /*代表它是一个字符串*/</span></span><br><span class="line"><span class="string">$  \n           /*换行*/</span></span><br><span class="line"><span class="string">$  \t           /*tab*/</span></span><br><span class="line"><span class="string">$  \u5d3d       /*Unicode字符*/</span></span><br><span class="line"><span class="string">$  \x45         /*Asll字符*/</span></span><br></pre></td></tr></table></figure>
<h1 id="多行字符串编写"><a href="#多行字符串编写" class="headerlink" title="多行字符串编写"></a>多行字符串编写</h1><p><strong>例子</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$ <span class="comment">/*tab键上面  esc键下面*/</span></span><br><span class="line">$    <span class="keyword">var</span> msg =</span><br><span class="line">$        haha</span><br><span class="line">$   哈哈</span><br><span class="line">$   蛤蛤  </span><br></pre></td></tr></table></figure>
<h1 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h1><p><strong>例子</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$ <span class="comment">/*tab键上面  esc键下面*/</span></span><br><span class="line">$    <span class="keyword">let</span> sdq = <span class="string">&quot;史迪奇&quot;</span>;</span><br><span class="line">$    <span class="keyword">let</span> sdz = <span class="string">&quot;史迪仔&quot;</span>;</span><br><span class="line">$    <span class="keyword">let</span> age = <span class="number">119</span>;</span><br><span class="line">$    <span class="keyword">let</span> sdqz = <span class="string">&#x27;我叫.$&#123;sdq&#125;&#x27;</span>;</span><br></pre></td></tr></table></figure>
<h1 id="字符串长度"><a href="#字符串长度" class="headerlink" title="字符串长度"></a>字符串长度</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   str.length</span><br></pre></td></tr></table></figure>
<h1 id="大小写转换"><a href="#大小写转换" class="headerlink" title="大小写转换"></a>大小写转换</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  <span class="comment">/*是方法不是属性*/</span></span><br><span class="line">$  sdq.toUpperCase()          <span class="comment">/*大写*/</span></span><br><span class="line">$  sdq.LowerCase()          <span class="comment">/*小写*/</span></span><br></pre></td></tr></table></figure>
<h1 id="字符串截取"><a href="#字符串截取" class="headerlink" title="字符串截取"></a>字符串截取</h1><p><strong>subsrting</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  sdq.subsrting(<span class="number">1</span>)          <span class="comment">/*从第一个字符串截取到最后一个字符串*/</span></span><br><span class="line">$  sdq.LowerCase(<span class="number">1</span>,<span class="number">3</span>)          <span class="comment">/*包头不包尾*/</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>JavaScript 数据类型之(数组类型)</title>
    <url>/JavaScript-array.html</url>
    <content><![CDATA[<p><strong>JavaScript个人整理</strong></p>
<a id="more"></a>

<h1 id="Array可以包含任意的数据类型"><a href="#Array可以包含任意的数据类型" class="headerlink" title="Array可以包含任意的数据类型"></a>Array可以包含任意的数据类型</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  <span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>];     <span class="comment">/*通过下标取值和赋值*/</span></span><br><span class="line">$  arr[<span class="number">0</span>]</span><br><span class="line">$  arr[<span class="number">3</span>] = <span class="number">3</span></span><br></pre></td></tr></table></figure>
<h1 id="数组长度"><a href="#数组长度" class="headerlink" title="数组长度"></a>数组长度</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   arr.length      <span class="comment">/*赋值过小值, 元素就会丢失*/</span></span><br></pre></td></tr></table></figure>
<h1 id="indexOf-通过元素获得下标"><a href="#indexOf-通过元素获得下标" class="headerlink" title="indexOf  通过元素获得下标"></a>indexOf  通过元素获得下标</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  <span class="keyword">var</span> arr = [<span class="number">0</span>,<span class="number">1</span>]; </span><br><span class="line">$  arr.indexOf(<span class="number">2</span>);  <span class="comment">/*输出1  字符串&quot;1&quot;和数字1是不同的*/</span></span><br></pre></td></tr></table></figure>
<h1 id="slice-截取Array的一部分-返回一个数组"><a href="#slice-截取Array的一部分-返回一个数组" class="headerlink" title="slice() 截取Array的一部分, 返回一个数组"></a>slice() 截取Array的一部分, 返回一个数组</h1><p><strong>例子</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$ slice()   <span class="comment">/*类似于String中的substring*/</span></span><br></pre></td></tr></table></figure>
<h1 id="push-和pop-尾部"><a href="#push-和pop-尾部" class="headerlink" title="push()和pop()尾部"></a>push()和pop()尾部</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   push:    <span class="comment">/*压入到头部*/</span></span><br><span class="line">$   shift:   <span class="comment">/*弹出头部的一个元素*/</span></span><br></pre></td></tr></table></figure>


<h1 id="排序-sort"><a href="#排序-sort" class="headerlink" title="排序 sort()"></a>排序 sort()</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  (<span class="number">3</span>)[<span class="string">&quot;B&quot;</span>,<span class="string">&quot;A&quot;</span>,<span class="string">&quot;C&quot;</span>]         <span class="comment">/*排序前*/</span></span><br><span class="line">$  arr.sort()         </span><br><span class="line">$  (<span class="number">3</span>)[<span class="string">&quot;A&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;C&quot;</span>]         <span class="comment">/*排序后*/</span></span><br></pre></td></tr></table></figure>
<h1 id="元素反转-reverse"><a href="#元素反转-reverse" class="headerlink" title="元素反转 reverse()"></a>元素反转 reverse()</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  (<span class="number">3</span>)[<span class="string">&quot;B&quot;</span>,<span class="string">&quot;A&quot;</span>,<span class="string">&quot;C&quot;</span>]         <span class="comment">/*反转前*/</span></span><br><span class="line">$  arr.reverse()        </span><br><span class="line">$  (<span class="number">3</span>)[<span class="string">&quot;C&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;A&quot;</span>]         <span class="comment">/*反转后*/</span></span><br></pre></td></tr></table></figure>
<h1 id="concat"><a href="#concat" class="headerlink" title="concat()"></a>concat()</h1><p><strong>注意concat()并没有修改数组, 只是会返回一个新的数组</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  (<span class="number">3</span>)[<span class="string">&quot;C&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;A&quot;</span>]</span><br><span class="line">$  arr.concat([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])        </span><br><span class="line">$  (<span class="number">6</span>)[<span class="string">&quot;C&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;A&quot;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">$  arr</span><br><span class="line">$  (<span class="number">3</span>)[<span class="string">&quot;C&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;A&quot;</span>]</span><br></pre></td></tr></table></figure>
<h1 id="join-连接符"><a href="#join-连接符" class="headerlink" title="join 连接符"></a>join 连接符</h1><p><strong>例子</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  (<span class="number">3</span>)[<span class="string">&quot;C&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;A&quot;</span>] </span><br><span class="line">$  arr.join(<span class="string">&#x27;-&#x27;</span>)         <span class="comment">/*使用特定的字符串连接*/</span>   </span><br><span class="line">$  <span class="comment">/*结果输出&quot;C-B-A&quot;*/</span>       </span><br></pre></td></tr></table></figure>
<h1 id="多位数组"><a href="#多位数组" class="headerlink" title="多位数组"></a>多位数组</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  arr = [[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>],[<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>]];</span><br><span class="line">$  arr[<span class="number">1</span>][<span class="number">1</span>]   </span><br><span class="line">$  <span class="comment">/*结果输出4*/</span>  </span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>JavaScript 数据类型之(对象)</title>
    <url>/JavaScript-object.html</url>
    <content><![CDATA[<p><strong>JavaScript个人整理</strong></p>
<a id="more"></a>

<h1 id="JavaScript也是一种面向对象的语言-所有的键都是字符串-值可以是任意对象"><a href="#JavaScript也是一种面向对象的语言-所有的键都是字符串-值可以是任意对象" class="headerlink" title="JavaScript也是一种面向对象的语言 所有的键都是字符串 值可以是任意对象"></a>JavaScript也是一种面向对象的语言 所有的键都是字符串 值可以是任意对象</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  <span class="keyword">var</span> 对象名 = &#123;    </span><br><span class="line">$      属性名: 属性值</span><br><span class="line">$      属性名: 属性值</span><br><span class="line">$      属性名: 属性值</span><br><span class="line">$ &#125; </span><br><span class="line">$</span><br><span class="line">$ <span class="comment">/*通过下标取值和赋值*/</span></span><br><span class="line">$ <span class="keyword">var</span> person = &#123;</span><br><span class="line">$     name: <span class="string">&quot;sdq&quot;</span>,</span><br><span class="line">$     age: <span class="number">3</span>,</span><br><span class="line">$     email: <span class="string">&quot;???????@???&quot;</span></span><br><span class="line">$     score: <span class="number">0</span></span><br><span class="line">$  &#125;</span><br></pre></td></tr></table></figure>
<p><strong>若干个键值对 js中对象, {…..}表示一个对象, 键值对描述属性xxxx: xxxx, 多个属性之间使用逗号隔开, 最后一个属性不加逗号</strong></p>
<h1 id="对象赋值"><a href="#对象赋值" class="headerlink" title="对象赋值"></a>对象赋值</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   person.name = <span class="string">&quot;sdq&quot;</span>      <span class="comment">/*这里赋值sdq*/</span></span><br><span class="line">$   person.name              <span class="comment">/*这里输出sdq*/</span></span><br></pre></td></tr></table></figure>
<h1 id="undefined-使用不存在对象-不会报错"><a href="#undefined-使用不存在对象-不会报错" class="headerlink" title="undefined 使用不存在对象, 不会报错"></a>undefined 使用不存在对象, 不会报错</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  person.sdz</span><br><span class="line">$  <span class="literal">undefined</span></span><br></pre></td></tr></table></figure>
<h1 id="delete-动态的删减属性"><a href="#delete-动态的删减属性" class="headerlink" title="delete 动态的删减属性"></a>delete 动态的删减属性</h1><p><strong>例子</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">delete</span> person.name</span><br><span class="line">$ <span class="literal">true</span></span><br><span class="line">$ person</span><br></pre></td></tr></table></figure>
<h1 id="动态的添加给新的属性添加值"><a href="#动态的添加给新的属性添加值" class="headerlink" title="动态的添加给新的属性添加值"></a>动态的添加给新的属性添加值</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$   person.sdq = <span class="string">&quot;sdz&quot;</span>  <span class="comment">/*这里赋值sdz*/</span></span><br><span class="line">$   person      </span><br></pre></td></tr></table></figure>
<h1 id="判断属性值是否在这个对象-属性值是否在这个对象"><a href="#判断属性值是否在这个对象-属性值是否在这个对象" class="headerlink" title="判断属性值是否在这个对象  属性值是否在这个对象"></a>判断属性值是否在这个对象  属性值是否在这个对象</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  <span class="string">&quot;sdq&quot;</span> <span class="keyword">in</span> person        </span><br><span class="line">$  <span class="literal">true</span>         </span><br><span class="line">$  <span class="string">&quot;sdqz&quot;</span> <span class="keyword">in</span> person   </span><br><span class="line">$  <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h1 id="判断属性是否是这个对象自身拥有的-hasOwnProperty"><a href="#判断属性是否是这个对象自身拥有的-hasOwnProperty" class="headerlink" title="判断属性是否是这个对象自身拥有的 hasOwnProperty()"></a>判断属性是否是这个对象自身拥有的 hasOwnProperty()</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$  person.hasOwnProperty(<span class="string">&quot;toString&quot;</span>)</span><br><span class="line">$  <span class="literal">false</span>       </span><br><span class="line">$  person.hasOwnProperty(<span class="string">&quot;sdq&quot;</span>)</span><br><span class="line">$  <span class="literal">true</span></span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>Java面向对象思维</title>
    <url>/Object-oriented.html</url>
    <content><![CDATA[<p><strong>学习Java个人整理</strong></p>
<a id="more"></a>

<h1 id="例如造一辆车-而车有什么属性？-例如-车有颜色-车有轮子-车座位"><a href="#例如造一辆车-而车有什么属性？-例如-车有颜色-车有轮子-车座位" class="headerlink" title="例如造一辆车 而车有什么属性？ 例如 车有颜色 车有轮子 车座位"></a>例如造一辆车 而车有什么属性？ 例如 车有颜色 车有轮子 车座位</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   //成员变量</span><br><span class="line">$ public class Car &#123;</span><br><span class="line">$ String color;  //颜色</span><br><span class="line">$ int wheel;   //轮子</span><br><span class="line">$ int seat;   //座位</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>

<h1 id="动作"><a href="#动作" class="headerlink" title="动作"></a>动作</h1><p><strong>例如车能飞</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   //成员方法</span><br><span class="line">$ public void <span class="function"><span class="title">fly</span></span>()&#123;</span><br><span class="line">$ System.out.println(<span class="string">&quot;车能飞&quot;</span>);</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<p><strong>例如车可以潜水</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   //成员方法</span><br><span class="line">$ public void <span class="function"><span class="title">diving</span></span>()&#123;</span><br><span class="line">$ System.out.println(<span class="string">&quot;车可以下水&quot;</span>);</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<h1 id="执行main方法"><a href="#执行main方法" class="headerlink" title="执行main方法"></a>执行main方法</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   //成员方法</span><br><span class="line">$ public static void main(String[ ] args) &#123;</span><br><span class="line">$   Car c = new Car();   //先创建一辆车</span><br><span class="line">$   c.fly();  //.表示调用  众所周知所以车都是可以飞的</span><br><span class="line">$   c.diving();  //.表示调用  众所周知所以车都是可以下水的</span><br><span class="line">$   c.color = <span class="string">&quot;透明&quot;</span>;  //我的车是透明色</span><br><span class="line">$   c.wheel = 5; //众所周知所以车都是5个轮子</span><br><span class="line">$   c.seat = 9;  //我的车 里面坐4个 车前绑1个人用来刹车 车顶坐1个人 剩下3个人的拿板拿雨伞凳坐后车厢 尾气管那面绑上1个人 用来吸收尾气</span><br><span class="line">$   System.out.println(c.color);</span><br><span class="line">$   System.out.println(c.wheel);</span><br><span class="line">$   System.out.println(c.seat);</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Java面向对象思维之getter和setter(作用)</title>
    <url>/Object-oriented-getter-setter.html</url>
    <content><![CDATA[<p><strong>学习Java个人整理</strong></p>
<a id="more"></a>

<h1 id="getter"><a href="#getter" class="headerlink" title="getter"></a>getter</h1><p><strong>主要是给成员变量赋值, 做一定的保护</strong></p>
<h1 id="setter"><a href="#setter" class="headerlink" title="setter"></a>setter</h1><p><strong>从成员变量中获取数据</strong></p>
]]></content>
  </entry>
  <entry>
    <title>Java面向对象思维之构造方法需的重载</title>
    <url>/Object-oriented-constructor-heavy-load.html</url>
    <content><![CDATA[<p><strong>学习Java个人整理</strong></p>
<a id="more"></a>

<h1 id="例如造一辆车-例如-车有颜色-车有轮子-车座位"><a href="#例如造一辆车-例如-车有颜色-车有轮子-车座位" class="headerlink" title="例如造一辆车 例如 车有颜色 车有轮子 车座位"></a>例如造一辆车 例如 车有颜色 车有轮子 车座位</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   //成员变量</span><br><span class="line">$ public class Car &#123;</span><br><span class="line">$ String color;  //颜色</span><br><span class="line">$ int wheel;   //轮子</span><br><span class="line">$ int seat;   //座位</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ public Car(String color,  int seat) &#123; </span><br><span class="line">$     // 设置属性信息</span><br><span class="line">$     this.color = color; // 颜色</span><br><span class="line">$     this.seat = seat; // 座位</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ public Car(String color, int wheel, int seat) &#123; </span><br><span class="line">$     // 设置属性信息</span><br><span class="line">$     this(color,seat);  //this还可以调用当前累中其他的构造方法</span><br><span class="line">$     this.wheel = wheel; // 轮子</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<h1 id="执行main方法"><a href="#执行main方法" class="headerlink" title="执行main方法"></a>执行main方法</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   //成员方法</span><br><span class="line">$ public static void main(String[ ] args) &#123;</span><br><span class="line">$     Car c1 = new Car(<span class="string">&quot;透明&quot;</span>,9);</span><br><span class="line">$     Car c2 = new Car(<span class="string">&quot;黄&quot;</span>,5,9);</span><br><span class="line">$     &#125;</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<h1 id="注意是this-可以访问其他构造方法"><a href="#注意是this-可以访问其他构造方法" class="headerlink" title="注意是this()可以访问其他构造方法"></a>注意是this()可以访问其他构造方法</h1>]]></content>
  </entry>
  <entry>
    <title>Java面向对象思维</title>
    <url>/Object-oriented-this.html</url>
    <content><![CDATA[<p><strong>学习Java个人整理</strong></p>
<a id="more"></a>

<h1 id="例如造一辆车-而车有什么属性？-例如-车有颜色-车有轮子-车座位"><a href="#例如造一辆车-而车有什么属性？-例如-车有颜色-车有轮子-车座位" class="headerlink" title="例如造一辆车 而车有什么属性？ 例如 车有颜色 车有轮子 车座位"></a>例如造一辆车 而车有什么属性？ 例如 车有颜色 车有轮子 车座位</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   //成员变量</span><br><span class="line">$ public class Car &#123;</span><br><span class="line">$ 	String color;  //颜色</span><br><span class="line">$ 	int wheel;   //轮子</span><br><span class="line">$ 	int seat;   //座位</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<p><strong>显示属性</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   //成员方法</span><br><span class="line">$ public void <span class="function"><span class="title">run</span></span>() &#123;</span><br><span class="line">$	System.out.println(this.color);    //颜色</span><br><span class="line">$	System.out.println(this.wheel);    //轮子</span><br><span class="line">$	System.out.println(this.seat);     //座位</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<h1 id="动作"><a href="#动作" class="headerlink" title="动作"></a>动作</h1><p><strong>例如车能飞</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   //成员方法</span><br><span class="line">$ public class <span class="function"><span class="title">fly</span></span>()&#123;</span><br><span class="line">$ System.out.println(this.color+<span class="string">&quot;车能飞&quot;</span>);</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<p><strong>例如车可以潜水</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   //成员方法</span><br><span class="line">$ public class <span class="function"><span class="title">diving</span></span>()&#123;</span><br><span class="line">$ System.out.println(this.color+<span class="string">&quot;车可以下水&quot;</span>);</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<h1 id="执行main方法"><a href="#执行main方法" class="headerlink" title="执行main方法"></a>执行main方法</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ public static void main(String[ ] args) &#123;</span><br><span class="line">$ 	  Car c1 = new Car();   //先创建一辆车</span><br><span class="line">$ 	  c1.color = <span class="string">&quot;透明&quot;</span>;  //我的车是透明色</span><br><span class="line">$ 	  c1.wheel = 5;  //众所周知所以车都是5个轮子</span><br><span class="line">$      c1.seat = 9; //我的车 里面坐4个 车前绑1个人用来刹车 车顶坐1个人</span><br><span class="line">$      c1.run();</span><br><span class="line">$      c1.fly();</span><br><span class="line">$      c1.diving();</span><br><span class="line">$</span><br><span class="line">$      Car c2 = new Car();   //先创建一辆车</span><br><span class="line">$	  c2.color = <span class="string">&quot;黄&quot;</span>;  //我的车是屎黄</span><br><span class="line">$	  c2.wheel = 5;  //众所周知所以车都是5个轮子</span><br><span class="line">$      c2.seat = 9; //我的车 里面坐4个 车前绑1个人用来刹车 车顶坐1个人</span><br><span class="line">$      c2.run();</span><br><span class="line">$      c2.fly();</span><br><span class="line">$      c2.diving();</span><br><span class="line">$	&#125;</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<h1 id="this关键字"><a href="#this关键字" class="headerlink" title="this关键字"></a>this关键字</h1><p><strong>this: 当前类的对象</strong><br><strong>this可以在方法内部获取到对象中的属性信息</strong><br><strong>this还可以区分局部变量和成员变量</strong></p>
]]></content>
  </entry>
  <entry>
    <title>Java面向对象思维之构造方法</title>
    <url>/Object-oriented-constructor.html</url>
    <content><![CDATA[<p><strong>学习Java个人整理</strong></p>
<a id="more"></a>

<h1 id="例如造一辆车-而车有什么属性？-例如-车有颜色-车有轮子-车座位"><a href="#例如造一辆车-而车有什么属性？-例如-车有颜色-车有轮子-车座位" class="headerlink" title="例如造一辆车 而车有什么属性？ 例如 车有颜色 车有轮子 车座位"></a>例如造一辆车 而车有什么属性？ 例如 车有颜色 车有轮子 车座位</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   //成员变量</span><br><span class="line">$ public class Car &#123;</span><br><span class="line">$ String color;  //颜色</span><br><span class="line">$ int wheel;   //轮子</span><br><span class="line">$ int seat;   //座位</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ // 自动生成一个无参数的构造方法 public <span class="function"><span class="title">Car</span></span>() &#123; </span><br><span class="line">$ public Car(String color, int wheel, int seat) &#123; //这里给它添加参数  </span><br><span class="line">$     // 设置属性信息</span><br><span class="line">$     this.color = color; // 颜色</span><br><span class="line">$     this.wheel = wheel; // 轮子</span><br><span class="line">$     this.seat = seat; // 座位</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<h1 id="动作"><a href="#动作" class="headerlink" title="动作"></a>动作</h1><p><strong>例如 车能飞</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   //成员方法</span><br><span class="line">$ public class <span class="function"><span class="title">fly</span></span>()&#123;</span><br><span class="line">$ System.out.println(this.color+<span class="string">&quot;车能飞&quot;</span>);</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<p><strong>例如 车可以潜水</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   //成员方法</span><br><span class="line">$ public class <span class="function"><span class="title">diving</span></span>()&#123;</span><br><span class="line">$ System.out.println(this.diving+<span class="string">&quot;车可以下水&quot;</span>);</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<h1 id="执行main方法"><a href="#执行main方法" class="headerlink" title="执行main方法"></a>执行main方法</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   //成员方法</span><br><span class="line">$ public static void main(String[ ] args) &#123;</span><br><span class="line">$     Car c1 = new Car(<span class="string">&quot;透明&quot;</span>,5,9);</span><br><span class="line">$     Car c2 = new Car(<span class="string">&quot;黄&quot;</span>,5,9);</span><br><span class="line">$     c1.fly();</span><br><span class="line">$     c1.diving();</span><br><span class="line">$ </span><br><span class="line">$     c2.fly();</span><br><span class="line">$     c2.diving();</span><br><span class="line">$     &#125;</span><br><span class="line">$ &#125;</span><br></pre></td></tr></table></figure>
<h1 id="构造方法需要注意"><a href="#构造方法需要注意" class="headerlink" title="构造方法需要注意"></a>构造方法需要注意</h1><p><strong>没有返回值这一项</strong><br><strong>在new的时候, 给对象设置属性信息</strong><br><strong>Java会默认自动的送每个类一个无参数的构造方法, 如果你写了构造方法, 那么Java就不送了</strong></p>
]]></content>
  </entry>
  <entry>
    <title>Linux命令(未完工)</title>
    <url>/Linux-command.html</url>
    <content><![CDATA[<p><strong>Linux基本命令</strong></p>
<a id="more"></a>

<blockquote>
<h1 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a>ls命令</h1></blockquote>
<p><strong>命令英文原意: list</strong><br><strong>命令所在路径: /bin/ls</strong><br><strong>执行权限: 所有用户</strong><br><strong>功能描述: 显示目录文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ls // 显示当前目录下文件</span><br><span class="line"></span><br><span class="line"><span class="variable">$ls</span> 目录名 // 显示指定目录下文件</span><br><span class="line"></span><br><span class="line"><span class="variable">$ls</span> -l // 长格式显示目录文件</span><br><span class="line"></span><br><span class="line"><span class="variable">$ls</span> -l 文件名 // 长格式显示指定文件</span><br><span class="line"></span><br><span class="line"><span class="variable">$ls</span> -a // 显示所有文件// 包含隐藏文件</span><br><span class="line"></span><br><span class="line"><span class="variable">$ls</span> -al // 长格式显示当前目录下所有文件</span><br><span class="line"></span><br><span class="line"><span class="variable">$ls</span> -h // 文件大小显示为常见大小单位 B KB MB …</span><br><span class="line"></span><br><span class="line"><span class="variable">$ls</span> -d // 显示目录本身，而不是里面的子文件</span><br></pre></td></tr></table></figure>
<h1 id="cd命令"><a href="#cd命令" class="headerlink" title="cd命令"></a>cd命令</h1><p><strong>命令英文原意: change directory</strong><br><strong>命令所在路径: shell内置命令</strong><br><strong>执行权限: 所有用户</strong><br><strong>功能描述: 切换所在目录</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$cd</span> /xx  // 切换到指定路径(使用绝对路径方式)</span><br><span class="line"></span><br><span class="line"><span class="variable">$cd</span> ~    // 进入当前用户的家目录</span><br><span class="line"></span><br><span class="line"><span class="variable">$cd</span> –    // 进入上次目录</span><br><span class="line"></span><br><span class="line"><span class="variable">$cd</span> ..   // 进入上一级目录</span><br><span class="line"></span><br><span class="line"><span class="variable">$cd</span> .    // 进入当前目录</span><br></pre></td></tr></table></figure>
<!-- ``` bash
$ 
``` -->

]]></content>
  </entry>
  <entry>
    <title>SQL Server T-SQL 从创建数据库到创建数据表到插入数据</title>
    <url>/SQL-kbl.html</url>
    <content><![CDATA[<p><strong>SQL Server个人整理</strong></p>
<a id="more"></a>

<h1 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE 数据库名;</span><br></pre></td></tr></table></figure>
<p><strong>例子</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE sdz;</span><br></pre></td></tr></table></figure>
<h1 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table 表名(</span><br><span class="line">	参数 类型(位数),</span><br><span class="line">	参数 类型(位数),</span><br><span class="line">	参数 类型(位数),</span><br><span class="line">	参数 类型(位数)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<p><strong>例子在sdz数据库创建sdq这个表</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use sdq;</span><br><span class="line">CREATE TABLE bbs (</span><br><span class="line">  id int(11) ,</span><br><span class="line">  name varchar(200) ,</span><br><span class="line">  sex varchar(200) ,</span><br><span class="line">  age int(11)  ,</span><br><span class="line">  classid int(11) </span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h1 id="插入数据表内容"><a href="#插入数据表内容" class="headerlink" title="插入数据表内容"></a>插入数据表内容</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INSERT INTO 数据表 (参数, 参数, 参数)</span><br><span class="line">VALUES (参数, 参数, 参数); </span><br></pre></td></tr></table></figure>
<p><strong>例子</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">INSERT INTO bbs (id,name,sex,age,classid) VALUES</span><br><span class="line">(1, <span class="string">&#x27;sdqz&#x27;</span>, NULL, NULL, 2),</span><br><span class="line">(2, <span class="string">&#x27;sdq&#x27;</span>, NULL,  NULL,  3),</span><br><span class="line">(3, <span class="string">&#x27;sdz&#x27;</span>, NULL,  NULL,  4);</span><br></pre></td></tr></table></figure>

<h1 id="查看数据表"><a href="#查看数据表" class="headerlink" title="查看数据表"></a>查看数据表</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ elect * from sdq</span><br></pre></td></tr></table></figure>
<h1 id="删除数据表"><a href="#删除数据表" class="headerlink" title="删除数据表"></a>删除数据表</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ DROP TABLE 表名;</span><br></pre></td></tr></table></figure>
<p><strong>例子</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ DROP TABLE sdq;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>SQL Server T-SQL 存储过程</title>
    <url>/SQL-storage.html</url>
    <content><![CDATA[<p><strong>SQL Server个人整理</strong></p>
<a id="more"></a>

<h1 id="创建变量"><a href="#创建变量" class="headerlink" title="创建变量"></a>创建变量</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">declare</span> 变量名 数据类型 常量</span><br></pre></td></tr></table></figure>
<h1 id="查询变量"><a href="#查询变量" class="headerlink" title="查询变量"></a>查询变量</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ select 变量名</span><br></pre></td></tr></table></figure>
<h1 id="创建存储过程"><a href="#创建存储过程" class="headerlink" title="创建存储过程"></a>创建存储过程</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ create Procedure 存储过程名 as select 字段 from 表名</span><br></pre></td></tr></table></figure>
<h1 id="执行存储过程"><a href="#执行存储过程" class="headerlink" title="执行存储过程"></a>执行存储过程</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ EXECUTE 存储过程名</span><br></pre></td></tr></table></figure>
<h1 id="删除存储过程"><a href="#删除存储过程" class="headerlink" title="删除存储过程"></a>删除存储过程</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ drop proc 存储过程名</span><br></pre></td></tr></table></figure>
<h1 id="Procedure-简写为：proc"><a href="#Procedure-简写为：proc" class="headerlink" title="Procedure 简写为：proc"></a>Procedure 简写为：proc</h1>]]></content>
  </entry>
  <entry>
    <title>SQL Server T-SQL 视图</title>
    <url>/SQL-try.html</url>
    <content><![CDATA[<p><strong>SQL Server个人整理</strong></p>
<a id="more"></a>

<h1 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ create view 视图(字段别名) as select 字段 from 表 WITH CHECK OPTION</span><br></pre></td></tr></table></figure>
<h1 id="向视图插入数据"><a href="#向视图插入数据" class="headerlink" title="向视图插入数据"></a>向视图插入数据</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ insert 视图 values(<span class="string">&#x27;数据&#x27;</span>) </span><br></pre></td></tr></table></figure>
<h1 id="查询视图数据"><a href="#查询视图数据" class="headerlink" title="查询视图数据"></a>查询视图数据</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ select 字段 from 视图</span><br></pre></td></tr></table></figure>
<h1 id="修改-更新-视图数据"><a href="#修改-更新-视图数据" class="headerlink" title="修改(更新)视图数据"></a>修改(更新)视图数据</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ update 视图 <span class="built_in">set</span> 修改的字段=<span class="string">&#x27;修改的数据&#x27;</span> <span class="built_in">where</span> 匹配字段=<span class="string">&#x27;匹配数据&#x27;</span> </span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>String 比较</title>
    <url>/String-compare.html</url>
    <content><![CDATA[<p><strong>个人笔记</strong></p>
<a id="more"></a>

<h1 id="String-比较"><a href="#String-比较" class="headerlink" title="String 比较"></a>String 比较</h1><p><strong>当String进行比较时应该用equals</strong></p>
<p><strong>因为equals是String类重写后的用于比较字符串内容的方法</strong></p>
<p><strong>为什么不用==进行比较, 因为==是用于比较地址值</strong></p>
]]></content>
  </entry>
  <entry>
    <title>第一个Vue.js</title>
    <url>/one-Vue.html</url>
    <content><![CDATA[<p><strong>Vue.js个人整理</strong></p>
<a id="more"></a>

<h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  &lt;!DOCTYPE html&gt;</span><br><span class="line">$  &lt;html lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">$  &lt;head&gt;</span><br><span class="line">$      &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">$      &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br><span class="line">$      &lt;title&gt;Vue学习&lt;/title&gt;</span><br><span class="line">$      &lt;script src=<span class="string">&quot;js/vue.min.js&quot;</span>&gt;&lt;/script&gt; </span><br><span class="line">$      &lt;!-- 导入Vue.js --&gt;</span><br><span class="line">$  &lt;/head&gt;</span><br><span class="line">$  &lt;body&gt;</span><br><span class="line">$      &lt;div id = <span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">$          &lt;button @click=<span class="string">&quot;showInfo&quot;</span>&gt;请点击&lt;/button&gt;</span><br><span class="line">$          &lt;p&gt;&#123;&#123;ms&#125;&#125;&lt;/p&gt;</span><br><span class="line">$          &lt;!-- &#123;&#123;massage&#125;&#125; --&gt;</span><br><span class="line">$      &lt;/div&gt;</span><br><span class="line">$      </span><br><span class="line">$          &lt;script&gt;</span><br><span class="line">$              var app = new Vue(&#123;</span><br><span class="line">$              el:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">$              // Model : 数据</span><br><span class="line">$               data:&#123;</span><br><span class="line">$                   ms: <span class="string">&quot;hello,vue!&quot;</span>,</span><br><span class="line">$               &#125;,</span><br><span class="line">$               methods:&#123;</span><br><span class="line">$                   <span class="function"><span class="title">showInfo</span></span>()&#123;</span><br><span class="line">$                          this.ms = <span class="string">&quot;你好666999, Vue&quot;</span></span><br><span class="line">$                   &#125;</span><br><span class="line">$               &#125;</span><br><span class="line">$          &#125;);</span><br><span class="line">$          &lt;/script&gt;</span><br><span class="line">$      &lt;/script&gt;</span><br><span class="line">$      </span><br><span class="line">$  &lt;/body&gt;</span><br><span class="line">$  &lt;/html&gt;</span><br></pre></td></tr></table></figure>
<h1 id="view和Model双向绑定"><a href="#view和Model双向绑定" class="headerlink" title="view和Model双向绑定"></a>view和Model双向绑定</h1>]]></content>
  </entry>
  <entry>
    <title>Vue.js 网页笔记本</title>
    <url>/Vue-network-books.html</url>
    <content><![CDATA[<p><strong>Vue.js个人整理</strong></p>
<a id="more"></a>

<h1 id="演示代码"><a href="#演示代码" class="headerlink" title="演示代码"></a>演示代码</h1><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/marked.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/moment.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/icon.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;notebook&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">&quot;side-bar&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;toolbar&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;addNote&quot;</span> <span class="attr">v-bind:title</span>=<span class="string">&quot;addButtonTitle&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;material-icons&quot;</span>&gt;</span>add_box<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    新建笔记</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;notes&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;note in notes&quot;</span> <span class="attr">class</span>=<span class="string">&quot;note&quot;</span> <span class="attr">v-on:click</span>=<span class="string">&quot;selectNote(note)&quot;</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123;selected:note === selectedNote&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;icon material-icons&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;note.favorite&quot;</span>&gt;</span>star<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                    &#123;&#123;note.title&#125;&#125;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;selectedNote&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;toolbar&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;selectedNote.title&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入笔记标题&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;removeNote&quot;</span> <span class="attr">title</span>=<span class="string">&quot;删除笔记&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;material-icons&quot;</span>&gt;</span>delete<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;favoriteNote&quot;</span> <span class="attr">title</span>=<span class="string">&quot;收藏笔记&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;material-icons&quot;</span>&gt;</span>&#123;&#123;selectedNote.favorite?&#x27;star&#x27;:&#x27;star_border&#x27;&#125;&#125;<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;selectedNote.content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;toolbar status-bar&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;date&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>创建日期: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;value&quot;</span>&gt;</span>&#123;&#123;selectedNote.created | changeDate&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;lines&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>行数: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;value&quot;</span>&gt;</span>&#123;&#123;linesCount&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;words&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>单词数: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;value&quot;</span>&gt;</span>&#123;&#123;wordsCount&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;characters&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;label&quot;</span>&gt;</span>字符数: <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;value&quot;</span>&gt;</span>&#123;&#123;charactersCount&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">&quot;preview&quot;</span> <span class="attr">v-html</span>=<span class="string">&quot;notePreview&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app=<span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">&#x27;#notebook&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">                notes:<span class="built_in">JSON</span>.parse(<span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;notes&#x27;</span>)) || [],</span></span><br><span class="line"><span class="javascript">                selectedId:<span class="built_in">localStorage</span>.getItem(<span class="string">&quot;selected-id&quot;</span>) || <span class="literal">null</span>,</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">saveNote</span>(<span class="params">v</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;notes&#x27;</span>,<span class="built_in">JSON</span>.stringify(<span class="built_in">this</span>.notes))</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">&quot;笔记已经保存! &quot;</span>,<span class="keyword">new</span> <span class="built_in">Date</span>())</span></span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">addNote</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">const</span> time = <span class="built_in">Date</span>.now()</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">const</span> note = </span></span><br><span class="line">                        &#123;</span><br><span class="line"><span class="javascript">                            id:<span class="built_in">String</span>(time),</span></span><br><span class="line"><span class="javascript">                            title:<span class="string">&#x27;New Note&#x27;</span> + (<span class="built_in">this</span>.notes.length+<span class="number">1</span>),</span></span><br><span class="line"><span class="javascript">                            content:<span class="string">&#x27;Hi,Wellcome to write a new note!&#x27;</span>,</span></span><br><span class="line">                            created:time,</span><br><span class="line"><span class="javascript">                            favorite:<span class="literal">false</span>,</span></span><br><span class="line">                        &#125;</span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.notes.push(note)</span></span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">selectNote</span>(<span class="params">v</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.selectedId=v.id</span></span><br><span class="line">                    &#125;,</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">removeNote</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span> (<span class="built_in">this</span>.selectedNote &amp;&amp; confirm(<span class="string">&#x27;确定删除笔记?&#x27;</span>))</span></span><br><span class="line">                        &#123;</span><br><span class="line"><span class="javascript">                            <span class="keyword">const</span> index = <span class="built_in">this</span>.notes.indexOf(<span class="built_in">this</span>.selectedNote)</span></span><br><span class="line"><span class="javascript">                            <span class="keyword">if</span>(index !== -<span class="number">1</span>)</span></span><br><span class="line">                            &#123;</span><br><span class="line"><span class="javascript">                                <span class="built_in">this</span>.notes.splice(index,<span class="number">1</span>)&#125;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    </span><br><span class="line">                    favoriteNote()</span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.selectedNote.favorite=!<span class="built_in">this</span>.selectedNote.favorite</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">        computed:&#123;</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">notePreview</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="built_in">this</span>.selectedNote?marked(<span class="built_in">this</span>.selectedNote.content):<span class="string">&#x27;&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">addButtonTitle</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="built_in">this</span>.notes.length+<span class="string">&#x27; note(s) already&#x27;</span></span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">selectedNote</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="built_in">this</span>.notes.find(<span class="function"><span class="params">note</span>=&gt;</span>note.id===<span class="built_in">this</span>.selectedId)</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">sortedNotes</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="built_in">this</span>.notes.slice().sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span>a.created-b.created).sort(<span class="function">(<span class="params">a,b</span>)=&gt;</span>(a.favorite===b.favorite)?<span class="number">0</span>:a.favorite?-<span class="number">1</span>:<span class="number">1</span>)</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">linesCount</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(<span class="built_in">this</span>.selectedNote)</span></span><br><span class="line">                    &#123;</span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> <span class="built_in">this</span>.selectedNote.content.split(<span class="regexp">/\r\n|\r|\n/</span>).length</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">wordsCount</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(<span class="built_in">this</span>.selectedNote)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> s = <span class="built_in">this</span>.selectedNote.content;</span></span><br><span class="line"><span class="javascript">                    s = s.replace(<span class="regexp">/\n/g</span>,<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                    s = s.replace(<span class="regexp">/(^\s*)|(\s*$)/gi</span>,<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                    s = s.replace(<span class="regexp">/\s\s+/gi</span>,<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> s.split(<span class="string">&#x27; &#x27;</span>).length</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">                    <span class="function"><span class="title">charactersCount</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span>(<span class="built_in">this</span>.selectedNote)&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> <span class="built_in">this</span>.selectedNote.content.split(<span class="string">&#x27;&#x27;</span>).length</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            watch:&#123;</span><br><span class="line">                notes:&#123;</span><br><span class="line"><span class="javascript">                    handler:<span class="string">&#x27;saveNote&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                    deep:<span class="literal">true</span>,</span></span><br><span class="line">                &#125;,</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">selectedId</span>(<span class="params">v</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;selected-id&#x27;</span>,v)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            filters:&#123;</span><br><span class="line"><span class="javascript">                <span class="function"><span class="title">changeDate</span>(<span class="params">v</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> moment(v).format(<span class="string">&#x27;YYYY-MM-DD&#x27;</span>)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><font color="#DC143C">直接实战</font></p>
<p><a href="./项目/项目工程.html" target="_blank">演示效果</a></p>
]]></content>
  </entry>
  <entry>
    <title>轻松理解json与python关系</title>
    <url>/json-python.html</url>
    <content><![CDATA[<p><strong>json笔记</strong></p>
<a id="more"></a>


<p><strong>导入json模块</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import json</span><br></pre></td></tr></table></figure>

<h1 id="对应关系"><a href="#对应关系" class="headerlink" title="对应关系"></a>对应关系</h1><table>
<thead>
<tr>
<th align="center">JSON</th>
<th align="center">Python</th>
</tr>
</thead>
<tbody><tr>
<td align="center">object</td>
<td align="center">dict</td>
</tr>
<tr>
<td align="center">array</td>
<td align="center">list</td>
</tr>
<tr>
<td align="center">string</td>
<td align="center">str</td>
</tr>
<tr>
<td align="center">number(int)</td>
<td align="center">int,long</td>
</tr>
<tr>
<td align="center">number(real)</td>
<td align="center">float</td>
</tr>
<tr>
<td align="center">true</td>
<td align="center">True</td>
</tr>
<tr>
<td align="center">false</td>
<td align="center">False</td>
</tr>
<tr>
<td align="center">null</td>
<td align="center">None</td>
</tr>
</tbody></table>
<p><strong>案例</strong></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;   </span><br><span class="line">        <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;史迪奇&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;age&quot;</span>:<span class="string">&quot;未知&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>:<span class="number">626</span>,</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th align="center">解释</th>
<th align="center">JSON</th>
<th align="center">Python</th>
</tr>
</thead>
<tbody><tr>
<td align="center">[]中括号起来的</td>
<td align="center">数组</td>
<td align="center">列表</td>
</tr>
<tr>
<td align="center">{}花括号起来的</td>
<td align="center">对象</td>
<td align="center">字典</td>
</tr>
<tr>
<td align="center">“name”</td>
<td align="center">属性的名</td>
<td align="center">字典的键</td>
</tr>
<tr>
<td align="center">“史迪奇”</td>
<td align="center">属性的值</td>
<td align="center">字典的值</td>
</tr>
<tr>
<td align="center">“未知”</td>
<td align="center">字符串</td>
<td align="center">字符串</td>
</tr>
<tr>
<td align="center">626</td>
<td align="center">整数</td>
<td align="center">int</td>
</tr>
</tbody></table>
<h1 id="json转python"><a href="#json转python" class="headerlink" title="json转python"></a>json转python</h1><figure class="highlight"><table><tr><td class="code"><pre><span class="line">json_str=&#x27;&#x27;&#x27;[&#123;&quot;name&quot;:&quot;史迪奇&quot;,&quot;age&quot;:&quot;未知&quot;,</span><br><span class="line">&quot;id&quot;:626,&#125;]&#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line"># 把json格式文件, 转换成python数据</span><br><span class="line">rs = json.loads(json_str)</span><br><span class="line">#查看类型</span><br><span class="line">print(type(rs)) #列表</span><br><span class="line">print(type(rs[0])) #字典</span><br><span class="line"></span><br><span class="line"># 把json格式文件, 转换成python类型的数据</span><br><span class="line">with open(&#x27;data/sdq.json&#x27;) as fp:</span><br><span class="line">    # 加载该文件对象, 转换为python类型的数据</span><br><span class="line">    python_list = json.load(fp)</span><br><span class="line">    print(type(python_list)) #列表</span><br><span class="line">    print((type(python_list[0]))) #字典</span><br></pre></td></tr></table></figure>
<p><strong>举例图</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">graph LR</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">  A[&quot;json字符串&quot;]---B[&quot;json.loads(s)&quot;]--&gt;C[&quot;python数据类型&quot;]</span><br><span class="line">    D[&quot;json格式的文件对象&quot;]---F[&quot;json.load(fp)&quot;]--&gt;C[&quot;python数据类型&quot;]</span><br></pre></td></tr></table></figure>

<h1 id="python转json"><a href="#python转json" class="headerlink" title="python转json"></a>python转json</h1><figure class="highlight"><table><tr><td class="code"><pre><span class="line">json_str=&#x27;&#x27;&#x27;[&#123;&quot;name&quot;:&quot;史迪奇&quot;,&quot;age&quot;:&quot;未知&quot;,</span><br><span class="line">&quot;id&quot;:626,&#125;]&#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line">rs = json.loads(json_str)</span><br><span class="line"># 把python转换json字符串</span><br><span class="line">json_str = json.dump(rs)</span><br><span class="line">print(json_str)</span><br><span class="line"></span><br><span class="line"># 把json格式文件, 转换成python类型的数据</span><br><span class="line">with open(&#x27;data/sdz.json&#x27;,&#x27;w&#x27;) as fp:</span><br><span class="line">    # 把python以json格式储存到文件中</span><br><span class="line">    json.dump(re, fp,  ensure_ascii=False)</span><br></pre></td></tr></table></figure>




<pre><code>        /￣json.dupmps(obj)￣￣￣↘
       /                         json字符串
python数据类型 
       \                         json格式文件
        \__json.dupmps(obj,fp)__↗</code></pre>
]]></content>
  </entry>
  <entry>
    <title>Vue.js 表单输入绑定的基础用法</title>
    <url>/Vue-usage.html</url>
    <content><![CDATA[<p><strong>Vue.js个人整理</strong></p>
<a id="more"></a>

<h1 id="输入文本"><a href="#输入文本" class="headerlink" title="输入文本"></a>输入文本</h1><!--more-->
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$     &lt;div id = <span class="string">&quot;app1&quot;</span>&gt;</span><br><span class="line">$         &lt;div&gt;</span><br><span class="line">$            请输入你喜欢的城市&lt;input <span class="built_in">type</span>=<span class="string">&quot;text&quot;</span> v-model=<span class="string">&quot;cname&quot;</span>&gt;</span><br><span class="line">$            &lt;p&gt;</span><br><span class="line">$                你选择的城市:&#123;&#123;cname&#125;&#125;</span><br><span class="line">$            &lt;/p&gt;</span><br><span class="line">$        &lt;/div&gt;</span><br><span class="line">$        &lt;div&gt;</span><br><span class="line">$            回复评论: &lt;input <span class="built_in">type</span>=<span class="string">&quot;text&quot;</span> v-model=<span class="string">&quot;huifu&quot;</span>&gt;</span><br><span class="line">$            &lt;p&gt;</span><br><span class="line">$                你选回复是:&#123;&#123;huifu&#125;&#125;</span><br><span class="line">$            &lt;/p&gt;</span><br><span class="line">$        &lt;/div&gt;</span><br><span class="line">$</span><br><span class="line">$    &lt;/div&gt;</span><br><span class="line">$        &lt;script&gt;</span><br><span class="line">$            var app = new Vue(&#123;</span><br><span class="line">$            el:<span class="string">&#x27;#app1&#x27;</span>,</span><br><span class="line">$            data : &#123;</span><br><span class="line">$                cname : <span class="string">&quot;哈哈哈尔滨市&quot;</span>,</span><br><span class="line">$                huifu : <span class="string">&quot;我叫史迪奇&quot;</span>,</span><br><span class="line">$            &#125;</span><br><span class="line">$        &#125;);</span><br><span class="line">$        &lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p><font color="#DC143C">直接实战</font></p>
<iframe id="iframe" src="./html/文本.html"></iframe>

<hr>
<h1 id="输入多行文本"><a href="#输入多行文本" class="headerlink" title="输入多行文本"></a>输入多行文本</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$    &lt;div id = <span class="string">&quot;app2&quot;</span>&gt;</span><br><span class="line">$         &lt;div&gt;</span><br><span class="line">$            &lt;span&gt;你的名字: &lt;/span&gt;</span><br><span class="line">$            &lt;p style=<span class="string">&quot;white-space: pre-line;&quot;</span>&gt;&#123;&#123; name &#125;&#125;&lt;/p&gt;</span><br><span class="line">$            &lt;br&gt;</span><br><span class="line">$            &lt;textarea v-model=<span class="string">&quot;name &quot;</span> placeholder=<span class="string">&quot;请输入你的名字&quot;</span>&gt;&lt;/textarea&gt;</span><br><span class="line">$</span><br><span class="line">$            &lt;p&gt;</span><br><span class="line">$                你的名字:&#123;&#123;name&#125;&#125;</span><br><span class="line">$            &lt;/p&gt;</span><br><span class="line">$        &lt;/div&gt;</span><br><span class="line">$</span><br><span class="line">$    &lt;/div&gt;</span><br><span class="line">$        &lt;script&gt;</span><br><span class="line">$            var app = new Vue(&#123;</span><br><span class="line">$            el:<span class="string">&#x27;#app2&#x27;</span>,</span><br><span class="line">$            data : &#123;</span><br><span class="line">$                name : <span class="string">&quot;史迪奇&quot;</span>,</span><br><span class="line">$            &#125;</span><br><span class="line">$        &#125;);</span><br><span class="line">$        &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p><font color="#DC143C">直接实战</font></p>
<iframe id="iframe" src="./html/多行文本.html"></iframe>

<hr>
<h1 id="输入单个复选框"><a href="#输入单个复选框" class="headerlink" title="输入单个复选框"></a>输入单个复选框</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$    &lt;div id = <span class="string">&quot;app3&quot;</span>&gt;</span><br><span class="line">$        &lt;div&gt;</span><br><span class="line">$            &lt;p&gt;</span><br><span class="line">$                你的选择是: &#123;&#123;checked &#125;&#125;</span><br><span class="line">$            &lt;/p&gt;</span><br><span class="line">$            &lt;input <span class="built_in">type</span>=<span class="string">&quot;checkbox&quot;</span> id=<span class="string">&quot;checkbox&quot;</span> v-model=<span class="string">&quot;checked&quot;</span>&gt;</span><br><span class="line">$            &lt;label <span class="keyword">for</span>=<span class="string">&quot;checkbox&quot;</span>&gt;&#123;&#123; checked &#125;&#125;&lt;/label&gt;        </span><br><span class="line">$        &lt;/div&gt;</span><br><span class="line">$    &lt;/div&gt;</span><br><span class="line">$        &lt;script&gt;</span><br><span class="line">$            var app = new Vue(&#123;</span><br><span class="line">$            el:<span class="string">&#x27;#app3&#x27;</span>,</span><br><span class="line">$            data : &#123;</span><br><span class="line">$                checked : <span class="literal">false</span>,</span><br><span class="line">$            &#125;</span><br><span class="line">$        &#125;);</span><br><span class="line">$        &lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p><font color="#DC143C">直接实战</font></p>
<iframe id="iframe" src="/html/单个复选框.html"></iframe>

<hr>
<h1 id="输入多个复选框"><a href="#输入多个复选框" class="headerlink" title="输入多个复选框"></a>输入多个复选框</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$    &lt;div id = <span class="string">&quot;app4&quot;</span>&gt;</span><br><span class="line">$        &lt;div&gt;</span><br><span class="line">$            &lt;input <span class="built_in">type</span>=<span class="string">&quot;checkbox&quot;</span> id=<span class="string">&quot;blue&quot;</span> value=<span class="string">&quot;蓝色&quot;</span> v-model=<span class="string">&quot;color&quot;</span>&gt;</span><br><span class="line">$            &lt;label <span class="keyword">for</span>=<span class="string">&quot;blue&quot;</span>&gt;蓝色&lt;/label&gt;</span><br><span class="line">$            &lt;input <span class="built_in">type</span>=<span class="string">&quot;checkbox&quot;</span> id=<span class="string">&quot;red&quot;</span> value=<span class="string">&quot;红色&quot;</span> v-model=<span class="string">&quot;color&quot;</span>&gt;</span><br><span class="line">$            &lt;label <span class="keyword">for</span>=<span class="string">&quot;red&quot;</span>&gt;红色&lt;/label&gt;</span><br><span class="line">$            &lt;input <span class="built_in">type</span>=<span class="string">&quot;checkbox&quot;</span> id=<span class="string">&quot;yellow&quot;</span> value=<span class="string">&quot;黄色&quot;</span> v-model=<span class="string">&quot;color&quot;</span>&gt;</span><br><span class="line">$            &lt;label <span class="keyword">for</span>=<span class="string">&quot;yellow&quot;</span>&gt;黄色&lt;/label&gt;</span><br><span class="line">$            &lt;p&gt;</span><br><span class="line">$                你选择的颜色是: &#123;&#123;color&#125;&#125;</span><br><span class="line">$            &lt;/p&gt;</span><br><span class="line">$        &lt;/div&gt;</span><br><span class="line">$    &lt;/div&gt;</span><br><span class="line">$        &lt;script&gt;</span><br><span class="line">$            var app = new Vue(&#123;</span><br><span class="line">$            el:<span class="string">&#x27;#app4&#x27;</span>,</span><br><span class="line">$            data : &#123;</span><br><span class="line">$                color : [],</span><br><span class="line">$            &#125;</span><br><span class="line">$        &#125;);</span><br><span class="line">$        &lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p><font color="#DC143C">直接实战</font></p>
<iframe id="iframe" src="./html/多个复选框.html"></iframe>

<hr>
<h1 id="输入单选按钮"><a href="#输入单选按钮" class="headerlink" title="输入单选按钮"></a>输入单选按钮</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   &lt;div id = <span class="string">&quot;app5&quot;</span>&gt;</span><br><span class="line">$           &lt;div&gt;</span><br><span class="line">$               &lt;input <span class="built_in">type</span>=<span class="string">&quot;radio&quot;</span> id=<span class="string">&quot;男&quot;</span> value=<span class="string">&quot;男&quot;</span> v-model=<span class="string">&quot;sex&quot;</span>&gt;</span><br><span class="line">$               &lt;label <span class="keyword">for</span>=<span class="string">&quot;男&quot;</span>&gt;男&lt;/label&gt;</span><br><span class="line">$               &lt;br&gt;</span><br><span class="line">$               &lt;input <span class="built_in">type</span>=<span class="string">&quot;radio&quot;</span> id=<span class="string">&quot;女&quot;</span> value=<span class="string">&quot;女&quot;</span> v-model=<span class="string">&quot;sex&quot;</span>&gt;</span><br><span class="line">$               &lt;label <span class="keyword">for</span>=<span class="string">&quot;女&quot;</span>&gt;女&lt;/label&gt;</span><br><span class="line">$               &lt;p&gt;</span><br><span class="line">$                   你选择的性别是: &#123;&#123;sex&#125;&#125;</span><br><span class="line">$               &lt;/p&gt;</span><br><span class="line">$           &lt;/div&gt;</span><br><span class="line">$   &lt;/div&gt;</span><br><span class="line">$       &lt;script&gt;</span><br><span class="line">$           var app = new Vue(&#123;</span><br><span class="line">$           el:<span class="string">&#x27;#app5&#x27;</span>,</span><br><span class="line">$           data : &#123;</span><br><span class="line">$               sex :[]</span><br><span class="line">$           &#125;</span><br><span class="line">$       &#125;);</span><br><span class="line">$       &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p><font color="#DC143C">直接实战</font></p>
<iframe id="iframe" src="./html/单选按钮.html"></iframe>

<hr>
<h1 id="输入选择框单选时"><a href="#输入选择框单选时" class="headerlink" title="输入选择框单选时"></a>输入选择框单选时</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$   &lt;div id = <span class="string">&quot;app6&quot;</span>&gt;</span><br><span class="line">$           &lt;div&gt;</span><br><span class="line">$               请你选择你喜欢的季节:&lt;select v-model=<span class="string">&quot;season&quot;</span> style=<span class="string">&quot;width: 50px;&quot;</span>&gt;</span><br><span class="line">$                   &lt;option&gt;春天&lt;/option&gt;</span><br><span class="line">$                   &lt;option&gt;夏天&lt;/option&gt;</span><br><span class="line">$                   &lt;option&gt;秋天&lt;/option&gt;</span><br><span class="line">$                   &lt;option&gt;冬天&lt;/option&gt;</span><br><span class="line">$               &lt;/select&gt;</span><br><span class="line">$           </span><br><span class="line">$           &lt;p&gt;</span><br><span class="line">$               你喜欢的季节是: &#123;&#123;season&#125;&#125;</span><br><span class="line">$           &lt;/p&gt;</span><br><span class="line">$           &lt;/div&gt;</span><br><span class="line">$       &lt;/div&gt;</span><br><span class="line">$       &lt;script&gt;</span><br><span class="line">$           var app = new Vue(&#123;</span><br><span class="line">$           el:<span class="string">&#x27;#app6&#x27;</span>,</span><br><span class="line">$           data : &#123;</span><br><span class="line">$               season: <span class="string">&quot;夏天&quot;</span>,</span><br><span class="line">$           &#125;</span><br><span class="line">$       &#125;);</span><br><span class="line">$       &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p><font color="#DC143C">直接实战</font></p>
<iframe id="iframe" src="./html/选择框单选时.html"></iframe>

<hr>
<h1 id="输入选择框多选时"><a href="#输入选择框多选时" class="headerlink" title="输入选择框多选时"></a>输入选择框多选时</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$    &lt;div id = <span class="string">&quot;app7&quot;</span>&gt;</span><br><span class="line">$            &lt;div&gt;请你选择你喜欢的季节:</span><br><span class="line">$            &lt;select v-model=<span class="string">&quot;selected&quot;</span>  multiple style=<span class="string">&quot;width: 50px;&quot;</span>&gt;</span><br><span class="line">$                &lt;option&gt;春天&lt;/option&gt;</span><br><span class="line">$                &lt;option&gt;夏天&lt;/option&gt;</span><br><span class="line">$                &lt;option&gt;秋天&lt;/option&gt;</span><br><span class="line">$                &lt;option&gt;冬天&lt;/option&gt;</span><br><span class="line">$              &lt;/select&gt;</span><br><span class="line">$              &lt;p&gt;</span><br><span class="line">$                你喜欢的季节是:&#123;&#123;selected&#125;&#125;</span><br><span class="line">$                &lt;br&gt;</span><br><span class="line">$                多选时按住, 往下拖</span><br><span class="line">$              &lt;/p&gt;</span><br><span class="line">$            &lt;/div&gt;</span><br><span class="line">$    &lt;/div&gt;</span><br><span class="line">$        &lt;script&gt;</span><br><span class="line">$            var app = new Vue(&#123;</span><br><span class="line">$            el:<span class="string">&#x27;#app7&#x27;</span>,</span><br><span class="line">$            data : &#123;</span><br><span class="line">$                selected:[<span class="string">&quot;夏天&quot;</span>,<span class="string">&quot;冬天&quot;</span>]</span><br><span class="line">$            &#125;</span><br><span class="line">$        &#125;);</span><br><span class="line">$        &lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p><font color="#DC143C">直接实战</font></p>
<iframe id="iframe" src="./html/选择框多选时.html"></iframe>

<hr>
]]></content>
  </entry>
  <entry>
    <title>下次一定</title>
    <url>/xcyd.html</url>
    <content><![CDATA[<p><strong>本人制作简单的一款软件</strong></p>
<a id="more"></a>

<h1 id="软件截图"><a href="#软件截图" class="headerlink" title="软件截图"></a><a href="https://sdq3.gitee.io/images/lower-second-one-set/xcydjt.jpg">软件截图</a></h1><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a><a href="https://sdq3.gitee.io/images/lower-second-one-set/xcyd.jpg">下载</a></h1><h1 id="声明一下电话救援和电量救援并不是卡-而是给你时间去打开微信-QQ等等软件-然后时间一到就弹出界面-并不是卡"><a href="#声明一下电话救援和电量救援并不是卡-而是给你时间去打开微信-QQ等等软件-然后时间一到就弹出界面-并不是卡" class="headerlink" title="声明一下电话救援和电量救援并不是卡, 而是给你时间去打开微信,QQ等等软件, 然后时间一到就弹出界面, 并不是卡"></a>声明一下电话救援和电量救援并不是卡, 而是给你时间去打开微信,QQ等等软件, 然后时间一到就弹出界面, 并不是卡</h1><h1 id="真无电买用法是死循环然后发热耗电-把电耗完了就不用买账了-蹭饭利器"><a href="#真无电买用法是死循环然后发热耗电-把电耗完了就不用买账了-蹭饭利器" class="headerlink" title="真无电买用法是死循环然后发热耗电, 把电耗完了就不用买账了, 蹭饭利器"></a>真无电买用法是死循环然后发热耗电, 把电耗完了就不用买账了, 蹭饭利器</h1><h1 id="除非然后不行就电话救援-设定好吃东西的时间-然后来个电话-然后去接一下电话-趁机开溜-然后微信发消息给同学-谎称家里有事先走了"><a href="#除非然后不行就电话救援-设定好吃东西的时间-然后来个电话-然后去接一下电话-趁机开溜-然后微信发消息给同学-谎称家里有事先走了" class="headerlink" title="除非然后不行就电话救援, 设定好吃东西的时间, 然后来个电话, 然后去接一下电话, 趁机开溜, 然后微信发消息给同学, 谎称家里有事先走了"></a>除非然后不行就电话救援, 设定好吃东西的时间, 然后来个电话, 然后去接一下电话, 趁机开溜, 然后微信发消息给同学, 谎称家里有事先走了</h1>]]></content>
  </entry>
  <entry>
    <title>Arch wsl的傻瓜式安装 (有手就行)</title>
    <url>/Arch-Wsl-install.html</url>
    <content><![CDATA[<p><strong>本人是Arch教徒过来传一下教</strong> </p>
<img src="/images/wsl傻瓜式安装/Arch教徒.jpg" style="width: 200px; height: 200px;">
<a id="more"></a>

<h1 id="第一步-程序与功能中打开-或者-以管理员身份打开-PowerShell-终端-输入命令如下"><a href="#第一步-程序与功能中打开-或者-以管理员身份打开-PowerShell-终端-输入命令如下" class="headerlink" title="第一步 程序与功能中打开 或者 以管理员身份打开 PowerShell 终端 输入命令如下"></a>第一步 程序与功能中打开 或者 以管理员身份打开 PowerShell 终端 输入命令如下</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></table></figure>
<img src="/images/wsl傻瓜式安装/按照提示重启电脑.jpg" style="width: 300px; height: 300px;">

<p><strong>按照提示重启电脑</strong></p>
<h1 id="第二步-下载文件"><a href="#第二步-下载文件" class="headerlink" title="第二步 下载文件"></a>第二步 下载文件</h1><p><strong>然后下载<a href="https://github.com/yuk7/ArchWSL">Arch WSL</a></strong></p>
<img src="/images/wsl傻瓜式安装/Arch wsl下载.jpg">
<br>
<img src="/images/wsl傻瓜式安装/Arch wsl下载版本.jpg">

<p><strong>那个安装证书是给appx版的arch wsl用的</strong></p>
<p><strong>你已经安装zip版的</strong></p>
<p><strong>没有必要安两次</strong></p>
<p><strong>只用需要用到zip</strong></p>
<h1 id="第三步-配置Arch-Wsl"><a href="#第三步-配置Arch-Wsl" class="headerlink" title="第三步 配置Arch Wsl"></a>第三步 配置Arch Wsl</h1><img src="/images/wsl傻瓜式安装/Arch wsl配置.jpg" style="width: 800px; height: 500px;">

<p><strong>反正按照我这个改，保存是ctrl + x 回车</strong></p>
<h1 id="第四步-配置相关参数"><a href="#第四步-配置相关参数" class="headerlink" title="第四步 配置相关参数"></a>第四步 配置相关参数</h1><p><strong>这里会提示配置  按照我的方法配置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ Arch.exe//这个是启动后的显示</span><br><span class="line">[root@PC-NAME user]<span class="comment"># passwd       //这个是用户名输完名字输密码</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ Arch.exe</span><br><span class="line">[root@PC-NAME]<span class="comment"># EDITOR=nano visudo</span></span><br><span class="line">    %wheel      ALL=(ALL) ALL</span><br><span class="line">    (setup sudoers file.)</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ [root@PC-NAME]<span class="comment"># useradd -m -G wheel -s /bin/bash &#123;username&#125;</span></span><br><span class="line">(add user)</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ [root@PC-NAME user]<span class="comment"># passwd &#123;username&#125;      //&#123;&#125;换成你的用户名,记住不需要打&#123;&#125;</span></span><br><span class="line">(<span class="built_in">set</span> default user password)</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ [root@PC-NAME user]<span class="comment"># exit  //退出</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ Arch.exe config --default-user &#123;username&#125;</span><br><span class="line">    (setting to default user)     //现在是root用户,不用加sudo</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman-key --init</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ [user@PC-NAME]$ sudo pacman-key --init</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ [root@PC-NAME]$ sudo pacman-key --populate</span><br></pre></td></tr></table></figure>
<h1 id="第五步-安装完后操作"><a href="#第五步-安装完后操作" class="headerlink" title="第五步 安装完后操作"></a>第五步 安装完后操作</h1><p><strong>下面是<a href="https://mirrors.tuna.tsinghua.edu.cn/help/archlinux/">换源</a></strong></p>
<p><strong>打开nano /etc/pacman.d/mirrorlist 然后再最顶端添加 切记去##</strong></p>
<img src="/images/wsl傻瓜式安装/Arch wsl配置文件.jpg" style="width: 800px; height: 500px;">
<br>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ Server = https:mirrors.tuna.tsinghua.edu.cn/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span></span><br></pre></td></tr></table></figure>
**然后就可以 更新软件包缓存**

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo pacman -Syy</span><br></pre></td></tr></table></figure>
<h1 id="neofetch查看系统"><a href="#neofetch查看系统" class="headerlink" title="neofetch查看系统"></a>neofetch查看系统</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pacman -S neofetch</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ neofetch</span><br></pre></td></tr></table></figure>
<img src="/images/wsl傻瓜式安装/Arch wsl.jpg" style="width: 800px; height: 500px;">

<h1 id="这个教程百分比可以看懂-如果你看不懂那只能说明你没认真去看"><a href="#这个教程百分比可以看懂-如果你看不懂那只能说明你没认真去看" class="headerlink" title="这个教程百分比可以看懂,如果你看不懂那只能说明你没认真去看"></a>这个教程百分比可以看懂,如果你看不懂那只能说明你没认真去看</h1><h1 id="认认真真的反复去看你真的可以看懂的"><a href="#认认真真的反复去看你真的可以看懂的" class="headerlink" title="认认真真的反复去看你真的可以看懂的"></a>认认真真的反复去看你真的可以看懂的</h1><h1 id="然后发现并不难"><a href="#然后发现并不难" class="headerlink" title="然后发现并不难"></a>然后发现并不难</h1>]]></content>
  </entry>
  <entry>
    <title>Android同步源码和编译ROM傻瓜式 (有手就行)</title>
    <url>/Android-compile.html</url>
    <content><![CDATA[<p><strong>本人是用Arch，顺便来传一下教</strong><br><img src="/images/编译Android/Arch教徒.jpg" style="width: 200px; height: 200px;"></p>
<a id="more"></a>

<h1 id="第一是-安装Linux-我以Ubuntu和deepin为例子，建议新手用deepin"><a href="#第一是-安装Linux-我以Ubuntu和deepin为例子，建议新手用deepin" class="headerlink" title="第一是 安装Linux 我以Ubuntu和deepin为例子，建议新手用deepin"></a>第一是 安装Linux 我以Ubuntu和deepin为例子，建议新手用deepin</h1><p><a href="https://www.bilibili.com/video/BV1aW411C7NR">Ubantu的安装视频</a><br><a href="https://www.bilibili.com/video/BV1HW411Y73e">Deepin的安装视频</a></p>
<h1 id="第二是-环境搭载"><a href="#第二是-环境搭载" class="headerlink" title="第二是 环境搭载"></a>第二是 环境搭载</h1><p><strong>1.明确自己要开发的android版本 参考 lineageos官方的wiki：<a href="https://wiki.lineageos.org/">https://wiki.lineageos.org</a> 选择合适的linux发行版(推荐ubuntu 16)推荐而已，你可以是别的Linux,都没问题</strong></p>
<p><strong>2.更新自身ubuntu的软件源  替换到etc/apt/sources.list替换完毕后执行</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update //如果自身网速不好建议换国内源(清华 中科大 阿里)</span><br></pre></td></tr></table></figure>
<p><strong><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/">个人建议清华</a></strong><br><strong>deepin就更简单，直接设置里面换</strong></p>
<p><strong>3.安装jdk，需要根据开发的android版本选择</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get update</span><br></pre></td></tr></table></figure>

<p><strong>4.安装 软件依赖</strong></p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev</span><br></pre></td></tr></table></figure>
<p><strong>4.安装jdk，需要根据开发的android版本选择</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install openjdk-x-jdk    //x 为jdk版本数字</span><br></pre></td></tr></table></figure>
<p><strong>LineageOS 14.1-15.1: OpenJDK 1.8</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ install openjdk-8-jdk</span><br></pre></td></tr></table></figure>
<p><strong>LineageOS 11.0-13.0: OpenJDK 1.7</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ install openjdk-7-jdk</span><br></pre></td></tr></table></figure>
<h1 id="第三是-安装repo"><a href="#第三是-安装repo" class="headerlink" title="第三是 安装repo"></a>第三是 安装repo</h1><p><strong>(1) 推荐使用mokee开源的 <a href="https://bbs.mokeedev.com/t/topic/21">mokee repo1</a> 或者 <a href="https://tacke.wodemo.com/entry/466371">mokee repo2</a></strong></p>
<p><strong>(2)在终端中输入以下内容，新建bin文件夹</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir ~/bin</span><br></pre></td></tr></table></figure>
<p><strong>(3)输入以下内容，将bin文件夹添加到环境变量中</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ PATH=~/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<p><strong>(4)接着输入以下内容，下载repo文件到bin文件夹 输入这个请省略下面那一步</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl https://mirrors.tuna.tsinghua.edu.cn/git/git-repo &gt; ~/bin/repo</span><br></pre></td></tr></table></figure>

<p><strong>如果你是欧洲人，有钱买梯子 就省略上步直接输入以下命令</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl http://commondatastorage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo</span><br></pre></td></tr></table></figure>
<p><strong>(5)最后输入以下内容，为repo文件添加运行权限</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ chmod a+x ~&#x2F;bin&#x2F;repo</span><br></pre></td></tr></table></figure>
<h1 id="第四是-同步源码"><a href="#第四是-同步源码" class="headerlink" title="第四是 同步源码"></a>第四是 同步源码</h1><p><strong>(1) win+alt+t打开终端，输入如下，创建一个文件夹</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ mkdir ~/los      //例如: los  名字你可以顺便起</span><br></pre></td></tr></table></figure>
<p><strong>(2) 进入(自己起好名字的文件夹)的文件夹，输入如下</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/los         //例如: los 你随便起名字的文件夹</span><br></pre></td></tr></table></figure>
<p><strong>(3) 由于使用repo拉取源码时，会尝试访问官方的git源更新自己，但由于是谷歌，就无法正常访问，所以在正式拉取前，我们需要先做点修改打开主目录，按组合键ctrl+H，在显示的隐藏文件中，打开.bashrc文件，将如下内容复制到你的~/.bashrc最后一行，保存退出</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">export</span> REPO_URL=<span class="string">&#x27;https://mirrors.tuna.tsinghua.edu.cn/git/git-repo&#x27;</span></span><br></pre></td></tr></table></figure>
<p><strong>(4) 获取源码拉取地址</strong><br>访问<a href="https://github.com/LineageOS">lineage的开源地址库</a>点击android，进入如下界面，这里就看到了拉取lineage-x.x的命令</p>
<p><strong>(5) 获取源码default</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ repo init -u git://github.com/los/android.git -b lineage-x.x       //例如: los 你随便起名字的文件夹和lineage版本</span><br></pre></td></tr></table></figure>
<p><strong>(6) 输入邮箱和昵称</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global user.email xxxxxx@xxxx   //你的邮箱</span><br><span class="line">$ git config --global user.name xxxxxxxxx     //随便起一个英文昵称</span><br></pre></td></tr></table></figure>
<p><strong>打开lineageOS文件夹 (如果是空的按组合键ctrl+H，显示隐藏内容)**</strong></p>
<p><img src="/images/%E7%BC%96%E8%AF%91Android/%E5%90%8C%E6%AD%A5%E6%BA%90%E7%A0%81.png"></p>
<p>然后更改<a href="https://mirrors.tuna.tsinghua.edu.cn/help/lineageOS/">链接</a></p>
<h1 id="第五是-拉取源码"><a href="#第五是-拉取源码" class="headerlink" title="第五是 拉取源码"></a>第五是 拉取源码</h1><p><strong>输入</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ repo sync</span><br></pre></td></tr></table></figure>
<p><strong>或者</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ repo sync -c -f -j8 --force-sync --no-clone-bundle</span><br></pre></td></tr></table></figure>
<h1 id="第六是-获取机型device"><a href="#第六是-获取机型device" class="headerlink" title="第六是 获取机型device"></a>第六是 获取机型device</h1><p><strong>(1) 我们进入<a href="https://github.com/LineageOS">lineage的开源项目网站</a></strong></p>
<p><strong>(2) 在搜索框中输入(设备代号)，会看到android_device_(品牌)_(设备代号)这一项</strong></p>
<p><strong>(3) 点击android_device_(品牌)_(设备代号)，就可以看到device的所有内容</strong></p>
<p><strong>(4) 点击右边的Clone or download，然后复制如图中的蓝色内容，这就是此device的下载地址</strong></p>
<p><strong>(5) 组合键ctrl+alt+t，打开终端</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/los             //例如: los  你随便起名字的文件夹</span><br></pre></td></tr></table></figure>
<p><strong>(6) 输入如下命令，回车开始同步</strong></p>
<p>解释一下:git clone就是拷贝到本地的命令，那段网址就是我们上面复制的地址，-b后面的lineage-x.x,表示lineage-x.x的分支；device/(品牌)/(设备代号)就是要下载到地方的路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/LineageOS/android_device_(品牌)_(设备代号).git -b lineage-x.x device/(品牌)/(设备代号) depth=1(可加可不加，加入同步源码会小点)</span><br></pre></td></tr></table></figure>
<p><strong>(7) 我们需要拉取的项目如下</strong></p>
<img src="/images/编译Android/找机型.jpg">

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ android_device_(品牌)_(设备代号)</span><br><span class="line"></span><br><span class="line">$ android_device_(品牌)_(处理器代号)-common</span><br><span class="line"></span><br><span class="line">$ android_device_(品牌)_(厂家)_common</span><br><span class="line"></span><br><span class="line">$ android_kernel_(品牌)_(处理器代号)</span><br><span class="line"></span><br><span class="line">$ proprietary_vendor_(品牌) </span><br></pre></td></tr></table></figure>
<p><strong>(8) <a href="https://github.com/TheMuppets">vendor需要访问地址</a>然后搜索(你的品牌)就可以找到</strong></p>
<p><strong>(9) 同样和同步其他项目一样</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/TheMuppets/proprietary_vendor_(品牌).git -b lineage-x.x vendor/(品牌)</span><br></pre></td></tr></table></figure>
<h1 id="第七是-执行编译"><a href="#第七是-执行编译" class="headerlink" title="第七是 执行编译"></a>第七是 执行编译</h1><p><strong>(1)如果你退出了，你就按组合键ctrl+alt+t，打开终端，输入以下命令，回车，进入los             //你随便起名字的文件夹，没有的话跳过这个环节</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/los    //例如: los 你随便起名字的文件夹</span><br></pre></td></tr></table></figure>
<p><strong>(2) 初始化</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ . build/envsetup.sh</span><br></pre></td></tr></table></figure>
<p><strong>(3) 输入如下命令，回车</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ breakfast xxx  //自己的机型</span><br></pre></td></tr></table></figure>
<p>如果有错误，就根据错误提示到lineageOS目录检查device, kernel和vendor等是否正确</p>
<p><strong>(4) 输入，回车，进行编译</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ brunch xxx    //自己的机型</span><br></pre></td></tr></table></figure>
<p>编译耗费的时间取决于你的电脑配置情况，所以我不建议用虚拟机，如果你电脑配置相当牛逼，当我没说</p>
<p><strong>(5)在我编译时出现了 fatal error: openssl/opensslv.h: No such file or directory 原因是libssl-dev没有安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install libssl-dev</span><br></pre></td></tr></table></figure>
<p><strong>(6) 回到正在编译的终端中，重新输入如下命令，等待编译的完成</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ brunch //自己的机型</span><br></pre></td></tr></table></figure>
<p><strong>(7) 编译完成后</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ 进入主目录\(你随便起名字的文件夹)\out\target\product\(设备代号)中就可以看到我们编译好的ROM了，可以复制到手机刷入了</span><br></pre></td></tr></table></figure>
<h1 id="另外设置ccache提高编译速度"><a href="#另外设置ccache提高编译速度" class="headerlink" title="另外设置ccache提高编译速度"></a>另外设置ccache提高编译速度</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">export</span> USE_CCACHE=1 </span><br><span class="line">$ <span class="built_in">export</span> CCACHE_COMPRESS=1</span><br><span class="line">$ ccache -M 50G 或者100G</span><br></pre></td></tr></table></figure>
<p><strong>防止低内存编译出错 设置大小为</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">export</span> ANDROID_JACK_VM_ARGS=<span class="string">&quot;-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G&quot;</span></span><br></pre></td></tr></table></figure>
<h1 id="祝福大家能自己动手做出属于自己的ROM"><a href="#祝福大家能自己动手做出属于自己的ROM" class="headerlink" title="祝福大家能自己动手做出属于自己的ROM"></a>祝福大家能自己动手做出属于自己的ROM</h1>]]></content>
  </entry>
  <entry>
    <title>python 字符串(我失忆了)</title>
    <url>/python-zfc.html</url>
    <content><![CDATA[<p><strong>我真的失忆了</strong></p>
<a id="more"></a>

<h1 id="以下全是字符串"><a href="#以下全是字符串" class="headerlink" title="以下全是字符串"></a>以下全是字符串</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s &#x3D; &#39;s&#39;</span><br><span class="line">d &#x3D; &quot;d&quot;</span><br><span class="line">q &#x3D; &#39;&#39;&#39;q&#39;&#39;&#39;</span><br><span class="line">sdq &#x3D; &quot;d &#39;s&#39; &quot;</span><br><span class="line">sdz &#x3D; &#39;&#39;&#39; &quot;s&#39;d&#39;&quot; q&#39;&#39;&#39;</span><br><span class="line">print(s, d, sdq, q, sdz, sep&#x3D;&#39;\n&#39;)</span><br></pre></td></tr></table></figure>
<h1 id="字符串拼接操作"><a href="#字符串拼接操作" class="headerlink" title="字符串拼接操作"></a>字符串拼接操作</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 字符串拼接</span><br><span class="line"># print(&#39;s&#39; + &#39;d&#39; + &#39;q&#39;)</span><br><span class="line"># 字符串和数字是不能拼接的</span><br><span class="line"># print(&#39;sdq&#39; + 3)</span><br><span class="line"># 连续打印5次史迪奇</span><br><span class="line"># print(5 * &#39;sdq&#39;)</span><br></pre></td></tr></table></figure>
<h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 索引 变量名[] 表索引 编程语言都是从0开始计数的</span><br><span class="line">sdq&#x3D; &#39;我叫史迪奇&#39;</span><br><span class="line">print(str1[0], str1[3], str1[-1])</span><br><span class="line">print(str1[10])  #超出会报错</span><br></pre></td></tr></table></figure>
<h1 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 切片 变量名[a:b] 同数学区间的[a,b)</span><br><span class="line">sdq &#x3D; &#39;0123456789&#39;</span><br><span class="line">print(&#39;sdq[0:3]&#39;, sdq[0:3])         #012</span><br><span class="line">print(&#39;sdq[1:]&#39;, sdq[1:])           #123456789</span><br><span class="line">print(&#39;sdq[:2]&#39;, sdq[:2])           #01</span><br><span class="line">print(&#39;sdq[:]&#39;, sdq[:])             #返回全部</span><br><span class="line">print(&#39;sdq[-4:-1]&#39;, sdq[-4:-1])     #678</span><br><span class="line">print(sdq[1:100])                   # 切片超出范围是不会报错的会返回全部</span><br></pre></td></tr></table></figure>
<h1 id="代码格式化"><a href="#代码格式化" class="headerlink" title="代码格式化"></a>代码格式化</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># name &#x3D; &#39;史迪奇&#39;</span><br><span class="line"># number &#x3D; 626</span><br><span class="line"># print(name+&#39;是个&#39;+str(number)+&#39;号实验品&#39;)</span><br><span class="line"># print(&#39;&#123;&#125;是个&#123;&#125;号实验品&#39;.format(name, number))</span><br><span class="line"># print(&#39;&#123;name&#125;是个&#123;number&#125;号实验品&#39;.format(name&#x3D;&#39;史迪奇&#39;, number&#x3D;626))</span><br><span class="line"># print(f&#39;&#123;name&#125;是个&#123;number&#125;号实验品&#39;)</span><br><span class="line"># 在一些老的教程里会用%的形式格式化代码，在Python3里就不建议使用了</span><br></pre></td></tr></table></figure>
<h1 id="字符串的一些使用方法"><a href="#字符串的一些使用方法" class="headerlink" title="字符串的一些使用方法"></a>字符串的一些使用方法</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sdq &#x3D; &#39;Stitch&#39;</span><br><span class="line">print(&#39;find第一次出现b的索引&#39;, sdq.find(&#39;h&#39;))  #看h的下标</span><br><span class="line">print(&#39;replace&#39;, sdq.replace(&#39;i&#39;, &#39;I&#39;))  #拿I替换i</span><br><span class="line">print(&#39;upper&#39;, sdq.upper()) #全大写</span><br><span class="line">print(&#39;lower&#39;, sdq.lower()) #全小写</span><br><span class="line">print(&#39;swapcase 对换&#39;, &#39;sdq&#39;.swapcase())  #反转字母大小写</span><br><span class="line">print(&#39;去前后空格&#39;, &#39; sdq &#39;.strip(), sep&#x3D;&#39;&#39;)  </span><br><span class="line">print(&#39;S t i t c h &#39;.replace(&#39; &#39;, &#39;&#39;))   #空格替换空字符串</span><br><span class="line"></span><br><span class="line">print(len(&#39;S t i t c h&#39;)) # 获取字符串长度 里面的空格也是计算长度的</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>python 数据类型(我失忆了)</title>
    <url>/python-type.html</url>
    <content><![CDATA[<p><strong>我真的失忆了</strong></p>
<a id="more"></a>

<h1 id="python基本数据类型"><a href="#python基本数据类型" class="headerlink" title="python基本数据类型"></a>python基本数据类型</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(&#39;整数&#39;, 1)                          </span><br><span class="line">print(&#39;浮点数&#39;, 0.1)             </span><br><span class="line">print(&#39;布尔值&#39;, True) </span><br><span class="line">print(&#39;空&#39;, None)</span><br><span class="line">print(&#39;元组&#39;, (1, 2, 3)) #可以存放不同类型</span><br><span class="line">print(&#39;列表&#39;, [1, 2, 3])</span><br><span class="line">print(&#39;字典&#39;, &#123;&#39;a&#39;:&#39;d&#39;&#125;)   </span><br></pre></td></tr></table></figure>
<h1 id="查询类型"><a href="#查询类型" class="headerlink" title="查询类型"></a>查询类型</h1><p><strong>例子</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(type(int))</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>python 字符串(我失忆了)</title>
    <url>/python-zfc.html</url>
    <content><![CDATA[<p><strong>我真的失忆了</strong></p>
<a id="more"></a>

<h1 id="以下全是字符串"><a href="#以下全是字符串" class="headerlink" title="以下全是字符串"></a>以下全是字符串</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s &#x3D; &#39;s&#39;</span><br><span class="line">d &#x3D; &quot;d&quot;</span><br><span class="line">q &#x3D; &#39;&#39;&#39;q&#39;&#39;&#39;</span><br><span class="line">sdq &#x3D; &quot;d &#39;s&#39; &quot;</span><br><span class="line">sdz &#x3D; &#39;&#39;&#39; &quot;s&#39;d&#39;&quot; q&#39;&#39;&#39;</span><br><span class="line">print(s, d, sdq, q, sdz, sep&#x3D;&#39;\n&#39;)</span><br></pre></td></tr></table></figure>
<h1 id="字符串拼接操作"><a href="#字符串拼接操作" class="headerlink" title="字符串拼接操作"></a>字符串拼接操作</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 字符串拼接</span><br><span class="line"># print(&#39;s&#39; + &#39;d&#39; + &#39;q&#39;)</span><br><span class="line"># 字符串和数字是不能拼接的</span><br><span class="line"># print(&#39;sdq&#39; + 3)</span><br><span class="line"># 连续打印5次史迪奇</span><br><span class="line"># print(5 * &#39;sdq&#39;)</span><br></pre></td></tr></table></figure>
<h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 索引 变量名[] 表索引 编程语言都是从0开始计数的</span><br><span class="line">sdq&#x3D; &#39;我叫史迪奇&#39;</span><br><span class="line">print(str1[0], str1[3], str1[-1])</span><br><span class="line">print(str1[10])  #超出会报错</span><br></pre></td></tr></table></figure>
<h1 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 切片 变量名[a:b] 同数学区间的[a,b)</span><br><span class="line">sdq &#x3D; &#39;0123456789&#39;</span><br><span class="line">print(&#39;sdq[0:3]&#39;, sdq[0:3])         #012</span><br><span class="line">print(&#39;sdq[1:]&#39;, sdq[1:])           #123456789</span><br><span class="line">print(&#39;sdq[:2]&#39;, sdq[:2])           #01</span><br><span class="line">print(&#39;sdq[:]&#39;, sdq[:])             #返回全部</span><br><span class="line">print(&#39;sdq[-4:-1]&#39;, sdq[-4:-1])     #678</span><br><span class="line">print(sdq[1:100])                   # 切片超出范围是不会报错的会返回全部</span><br></pre></td></tr></table></figure>
<h1 id="代码格式化"><a href="#代码格式化" class="headerlink" title="代码格式化"></a>代码格式化</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># name &#x3D; &#39;史迪奇&#39;</span><br><span class="line"># number &#x3D; 626</span><br><span class="line"># print(name+&#39;是个&#39;+str(number)+&#39;号实验品&#39;)</span><br><span class="line"># print(&#39;&#123;&#125;是个&#123;&#125;号实验品&#39;.format(name, number))</span><br><span class="line"># print(&#39;&#123;name&#125;是个&#123;number&#125;号实验品&#39;.format(name&#x3D;&#39;史迪奇&#39;, number&#x3D;626))</span><br><span class="line"># print(f&#39;&#123;name&#125;是个&#123;number&#125;号实验品&#39;)</span><br><span class="line"># 在一些老的教程里会用%的形式格式化代码，在Python3里就不建议使用了</span><br></pre></td></tr></table></figure>
<h1 id="字符串的一些使用方法"><a href="#字符串的一些使用方法" class="headerlink" title="字符串的一些使用方法"></a>字符串的一些使用方法</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sdq &#x3D; &#39;Stitch&#39;</span><br><span class="line">print(&#39;find第一次出现b的索引&#39;, sdq.find(&#39;h&#39;))  #看h的下标</span><br><span class="line">print(&#39;replace&#39;, sdq.replace(&#39;i&#39;, &#39;I&#39;))  #拿I替换i</span><br><span class="line">print(&#39;upper&#39;, sdq.upper()) #全大写</span><br><span class="line">print(&#39;lower&#39;, sdq.lower()) #全小写</span><br><span class="line">print(&#39;swapcase 对换&#39;, &#39;sdq&#39;.swapcase())  #反转字母大小写</span><br><span class="line">print(&#39;去前后空格&#39;, &#39; sdq &#39;.strip(), sep&#x3D;&#39;&#39;)  </span><br><span class="line">print(&#39;S t i t c h &#39;.replace(&#39; &#39;, &#39;&#39;))   #空格替换空字符串</span><br><span class="line"></span><br><span class="line">print(len(&#39;S t i t c h&#39;)) # 获取字符串长度 里面的空格也是计算长度的</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>python 基本运算符(我失忆了)</title>
    <url>/python-jjcc.html</url>
    <content><![CDATA[<p><strong>我真的失忆了</strong></p>
<a id="more"></a>

<h1 id="pdtho基本运算符"><a href="#pdtho基本运算符" class="headerlink" title="pdtho基本运算符"></a>pdtho基本运算符</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(&#39;加&#39;, 2 + 3)</span><br><span class="line">print(&#39;减&#39;, 1 - 3)</span><br><span class="line">print(&#39;两个减号&#39;, 1 - -2)</span><br><span class="line">print(&#39;乘&#39;, 2 * 4)</span><br><span class="line">print(&#39;除&#39;, 9 &#x2F; 3)</span><br><span class="line">print(&#39;取整&#39;, 10 &#x2F;&#x2F; 3, 10 &#x2F;&#x2F; 4)</span><br><span class="line">print(&#39;取整1&#39;, 10 &#x2F; 3, 10 &#x2F; 4)</span><br><span class="line">print(&#39;模运算，取余数&#39;, 10 % 3)  </span><br></pre></td></tr></table></figure>
<h1 id="四舍五入"><a href="#四舍五入" class="headerlink" title="四舍五入"></a>四舍五入</h1><p><strong>4舍6入5看齐,奇进偶不进,相比四舍五入更精确</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">print(round(1.2), round(1.5), round(2.5))</span><br></pre></td></tr></table></figure>
<h1 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s, d, q, z &#x3D; 1, 2, 3, 1</span><br><span class="line"></span><br><span class="line">print(&#39;s &#x3D;&#x3D; d&#39;, s &#x3D;&#x3D; d)</span><br><span class="line">print(&#39;s !&#x3D; d&#39;, s !&#x3D; d)</span><br><span class="line">print(&#39;s &gt; d&#39;, s &gt; d)</span><br><span class="line">print(&#39;d &lt; z&#39;, d &lt; z)</span><br><span class="line"></span><br><span class="line">print(&#39;s &#x3D;&#x3D; z&#39;, s &#x3D;&#x3D; z)   #比较值</span><br><span class="line">print(&#39;s is z&#39;, s is z)   #比较地址</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>职教星2.8.2(搬运软件)</title>
    <url>/zjx2.8.1.html</url>
    <content><![CDATA[<p><strong>职教星2.8.2</strong></p>
<a id="more"></a>

<p><strong>本人找了3天, 相当不容易</strong></p>
<p><strong>有的人甚至拿别人的软件来卖钱, 拿着别人的劳动成果来赚钱, 实在容忍不了越想越气</strong></p>
<h1 id="在我这里拿走职教星2-8-2有两点要求"><a href="#在我这里拿走职教星2-8-2有两点要求" class="headerlink" title="在我这里拿走职教星2.8.2有两点要求"></a>在我这里拿走职教星2.8.2有两点要求</h1><p><strong>1. 不能大势宣传 因为怕职教云知道就会做出应对措施</strong></p>
<p><strong>2. 帮助别人别谈钱, 帮助别人, 别人会看在心里, 然后别人会以你为榜样的去帮助那些需要帮助的人</strong></p>
<h1>拿走的请在下面评论区留言: "我遵守承诺"</h1>

<h1 id="记住千万别成为那些盗取别人劳动成果来赚钱的人渣"><a href="#记住千万别成为那些盗取别人劳动成果来赚钱的人渣" class="headerlink" title="记住千万别成为那些盗取别人劳动成果来赚钱的人渣"></a>记住千万别成为那些盗取别人劳动成果来赚钱的人渣</h1><h1 style="color:red;font-size:50px">这个是承诺的格式, 这是承诺请, 认真对待</h1>

<p><img src="/images/%E8%81%8C%E6%95%99%E6%98%9F/%E6%89%BF%E8%AF%BA.jpg"></p>
<h1 style="color:red;font-size:50px">截图一定要让我看见QQ头像, 记住使用之前把所有安全软件都关了, 自带的也要</h1>

<p><img src="/images/%E8%81%8C%E6%95%99%E6%98%9F/%E6%88%AA%E5%9B%BE%E6%A0%BC%E5%BC%8F.jpg"></p>
<h1 id="本放链接-想要的话-自己带着承诺完的截图来找我-我给你密码"><a href="#本放链接-想要的话-自己带着承诺完的截图来找我-我给你密码" class="headerlink" title="本放链接!!! 想要的话, 自己带着承诺完的截图来找我, 我给你密码"></a>本放<a href="https://wwr.lanzoui.com/iRu7Bqsx7od">链接</a>!!! 想要的话, 自己带着承诺完的截图来找<a href="https://wpa.qq.com/msgrd?v=3&uin=3083329400&site=qq&menu=yes">我</a>, 我给你密码</h1>]]></content>
  </entry>
  <entry>
    <title>爬虫 Beautiful Soup(牢饭吃到饱)</title>
    <url>/reptile-bs4-lxml.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>

<h1>Beautiful Soup4<h1>

<h1 id="安装bs4"><a href="#安装bs4" class="headerlink" title="安装bs4"></a>安装bs4</h1><p><strong>打开cmd 输入以下内容</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install lxml</span><br></pre></td></tr></table></figure>
<h1 id="find用法"><a href="#find用法" class="headerlink" title="find用法"></a>find用法</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find(&quot;标签&quot;, 属性:id class) </span><br><span class="line">find(&quot;p&quot;, id&#x3D;&quot;sdq&quot;)</span><br></pre></td></tr></table></figure>
<h1 id="find-all用法"><a href="#find-all用法" class="headerlink" title="find_all用法"></a>find_all用法</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find(&quot;标签&quot;, 属性:id class).find_all(&quot;标签&quot;)</span><br><span class="line">find(&quot;p&quot;, id&#x3D;&quot;sdq&quot;).find_all(&quot;a&quot;)</span><br></pre></td></tr></table></figure>
<h1 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h1><p><strong>打开这个<a href="https://www.umei.cc/bizhitupian/weimeibizhi/">网址</a></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入requests和bs4库</span><br><span class="line">import requests</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">url &#x3D; &quot;https:&#x2F;&#x2F;www.umei.cc&#x2F;bizhitupian&#x2F;weimeibizhi&#x2F;&quot;</span><br><span class="line">resp &#x3D; requests.get(url)</span><br><span class="line">resp.encoding &#x3D; &#39;utf-8&#39;  # 处理乱码</span><br><span class="line"></span><br><span class="line"># print(resp.text)</span><br><span class="line"># 把源代码交给bs</span><br><span class="line">main_page &#x3D; BeautifulSoup(resp.text, &quot;html.parser&quot;)</span><br><span class="line">alist &#x3D; main_page.find(&quot;div&quot;, class_&#x3D;&quot;TypeList&quot;).find_all(&quot;a&quot;)</span><br><span class="line"># print(alist)</span><br><span class="line">for a in alist:</span><br><span class="line">    href &#x3D; a.get(&#39;href&#39;)  # 直接通过get就可以拿到属性的值</span><br><span class="line">    # 子页面的源代码</span><br><span class="line">    child_resp &#x3D; requests.get(href)</span><br><span class="line">    child_resp.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line">    child_text &#x3D; child_resp.text</span><br><span class="line">    # 从子页面中拿到图片的下载路径</span><br><span class="line">    child &#x3D; BeautifulSoup(child_text, &quot;html.parser&quot;)</span><br><span class="line">    p &#x3D; child.find(&quot;p&quot;, align&#x3D;&quot;center&quot;)</span><br><span class="line">    img &#x3D; p.find(&quot;img&quot;)</span><br><span class="line">    src &#x3D; img.get(&quot;src&quot;)</span><br><span class="line">    # 下载图片</span><br><span class="line">    img_resp &#x3D; requests.get(src)</span><br><span class="line">    # img_resp.content  # 这里拿到的是字节</span><br><span class="line">    img_name &#x3D; src.split(&quot;&#x2F;&quot;)[-1]  # 拿到url中的最后一个 &#x2F; 以后的内容-1代表最后一个</span><br><span class="line">    with open(&quot;img&#x2F;&quot;+img_name, mode&#x3D;&quot;wb&quot;) as f:</span><br><span class="line">        f.write(img_resp.content)  # 图片内容写入文件</span><br><span class="line"></span><br><span class="line">    print(&quot;正在下载&quot;, img_name)</span><br><span class="line">    time.sleep(1) #停1秒</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(&quot;下载完了&quot;)</span><br></pre></td></tr></table></figure>
<!-- <h1>lxml<h1> -->



</h1></h1>]]></content>
  </entry>
  <entry>
    <title>爬虫 cookie(吃牢饭集合)</title>
    <url>/reptile-cookie.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>

<h1 id="headers中携带cookie"><a href="#headers中携带cookie" class="headerlink" title="headers中携带cookie"></a>headers中携带cookie</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url &#x3D; &#39;https:&#x2F;&#x2F;github.com&#x2F;sdqOS&#39;</span><br><span class="line"></span><br><span class="line">headers &#x3D; &#123;</span><br><span class="line">    &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;90.0.4430.72 Safari&#x2F;537.36&quot;,</span><br><span class="line">    &quot;Cookie&quot;: &quot;_octo&#x3D;GH1.1.1829904439.1611247247; _device_id&#x3D;326c46400086ed13ec278dc836662948; _locale&#x3D;ko; _locale_experiment&#x3D;ko; tz&#x3D;Asia%2FShanghai; has_recent_activity&#x3D;1; user_session&#x3D;zW4-2Xj6Rnda4YLHfsc5pFcRYfJB60BCft6Iwqh31V1lM6eU; __Host-user_session_same_site&#x3D;zW4-2Xj6Rnda4YLHfsc5pFcRYfJB60BCft6Iwqh31V1lM6eU; tz&#x3D;Asia%2FShanghai; color_mode&#x3D;%7B%22color_mode%22%3A%22auto%22%2C%22light_theme%22%3A%7B%22name%22%3A%22light%22%2C%22color_mode%22%3A%22light%22%7D%2C%22dark_theme%22%3A%7B%22name%22%3A%22dark%22%2C%22color_mode%22%3A%22dark%22%7D%7D; logged_in&#x3D;yes; dotcom_user&#x3D;sdqOS; _gh_sess&#x3D;l41S%2BZNr%2F%2Bmx5Y2taob81ssga5CdD5drTY7IWcDY5vIxraTrsep8btIIkpvggyDxCYtFq1Q5q6hzDGNpRs8nTJjCbZqYCGpOEUM4W20s1%2Bxo0d6WnhQZ5W8eO96d60q4p%2BF8eeSGxrdBQBL5zLIZ8uyAD%2BuRaUZL7ZoARDh7qYNssds5cOLTSlkzqJMoHUR2Yp2wy%2FNKMTEIs40hwMdjF2bbbTE4Cah3Srm29no9Lw3fvC7Z4uFLWQtzwMLwE7KEImrKAODH2dTZeYVyxBRfX5iyyA8qpO0wg%2FyAivegnpLQyQXZGQ3%2BTr4zNxEcy2Utqkhd%2FwdRQ%2Bk%2BGR2ibrXxoE3L28fyD0zqywpmxLbKmqWqkum%2B9BK99UHuFkdmUtOzdifjbYekleDfDETDUPAF3Ubvkc3pwvnlZZC66jZzX9mvbElHZlOpE8eLncyGc5jmTYBgVseIwxGs13ZkvEfZ76debhVyRHABDyfAgNsiZWHcz4I34WbPele1GjNF2qF4Fhn03cy%2FktvUW4F7pcXhx2ABKqcVNDqXtd%2BKWkdRDivx5fxtu8i1%2BE5FDuvSF%2FM8eUGjX%2FPs%2B%2BoiJ06SmbybI%2FMBoi6YLCwD4Z0iVrx1EENzH54Oknn3NTQoIHOpzgYFx4l6HzJbiTAIIZeApYhEwD82zuvditr5EaPUApQQuVdm6vXNyvFq%2B%2BLHglipgI6WXCwV1vp7GU%2FtZw6EsMX5RR2zdKnsQODuy92uTEMAnnS7ECkqUh0OUuiSNXsa6lWNqCiJId7MgEE4gkSTQawWO775i98vP2Rx6%2B%2BVkdQsYFOgYxiYZgbI%2BQCyak8YbIZXWbXtBziGYILPZM8zdm1vVJWXdgcBZfF90jZSGkr7EgNqVBQuVCHZNg9ZxmmRZ54J1K28e6r2UL7HLb5%2F3MycVrhQUelq8wPY--TcRWY%2B%2FTS0Zgmyhj--k8C1M7YSHlzTdGPKtUMwoQ%3D%3D&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">respinse &#x3D; requests.get(url, headers&#x3D;headers,)</span><br><span class="line"></span><br><span class="line"># 看看是给谁发请求</span><br><span class="line">print(respinse.url)</span><br><span class="line"></span><br><span class="line">with open(&#39;github.html&#39;, &#39;wb&#39;)as f:</span><br><span class="line">    f.write(respinse.content)</span><br></pre></td></tr></table></figure>
<p>#构建cookie字典</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url &#x3D; &#39;https:&#x2F;&#x2F;github.com&#x2F;sdqOS&#39;</span><br><span class="line"></span><br><span class="line"># 构造请求头字典</span><br><span class="line">headers &#x3D; &#123;</span><br><span class="line">    &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;90.0.4430.72 Safari&#x2F;537.36&quot;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">temp &#x3D; &quot;_octo&#x3D;GH1.1.1829904439.1611247247; _device_id&#x3D;326c46400086ed13ec278dc836662948; _locale&#x3D;ko; _locale_experiment&#x3D;ko; tz&#x3D;Asia%2FShanghai; has_recent_activity&#x3D;1; user_session&#x3D;zW4-2Xj6Rnda4YLHfsc5pFcRYfJB60BCft6Iwqh31V1lM6eU; __Host-user_session_same_site&#x3D;zW4-2Xj6Rnda4YLHfsc5pFcRYfJB60BCft6Iwqh31V1lM6eU; tz&#x3D;Asia%2FShanghai; color_mode&#x3D;%7B%22color_mode%22%3A%22auto%22%2C%22light_theme%22%3A%7B%22name%22%3A%22light%22%2C%22color_mode%22%3A%22light%22%7D%2C%22dark_theme%22%3A%7B%22name%22%3A%22dark%22%2C%22color_mode%22%3A%22dark%22%7D%7D; logged_in&#x3D;yes; dotcom_user&#x3D;sdqOS; _gh_sess&#x3D;l41S%2BZNr%2F%2Bmx5Y2taob81ssga5CdD5drTY7IWcDY5vIxraTrsep8btIIkpvggyDxCYtFq1Q5q6hzDGNpRs8nTJjCbZqYCGpOEUM4W20s1%2Bxo0d6WnhQZ5W8eO96d60q4p%2BF8eeSGxrdBQBL5zLIZ8uyAD%2BuRaUZL7ZoARDh7qYNssds5cOLTSlkzqJMoHUR2Yp2wy%2FNKMTEIs40hwMdjF2bbbTE4Cah3Srm29no9Lw3fvC7Z4uFLWQtzwMLwE7KEImrKAODH2dTZeYVyxBRfX5iyyA8qpO0wg%2FyAivegnpLQyQXZGQ3%2BTr4zNxEcy2Utqkhd%2FwdRQ%2Bk%2BGR2ibrXxoE3L28fyD0zqywpmxLbKmqWqkum%2B9BK99UHuFkdmUtOzdifjbYekleDfDETDUPAF3Ubvkc3pwvnlZZC66jZzX9mvbElHZlOpE8eLncyGc5jmTYBgVseIwxGs13ZkvEfZ76debhVyRHABDyfAgNsiZWHcz4I34WbPele1GjNF2qF4Fhn03cy%2FktvUW4F7pcXhx2ABKqcVNDqXtd%2BKWkdRDivx5fxtu8i1%2BE5FDuvSF%2FM8eUGjX%2FPs%2B%2BoiJ06SmbybI%2FMBoi6YLCwD4Z0iVrx1EENzH54Oknn3NTQoIHOpzgYFx4l6HzJbiTAIIZeApYhEwD82zuvditr5EaPUApQQuVdm6vXNyvFq%2B%2BLHglipgI6WXCwV1vp7GU%2FtZw6EsMX5RR2zdKnsQODuy92uTEMAnnS7ECkqUh0OUuiSNXsa6lWNqCiJId7MgEE4gkSTQawWO775i98vP2Rx6%2B%2BVkdQsYFOgYxiYZgbI%2BQCyak8YbIZXWbXtBziGYILPZM8zdm1vVJWXdgcBZfF90jZSGkr7EgNqVBQuVCHZNg9ZxmmRZ54J1K28e6r2UL7HLb5%2F3MycVrhQUelq8wPY--TcRWY%2B%2FTS0Zgmyhj--k8C1M7YSHlzTdGPKtUMwoQ%3D%3D&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cookie_list &#x3D; temp.split(&#39;; &#39;)</span><br><span class="line"></span><br><span class="line"># 熟练方案</span><br><span class="line">cookies &#x3D; &#123; cookie.split(&#39;&#x3D;&#39;)[0]:cookie.split(&#39;&#x3D;&#39;)[-1] for cookie in cookie_list&#125;</span><br><span class="line"></span><br><span class="line"># 稳妥方案</span><br><span class="line"># cookies &#x3D; &#123;&#125;</span><br><span class="line"></span><br><span class="line"># for cookie in cookie_list:</span><br><span class="line">#     cookies[cookie.split(&#39;&#x3D;&#39;)[0]] &#x3D; cookie.split(&#39;&#x3D;&#39;)[-1]</span><br><span class="line"></span><br><span class="line"># print(cookies)</span><br><span class="line"></span><br><span class="line"># # 构造cookie字典</span><br><span class="line"></span><br><span class="line">response &#x3D; requests.get(url, headers&#x3D;headers,cookies&#x3D;cookies)</span><br><span class="line"></span><br><span class="line"># 看看是给谁发请求</span><br><span class="line">print(response.url)</span><br><span class="line"></span><br><span class="line">with open(&#39;github3.html&#39;, &#39;wb&#39;)as f:</span><br><span class="line">    f.write(response.content)</span><br></pre></td></tr></table></figure>
<h1 id="cookieJar对象转换成cookie字典方法"><a href="#cookieJar对象转换成cookie字典方法" class="headerlink" title="cookieJar对象转换成cookie字典方法"></a>cookieJar对象转换成cookie字典方法</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url &#x3D; &#39;https:&#x2F;&#x2F;www.baidu.com&#39;</span><br><span class="line"></span><br><span class="line"># 设置(timeout)访问时长为3秒, 然后就断开</span><br><span class="line">response &#x3D; response.get(url, timeout&#x3D;3)</span><br><span class="line"></span><br><span class="line">print(response.cookies)</span><br><span class="line"></span><br><span class="line"># 将对象转字典</span><br><span class="line">dict_cookie &#x3D; requests.utils.dict_from_cookiejar(response.cookies)</span><br><span class="line">print(dict_cookie)</span><br><span class="line"></span><br><span class="line"># 将字典转换为对象</span><br><span class="line">jar_cookies &#x3D; requests.utils.cookiejar_from_dict(dict_cookies)</span><br><span class="line">print(jar_cookies)</span><br></pre></td></tr></table></figure>
<!--副作用丢失域名 这个不要紧我们自己知道这个cookie对应哪个域名的-->
]]></content>
  </entry>
  <entry>
    <title>爬虫 http和https(吃牢饭集合)</title>
    <url>/reptile-http-https.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>

<h1 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h1><p><strong>HTTP: 超文本传输协议, 默认端口号是80</strong></p>
<ul>
<li>超文本: 是指超过文本, 不仅限于文本; 还包含图片, 音频等文件</li>
<li>传输协议: 是指使用共用约定的固定格式来传递转换成字符串的超文本内容</li>
</ul>

<p><strong>HTTPS: HTTP + SSL(安全套接字层), 即带有安全套接字层的超文本传输协议, 默认端口号: 443</strong></p>
<ul>
<li>SSL对传输的内容(超文本, 也就是请求体或响应体)进行加密</li>
</ul>

<p><strong>可以打开浏览器访问一个url, 右键检查, 点击network, 点选一个url, 查看http协议的形式</strong></p>
<h1 id="HTTPS因为要加密缘故相比HTTP较慢一些-性能低一些-但是比HTTP更安全"><a href="#HTTPS因为要加密缘故相比HTTP较慢一些-性能低一些-但是比HTTP更安全" class="headerlink" title="HTTPS因为要加密缘故相比HTTP较慢一些,性能低一些, 但是比HTTP更安全"></a>HTTPS因为要加密缘故相比HTTP较慢一些,性能低一些, 但是比HTTP更安全</h1>]]></content>
  </entry>
  <entry>
    <title>爬虫 requests模块(吃牢饭集合)</title>
    <url>/reptile-header.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>
<h1 id="response-text和response-content的区别"><a href="#response-text和response-content的区别" class="headerlink" title="response.text和response.content的区别"></a>response.text和response.content的区别</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入requests库</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line"># 目标url</span><br><span class="line">url &#x3D; &quot;https:www.baidu.com&quot;</span><br><span class="line"></span><br><span class="line"># 向目标url发送get请求</span><br><span class="line">response &#x3D; requetst.get(url)</span><br><span class="line"></span><br><span class="line"># 手动设定编码格式</span><br><span class="line">response.encoding &#x3D; &#39;utf8&#39;  #等于response.content.decode()</span><br><span class="line"></span><br><span class="line"># 打印响应内容</span><br><span class="line">print(response.text)  #等于response.content.decode(&quot;推测出的编码字符集&quot;)</span><br></pre></td></tr></table></figure>
<p><strong>response.text</strong></p>
<ul>
<li>类型: str</li>
<li>解码类型: requests模块自动根据HTTP 头部对响应的编码作出有根据的推测, 推测的文本编码</li>
</ul>

<p><strong>response.content</strong></p>
<ul>
<li>类型: bytes</li>
<li>解码类型: 没有指定</li>
</ul>

<p><strong>response.content进行decode解决中文乱码</strong></p>
<ul>
<li>response.content.decode() 默认utf-8</li>
<li>response.content.decode("GBK")</li>
<ul>
<li>utf-8</li>
<li>gbk</li>
<li>gb2312</li>
<li>ascli (阿斯克码)</li>
<li>iso-8859-1</li>
</ul>
</ul>

<h1 id="response响应对象的其它常用属性或方法"><a href="#response响应对象的其它常用属性或方法" class="headerlink" title="response响应对象的其它常用属性或方法"></a>response响应对象的其它常用属性或方法</h1><p><strong>response = requests.get(url) 中response是发送请求获取的响应对象; response响应对象中·除了text, cintent获取响应内容以外还有其它常用的属性或方法</strong></p>
<ul>
<li>response.url 响应的url; 有时候响应utl和请求utl并不一致</li>
<li>response.status_code 响应状态码</li>
<li>response.requests.headers 响应对应的请求头</li>
<li>response.headers 响应头</li>
<li>response.headers._cookies 响应对应请求的cookie; 返回cookieJar类型</li>
<li>response.cookies 响应的cookie (经过set-ccookie动作; 返回cookie类型)</li>
<li>response.json() 自动将json字符串类型的响应内容转换python对象 (dict or list)</li>
</ul>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入requests库</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line"># 目标url</span><br><span class="line">url &#x3D; &quot;https:www.baidu.com&quot;</span><br><span class="line"></span><br><span class="line"># 向目标url发送get请求</span><br><span class="line">response &#x3D; requetst.get(url)</span><br><span class="line"></span><br><span class="line"># 手动设定编码格式</span><br><span class="line">response.encoding &#x3D; &#39;utf8&#39;  #等于response.content.decode()</span><br><span class="line"></span><br><span class="line"># 打印响应内容</span><br><span class="line">print(response.url)  #打印响应的url</span><br><span class="line">print(response.status_code)  #打印响应的状态码</span><br><span class="line">print(response.request.headers)  #打印响应对象的请求头</span><br><span class="line">print(response.headers)  #打印响应头</span><br><span class="line">print(response.request._cookies)  #打印响应的url</span><br><span class="line">print(response.cookies)  #打印响应中携带的cookies</span><br></pre></td></tr></table></figure>

<!-- 知识点
# 掌握headers参数的使用
# 掌握发送带参数的请求
# 掌握headers中携带cookie
# 掌握cookies参数的使用
# 掌握cookieJar的转换方法
# 掌握超时参数timeout的使用
# 掌握代理ip参数proxies的使用
# 掌握使用verify参数忽略CA证书
# 掌握requests模块发送post请求
# 掌握利用requests.sesion进行状态保持 -->

<h1 id="post方法"><a href="#post方法" class="headerlink" title="post方法"></a>post方法</h1>]]></content>
  </entry>
  <entry>
    <title>爬虫 re模块的使用(牢饭吃到饱)</title>
    <url>/reptile-re.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>


<h1 id="学习re模块先学正则表达式"><a href="#学习re模块先学正则表达式" class="headerlink" title="学习re模块先学正则表达式"></a>学习re模块先学正则表达式</h1><h1 id="findall"><a href="#findall" class="headerlink" title="findall"></a>findall</h1><p><strong>匹配字符串中所有的符号正则的内容</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import re </span><br><span class="line"></span><br><span class="line">sdq &#x3D; re.findall(r&quot;\d+&quot;,613号实验品 亚亚,617号实验品 团团,618号实验品 红绿灯,619号实验品 火焰球,624号实验品 安琪,</span><br><span class="line">625号实验品 鲁本,626号实验品 史迪仔)</span><br><span class="line">print(sdq)</span><br></pre></td></tr></table></figure>
<h1 id="finditer"><a href="#finditer" class="headerlink" title="finditer"></a>finditer</h1><p><strong>匹配字符串中所有的内容 [返回的是迭代器] 从迭代器中拿到内容需要.group</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import re </span><br><span class="line"></span><br><span class="line">sdq &#x3D; re.findall(r&quot;\d+&quot;,613号实验品 亚亚,617号实验品 团团,618号实验品 红绿灯,619号实验品 火焰球,624号实验品 安琪,</span><br><span class="line">625号实验品 鲁本,626号实验品 史迪仔)</span><br><span class="line">for i sdq:</span><br><span class="line">    print(sdq.group())</span><br></pre></td></tr></table></figure>
<h1 id="search"><a href="#search" class="headerlink" title="search"></a>search</h1><p><strong>返回第一个拿到的结果, 返回的结果是match对象, .group()是拿数据</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import re </span><br><span class="line"></span><br><span class="line">sdq &#x3D; re.search(r&quot;\d+&quot;,613号实验品 亚亚,617号实验品 团团,618号实验品 红绿灯,619号实验品 火焰球,624号实验品 安琪,</span><br><span class="line">625号实验品 鲁本,626号实验品 史迪仔)</span><br><span class="line">print(sdq.group())</span><br></pre></td></tr></table></figure>
<h1 id="match"><a href="#match" class="headerlink" title="match"></a>match</h1><p><strong>从头开始匹配, 前面没有就停止</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import re </span><br><span class="line"></span><br><span class="line">sdq &#x3D; re.search(r&quot;\d+&quot;,613号实验品 亚亚,617号实验品 团团,618号实验品 红绿灯,619号实验品 火焰球,624号实验品 安琪,</span><br><span class="line">625号实验品 鲁本,626号实验品 史迪仔)</span><br><span class="line">print(sdq.group())</span><br></pre></td></tr></table></figure>
<h1 id="预加载正则表达式"><a href="#预加载正则表达式" class="headerlink" title="预加载正则表达式"></a>预加载正则表达式</h1><p><strong>从头开始匹配, 前面没有就停止</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import re </span><br><span class="line"></span><br><span class="line">sdq &#x3D; re.compile(r&quot;\d+&quot;)</span><br><span class="line"></span><br><span class="line">zdz &#x3D; sdq.finditer(&quot;613号实验品 亚亚,617号实验品 团团,618号实验品 红绿灯,619号实验品 火焰球,624号实验品 安琪,</span><br><span class="line">625号实验品 鲁本,626号实验品 史迪仔&quot;)</span><br><span class="line"></span><br><span class="line">for it in sdz</span><br><span class="line">    print(it.group())</span><br></pre></td></tr></table></figure>
<h1 id="预加载正则表达式-1"><a href="#预加载正则表达式-1" class="headerlink" title="预加载正则表达式"></a>预加载正则表达式</h1><p><strong>从头开始匹配, 前面没有就停止</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import re </span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&#39;yy&#39;&gt;&lt;span id&#x3D;&quot;613&quot;&gt;亚亚&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&#39;tt&#39;&gt;&lt;span id&#x3D;&quot;617&quot;&gt;团团&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&#39;hld&#39;&gt;&lt;span id&#x3D;&quot;618&quot;&gt;红绿灯&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&#39;tt&#39;&gt;&lt;span id&#x3D;&quot;619&quot;&gt;团团&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&#39;lb&#39;&gt;&lt;span id&#x3D;&quot;625&quot;&gt;鲁本&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class&#x3D;&#39;sdq&#39;&gt;&lt;span id&#x3D;&quot;626&quot;&gt;史迪奇&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;</span><br><span class="line"># (?&lt;分组名字&gt;正则表达式)</span><br><span class="line">obj &#x3D; re.compile(r&quot;&lt;div class&#x3D;&#39;.*?&#39;&gt;&lt;span id&#x3D;&quot;(?&lt;id&gt;\d+)&quot;&gt;(?P&lt;name&gt;.*?)&lt;&#x2F;span&gt;&lt;&#x2F;div&gt;, re.S)  # re.S: 让.能匹配换行符</span><br><span class="line"></span><br><span class="line">result &#x3D; obj.finditer(s)</span><br><span class="line"></span><br><span class="line">for it in sdz</span><br><span class="line">    print(it.group())</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>爬虫 verify参数与CA证书(吃牢饭集合)</title>
    <url>/reptile-verify-CA.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line"># 例如校园网</span><br><span class="line">url &#x3D; &quot;https:&#x2F;&#x2F;sam.huat.edu.cn:8443&#x2F;selfservice&#x2F;&quot;</span><br><span class="line"></span><br><span class="line">response &#x3D; requests.get(url, verify&#x3D;False)</span><br><span class="line"></span><br><span class="line">print(response.content)</span><br><span class="line">print(response.text)</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>爬虫 xpath(牢饭吃到饱)</title>
    <url>/reptile-xpath.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>


<h1 id="xpath-是在XML文档中搜索内容的一门语言"><a href="#xpath-是在XML文档中搜索内容的一门语言" class="headerlink" title="xpath 是在XML文档中搜索内容的一门语言"></a>xpath 是在XML文档中搜索内容的一门语言</h1><p><strong>html是xml的一个子集</strong></p>
<h1 id="安装xpath"><a href="#安装xpath" class="headerlink" title="安装xpath"></a>安装xpath</h1><p><strong>打开cmd 输入以下内容</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install xpath</span><br></pre></td></tr></table></figure>
<h1 id="xpath语法"><a href="#xpath语法" class="headerlink" title="xpath语法"></a>xpath语法</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">主要分为3大类</span><br><span class="line"></span><br><span class="line">层级:   &#x2F; 直接子集   &#x2F;&#x2F; 跳级</span><br><span class="line"></span><br><span class="line">属性:   @ 属性访问</span><br><span class="line"></span><br><span class="line">函数:   contains() 包含   text()文本 等...</span><br></pre></td></tr></table></figure>
<h1 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h1><p><strong>打开这个<a href="https://www.umei.cc/bizhitupian/weimeibizhi/">网址</a></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入xpath</span><br><span class="line">from lxml import etree</span><br><span class="line"></span><br><span class="line">xml &#x3D; &quot;&quot;&quot;</span><br><span class="line">&lt;book&gt;</span><br><span class="line">    &lt;id&gt;???&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;name&gt;星际宝贝&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;price&gt;!!!&lt;&#x2F;price&gt;</span><br><span class="line">    &lt;nick&gt;实验品&lt;&#x2F;nick&gt;</span><br><span class="line">    &lt;author&gt;</span><br><span class="line">        &lt;nick id&#x3D;&quot;624&quot;&gt;安琪&lt;&#x2F;nick&gt;</span><br><span class="line">        &lt;nick id&#x3D;&quot;625&quot;&gt;鲁本&lt;&#x2F;nick&gt;</span><br><span class="line">        &lt;nick id&#x3D;&quot;626&quot;&gt;史迪奇&lt;&#x2F;nick&gt;</span><br><span class="line">        &lt;nick class&#x3D;&quot;221&quot;&gt;小火花&lt;&#x2F;nick&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;nick&gt;搞破坏&lt;&#x2F;nick&gt;</span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">        &lt;span&gt;</span><br><span class="line">            &lt;nick&gt;吃饭&lt;&#x2F;nick&gt;</span><br><span class="line">        &lt;&#x2F;span&gt;</span><br><span class="line">    &lt;&#x2F;author&gt;</span><br><span class="line"></span><br><span class="line">    &lt;partner&gt;</span><br><span class="line">        &lt;nick id&#x3D;&quot;029&quot;&gt;跳棋&lt;&#x2F;nick&gt;</span><br><span class="line">        &lt;nick id&#x3D;&quot;001&quot;&gt;史灵可&lt;&#x2F;nick&gt;</span><br><span class="line">    &lt;&#x2F;partner&gt;</span><br><span class="line">&lt;&#x2F;book&gt;</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">tree &#x3D; etree.HTML(html.text)   #加载爬取下来的源码</span><br><span class="line"># tree &#x3D; etree.parse(paese)   #加载文件</span><br><span class="line"># tree &#x3D; etree.XML(xml)       #加载XML</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result &#x3D; tree.xpath(&quot;&#x2F;book&#x2F;&#x2F;nick&#x2F;text().extract&quot;) #text()就是文字 .extract就是提取</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure>
<h1 id="HTML代码-保存sdq-html"><a href="#HTML代码-保存sdq-html" class="headerlink" title="HTML代码 保存sdq.html"></a>HTML代码 保存sdq.html</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;en&quot;&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset&#x3D;&quot;UTF-8&quot; &#x2F;&gt;</span><br><span class="line">        &lt;title&gt;Title&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;&#x2F;head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.baidu.com&quot;&gt;百度&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.google.com&quot;&gt;谷歌&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href&#x3D;&quot;http:&#x2F;&#x2F;www.sogou.com&quot;&gt;搜狗&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line">        &lt;ol&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href&#x3D;&quot;Stitch&quot;&gt;Stitch&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href&#x3D;&quot;sdq&quot;&gt;史迪奇&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;li&gt;&lt;a href&#x3D;&quot;sdz&quot;&gt;史迪仔&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;</span><br><span class="line">        &lt;&#x2F;ol&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;Lilo&quot;&gt;莉萝&lt;&#x2F;div&gt;</span><br><span class="line">        &lt;div class&#x3D;&quot;Nani&quot;&gt;兰莉&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>
<h1 id="py代码"><a href="#py代码" class="headerlink" title="py代码"></a>py代码</h1><pre><code>from lxml import etree

tree = etree.parse(&quot;sdq.html&quot;)
# result = tree.xpath(&#39;/html&#39;)
# result = tree.xpath(&quot;/html/body/ul/li/a/text()&quot;)
# result = tree.xpath(&quot;/html/body/ul/li[1]/a/text()&quot;)  # xpath的顺序是从1开始数的, []表示索引

# result = tree.xpath(&quot;/html/body/ol/li/a[@href=&#39;dapao&#39;]/text()&quot;)  # [@xxx=xxx] 属性的筛选

# print(result)

# ol_li_list = tree.xpath(&quot;/html/body/ol/li&quot;)
#
# for li in ol_li_list:
#     # 从每一个li中提取到文字信息
#     result = li.xpath(&quot;./a/text()&quot;)  # 在li中继续去寻找 相对查找
#     print(result)
#     result2 = li.xpath(&quot;./a/@href&quot;)  # @属性意思是拿到属性值
#     print(result2)
#
# print(tree.xpath(&quot;/html/body/ul/li/a/@href&quot;))

print(tree.xpath(&#39;/html/body/div[1]/text().extract&#39;))       #text()就是文字 .extract就是提取
print(tree.xpath(&#39;/html/body/ol/li/a/text().extract&#39;))      #text()就是文字 .extract就是提取</code></pre>
]]></content>
  </entry>
  <entry>
    <title>爬虫 代理(吃牢饭集合)</title>
    <url>/reptile-agent.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>
<h1 id="理解使用代理的过程"><a href="#理解使用代理的过程" class="headerlink" title="理解使用代理的过程"></a>理解使用代理的过程</h1><p><strong>代理ip是一个ip, 指向的是一个代理服务器</strong></p>
<p><strong>代理服务器能够帮我们向目标服务器转发请求</strong></p>
<pre><code>   ↗￣request￣￣↘   ↗￣request￣￣↘
浏览器             代理              Web server
   ↖__response__ ↙   ↖__response__↙</code></pre>
<h1 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h1><p><strong>为浏览器或客户端(发送请求的一方)转发请求的, 叫做正向代理</strong></p>
<ul>
<li>浏览器知道最终处理请求服务器的真实ip地址, 例如vpn</li>
</ul>

<h1 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h1><p><strong>不为浏览器或客户端(发送请求的一方)转发请求的, 而是为最终处理请求的服务器转发请求的,叫做反向代理</strong></p>
<ul>
<li>浏览器不知道服务器的真实ip地址, 例如nginx</li>
</ul>

<h1 id="怎么区分正向代理和反向代理"><a href="#怎么区分正向代理和反向代理" class="headerlink" title="怎么区分正向代理和反向代理"></a>怎么区分正向代理和反向代理</h1><p><strong>知不知道最终服务器的地址作为判断标准 知道正向 不知道反向</strong></p>
<h1 id="代理ip-代理服务器-的分类"><a href="#代理ip-代理服务器-的分类" class="headerlink" title="代理ip(代理服务器)的分类"></a>代理ip(代理服务器)的分类</h1><p><strong>透明代理(Transparent Proxy) 透明代理虽然直接隐藏你的ip地址, 但还是可以查看的到 目标服务器接收到的请求头如下:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">REMOTE_ADDR &#x3D; Proxy IP</span><br><span class="line"></span><br><span class="line">HTTP_VIA &#x3D; Proxy IP</span><br><span class="line"></span><br><span class="line">HTTP_X_FORWARDED_FOR &#x3D; 你的IP</span><br></pre></td></tr></table></figure>
<p><strong>匿名代理(Anonymous Proxy) 使用匿名代理, 别人只能知道你用了代理, 无法知道你是谁 目标服务器接收到的请求头如下:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">REMOTE_ADDR &#x3D; Proxy IP</span><br><span class="line"></span><br><span class="line">HTTP_VIA &#x3D; Proxy IP</span><br><span class="line"></span><br><span class="line">HTTP_X_FORWARDED_FOR &#x3D; Proxy IP</span><br></pre></td></tr></table></figure>
<p><strong>高匿代理(Elite Proxy或者High Anonymous Proxy) 使用高匿代理让别人无法发现你是在用代理, 所以是最好选择 效果最好 目标服务器接收到的请求头如下:</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">REMOTE_ADDR &#x3D; Proxy IP</span><br><span class="line"></span><br><span class="line">HTTP_VIA &#x3D; not determined</span><br><span class="line"></span><br><span class="line">HTTP_X_FORWARDED_FOR &#x3D; not determined</span><br></pre></td></tr></table></figure>
<h1 id="根据网站所使用的协议不同-需要使用相应协议的代理服务"><a href="#根据网站所使用的协议不同-需要使用相应协议的代理服务" class="headerlink" title="根据网站所使用的协议不同, 需要使用相应协议的代理服务"></a>根据网站所使用的协议不同, 需要使用相应协议的代理服务</h1><ul>
<li>http代理: 目标url为http协议</li>
<li>https代理: 目标url为https协议</li>
<li>socks隧道代理: 例如socks5
<ul>
<li>socks代理只是简单传递数据包, 不关心是何种应用协议(FTP, HTTP, HTTPS等)</li>
<li>socks代理比http和https代理耗时少</li>
<li>socks代理可以转发http请求和https请求</li>
</ul>
</li>
</ul>

<h1 id="proxies代理参数的使用"><a href="#proxies代理参数的使用" class="headerlink" title="proxies代理参数的使用"></a>proxies代理参数的使用</h1><p><strong>为了让服务器以为不是同一个客户端的请求, 防止频繁向一个域名发送请求被封ip, 所以要使用代理ip</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 主意: proxies字典中包含多个键值对, 发送请求时将按照url地址的协议来选择对应的代理ip</span><br><span class="line"></span><br><span class="line"># proxies通常是用字典形式使用</span><br><span class="line">proxies &#x3D; &#123;</span><br><span class="line">    &quot;http&quot;:&quot;http:&#x2F;&#x2F;106.14.5.128:80&quot;,</span><br><span class="line">    &quot;https&quot;:&quot;http:&#x2F;&#x2F;106.14.5.130:80&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># reuests模块使用代理的用法:</span><br><span class="line">response &#x3D; requests.get(url, proxies&#x3D;proxies)</span><br></pre></td></tr></table></figure>







































































<!-- <div id="dl-1" style="width:100%;height:500px"></div>

<script>
var chartDom = document.getElementById('dl-1');
var myChart = echarts.init(chartDom);
var option;

option = {
    title: {
        text: 'Graph 简单示例'
    },
    tooltip: {},
    animationDurationUpdate: 1500,
    animationEasingUpdate: 'quinticInOut',
    series: [
        {
            type: 'graph',
            layout: 'none',
            symbolSize: 50,
            roam: true,
            label: {
                show: true
            },
            edgeSymbol: ['circle', 'arrow'],
            edgeSymbolSize: [4, 10],
            edgeLabel: {
                fontSize: 20
            },
            data: [{
                name: '节点1',
                x: 300,
                y: 300
            }, {
                name: '节点2',
                x: 800,
                y: 300
            }, {
                name: '节点3',
                x: 550,
                y: 100
            }, {
                name: '节点4',
                x: 550,
                y: 500
            },
            {
                name: '节点5',
                x: 350,
                y: 500
            }


            ],
            // links: [],
            links: [{
                source: 0,
                target: 1,
                symbolSize: [5, 20],
                label: {
                    show: true
                },
                lineStyle: {
                    width: 5,
                    curveness: 0.2
                }
            }, {
                source: '节点2',
                target: '节点1',
                label: {
                    show: true
                },
                lineStyle: {
                    curveness: 0.2
                }
            }, {
                source: '节点1',
                target: '节点3'
            }, {
                source: '节点2',
                target: '节点3'
            }, {
                source: '节点2',
                target: '节点4'
            }, {
                source: '节点1',
                target: '节点4'
            },{
                source: '节点5',
                target: '节点1'
            }

            ],
            lineStyle: {
                opacity: 0.9,
                width: 2,
                curveness: 0
            }
        }
    ]
};

option && myChart.setOption(option);
</script> -->]]></content>
  </entry>
  <entry>
    <title>爬虫 报文(吃牢饭集合)</title>
    <url>/reptile-message.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>

<h1 id="查看报文"><a href="#查看报文" class="headerlink" title="查看报文"></a>查看报文</h1><p><strong>点击Request Headers旁边的view parsed</strong></p>
<p><strong>注意: view parsed没点之前其实是给你优化过的</strong></p>
<h1 id="报文格式"><a href="#报文格式" class="headerlink" title="报文格式"></a>报文格式</h1><table>
<thead>
<tr>
<th>GET</th>
<th>HTTP</th>
<th>1.1</th>
<th>Host</th>
</tr>
</thead>
<tbody><tr>
<td>方法</td>
<td>路径</td>
<td>协议版本</td>
<td>发送请求的域名</td>
</tr>
</tbody></table>
<ul>
<li>Content-Type</li>
<li>Host (主机和端口号)</li>
<li>Connection (链接类型/常链接)</li>
<li>UPgrade-Insecure-Requests (升级为HTTPS请求)</li>
<li>User-Agent (用户代理 提供系统信息和浏览器信息)</li>
<li>Referer (页面跳转处)</li>
<li>Cookie (Cookie数据非常重要,)</li>
<li>Authorization (表示HTTP协议中需要认证资源的认证信息, 例如用于jwt认证)</li>
</ul>

<p><strong>请求头表格形式</strong></p>
<table>
<thead>
<tr>
<th>特别关注</th>
<th>以下几个请求头</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>Host</td>
<td>域名</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Connection</td>
<td>常链接</td>
<td></td>
<td></td>
</tr>
<tr>
<td>UPgrade-Insecure-Requests</td>
<td>升级为HTTPS请求</td>
<td></td>
<td></td>
</tr>
<tr>
<td>User-Agent</td>
<td>用户代理</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Refrer</td>
<td>页面跳转处, 防盗链</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Cookie</td>
<td>保持状态, 用于跳过账号密码</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>响应头表格形式</strong></p>
<table>
<thead>
<tr>
<th>特别关注</th>
<th>以下几个请求头</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>HTTP/1.1</td>
<td>协议</td>
<td></td>
<td></td>
</tr>
<tr>
<td>200</td>
<td>状态码</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Set-Cookie</td>
<td>cookie到用户浏览器的缓存非常重要用于跳过账号密码</td>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>爬虫 概念(牢饭吃到饱)</title>
    <url>/reptile-concept.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>


<h1 id="服务器渲染"><a href="#服务器渲染" class="headerlink" title="服务器渲染"></a>服务器渲染</h1><p><strong>其实就是在服务器那边直接把数据和HTMl整合在一起, 统一返回浏览器, 其实源代码就是网站的基本面貌, 之所以有可视化界面都是浏览器的功劳</strong></p>
<h1 id="客户端渲染"><a href="#客户端渲染" class="headerlink" title="客户端渲染"></a>客户端渲染</h1><p><strong>第一次只是请求HTMl骨架, 第二次请求拿到数据, 然后在你的浏览器中组合变形</strong></p>
<h1 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h1><p><strong>HTTP协议传输的就是网站源代码</strong></p>
<h1 id="HTTP协议把一条消息分为三大块内容"><a href="#HTTP协议把一条消息分为三大块内容" class="headerlink" title="HTTP协议把一条消息分为三大块内容"></a>HTTP协议把一条消息分为三大块内容</h1><h1>请求: </h1>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">请求行 -&gt; 请求方式(get&#x2F;post) 请求url地址 协议</span><br><span class="line"></span><br><span class="line">请求头 -&gt; 放一些服务器要使用的附加信息</span><br><span class="line"></span><br><span class="line">请求体 -&gt; 一般放一些请求参数</span><br></pre></td></tr></table></figure>
<h1>响应: </h1>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">状态行 -&gt;  协议 状态码 例如:404</span><br><span class="line"></span><br><span class="line">响应头 -&gt; 放一些客户端要使用的附加信息</span><br><span class="line"></span><br><span class="line">响应体 -&gt; 服务器返回的真正客户端要使用的内容 例如:HTML, json等等</span><br></pre></td></tr></table></figure>
<h1 id="请求头中最常见的一些重要内容"><a href="#请求头中最常见的一些重要内容" class="headerlink" title="请求头中最常见的一些重要内容"></a>请求头中最常见的一些重要内容</h1><p><strong>User-Agent: 请求载体的身份标识(用啥发送的请求)</strong></p>
<p><strong>Referer: 防盗链(这次请求是从哪个页面来的? 防爬会用到)</strong></p>
<p><strong>cookie: 本地字符串数据信息(用户登陆信息, 防爬的token)</strong></p>
<h1 id="响应头中一些重要的内容"><a href="#响应头中一些重要的内容" class="headerlink" title="响应头中一些重要的内容"></a>响应头中一些重要的内容</h1><p><strong>cookie: 本地字符串数据信息(用户登陆信息, 防爬的token)</strong></p>
<p><strong>各种神奇的莫名其妙的字符串(一般都是yoken字样,防止各种攻击和防爬)</strong></p>
<h1 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h1><p><strong>GET: 显示提交</strong></p>
<p>查询用的多</p>
<p><strong>POST: 隐示提交</strong></p>
<p>增加,修改,上传服务器里面的数据</p>
<h1 id="数据解析的三种方式"><a href="#数据解析的三种方式" class="headerlink" title="数据解析的三种方式"></a>数据解析的三种方式</h1><p><strong>re解析</strong></p>
<p><strong>bs4解析</strong></p>
<p><strong>xpath解析</strong></p>
]]></content>
  </entry>
  <entry>
    <title>爬虫 正则表达式(牢饭吃到饱)</title>
    <url>/reptile-RegEx.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>


<h1 id="正则表达式的优点和缺点"><a href="#正则表达式的优点和缺点" class="headerlink" title="正则表达式的优点和缺点"></a>正则表达式的优点和缺点</h1><p><strong>优点: 速度快, 效率高, 准确度高</strong></p>
<p><strong>缺点: 优点老手福利, 新手? ? ?</strong></p>
<h1 id="正则表达式的概念"><a href="#正则表达式的概念" class="headerlink" title="正则表达式的概念"></a>正则表达式的概念</h1><p><strong>使用元字符进行排列组合用来匹配字符串</strong></p>
<h1 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h1><p><strong>常用元字符</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.          匹配除换行符以外的任意字符</span><br><span class="line">    </span><br><span class="line">\w         匹配字母或数字或下划线</span><br><span class="line">    </span><br><span class="line">\s         匹配任意的空白符</span><br><span class="line">    </span><br><span class="line">\d         匹配数字</span><br><span class="line">    </span><br><span class="line">\n         匹配一个换行符</span><br><span class="line">    </span><br><span class="line">\t         匹配一个制表符</span><br><span class="line">    </span><br><span class="line">^          匹配字符串的开始</span><br><span class="line">    </span><br><span class="line">$          匹配字符串的结尾</span><br><span class="line">    </span><br><span class="line">\w         匹配非字母或数字或下划线</span><br><span class="line">    </span><br><span class="line">\D         匹配非数字</span><br><span class="line">    </span><br><span class="line">\S         匹配非空白符</span><br><span class="line">    </span><br><span class="line">a|b        匹配字符a或字符b</span><br><span class="line">    </span><br><span class="line">()         匹配括号内的表达式, 也表示一个组</span><br><span class="line">    </span><br><span class="line">[]         匹配字符中的字符    例如 [a-zA-z0-9]</span><br><span class="line">    </span><br><span class="line">[^]        匹配除了字符组中字符的所有字符</span><br></pre></td></tr></table></figure>
<p><strong>量词: 控制前面的元字符出现的次数</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*          重复零次或更多次 </span><br><span class="line"></span><br><span class="line">+          重复一次或更多次</span><br><span class="line"></span><br><span class="line">?          重复零次或一次  说白了就是出现或者不出现</span><br><span class="line"></span><br><span class="line">&#123;n&#125;        重复n次</span><br><span class="line"></span><br><span class="line">&#123;n,&#125;       重复n次或更多次</span><br><span class="line"></span><br><span class="line">&#123;n,m&#125;      重复n到m次</span><br></pre></td></tr></table></figure>
<p><strong>贪婪匹配和惰性匹配</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.*          贪婪匹配      说白了就是尽可能多的匹配</span><br><span class="line"></span><br><span class="line">.*?         惰性匹配      说白了就是尽可能少的匹配</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>爬虫 比Python功能更加强大的node.js简介(牢饭吃到饱)未完待续</title>
    <url>/reptile-python%E2%80%94node.js.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>


<h1 id="node-js爬虫的详细步骤"><a href="#node-js爬虫的详细步骤" class="headerlink" title="node.js爬虫的详细步骤"></a>node.js爬虫的详细步骤</h1><h1 id="第一步-发送http请求-获取整个网页的内容"><a href="#第一步-发送http请求-获取整个网页的内容" class="headerlink" title="第一步 发送http请求, 获取整个网页的内容"></a>第一步 发送http请求, 获取整个网页的内容</h1><h1 id="第二步-通过cheerio对爬取的网页内容进行分析"><a href="#第二步-通过cheerio对爬取的网页内容进行分析" class="headerlink" title="第二步 通过cheerio对爬取的网页内容进行分析"></a>第二步 通过cheerio对爬取的网页内容进行分析</h1><h1 id="第三步-提取关键信息"><a href="#第三步-提取关键信息" class="headerlink" title="第三步 提取关键信息"></a>第三步 提取关键信息</h1><h1 id="使用download库进行批量下载"><a href="#使用download库进行批量下载" class="headerlink" title="使用download库进行批量下载"></a>使用download库进行批量下载</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>爬虫 爬小说(牢饭吃到饱)未完待续</title>
    <url>/reptile-novel.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>


<h1 id="爬小说的详细步骤"><a href="#爬小说的详细步骤" class="headerlink" title="爬小说的详细步骤"></a>爬小说的详细步骤</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import time</span><br><span class="line">feom bs4</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>爬虫 爬猫猫图片(牢饭吃到饱)</title>
    <url>/reptile-mao.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>

<h1 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h1><p><strong>打开这个<a href="http://www.ichong123.com/maomao">网址</a></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 所有用到的库</span><br><span class="line">import requests</span><br><span class="line">import re</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"># 要爬的链接</span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;www.ichong123.com&#x2F;maomao&quot;</span><br><span class="line"></span><br><span class="line"># 请求头</span><br><span class="line">headers &#x3D; &#123;</span><br><span class="line">    &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;90.0.4430.72 Safari&#x2F;537.36&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">paqv &#x3D; requests.get( url&#x3D;url, headers&#x3D;headers )</span><br><span class="line"></span><br><span class="line"># 根据网站的编码来换</span><br><span class="line">paqv.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line"></span><br><span class="line"># xiazai &#x3D; paqv.text</span><br><span class="line"></span><br><span class="line"># print(xiazai)</span><br><span class="line"></span><br><span class="line"># 正则表达式 re.S单行匹配(正则解析比较多) re.M多行匹配()</span><br><span class="line">sdq1 &#x3D; re.compile(r&#39;&lt;div class&#x3D;&quot;pet_s&quot;&gt;.*?&lt;img src&#x3D;(?P&lt;mao&gt;.*?)width&#39;,re.S)</span><br><span class="line">paq &#x3D; sdq1.finditer(paqv.text)</span><br><span class="line">a &#x3D; 1</span><br><span class="line"># 用循环来依次下载</span><br><span class="line">for it in paq:</span><br><span class="line">    time.sleep(3)  #休眠3秒</span><br><span class="line">    ul &#x3D; it.group(&#39;mao&#39;)</span><br><span class="line">    ul2 &#x3D; eval(ul)  #eval()函数用来执行一个字符串表达式，并返回表达式的值</span><br><span class="line">    sdz &#x3D; requests.get(ul2)</span><br><span class="line"></span><br><span class="line">    # 图片文件保存 选择路径</span><br><span class="line">    with open(f&quot;E:&#x2F;百度文档&#x2F;mao&#x2F;&#123;a&#125;.jpg&quot;,&quot;wb&quot;) as f:</span><br><span class="line">        f.write(sdz.content)</span><br><span class="line">        f.close()</span><br><span class="line">        a+&#x3D;1</span><br><span class="line">print(&quot;猫猫下载完了&quot;)</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>爬虫 状态码(吃牢饭集合)</title>
    <url>/reptile-state.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>

<h1 id="状态码"><a href="#状态码" class="headerlink" title="状态码"></a>状态码</h1><p><strong>常见的状态码 (了解就行)</strong></p>
<ul>
<li>200: 成功</li>
<li>302: 跳转, 新的url在响应的Location头中给出</li>
<li>303: 浏览器对于POST的响应进行重新定向至新的url</li>
<li>307: 浏览器对应GET响应进行重新定向至新的url</li>
<li>403: 资源不可用; 服务器理解客户的请求, 但拒绝处理它(没有权限)</li>
<li>404: 找不到资源</li>
<li>500: 服务器内部错误</li>
<li>503: 服务器又有维护或者负载过重未能应答, 在响应中可能会携带Retry-After响应头; 有可能是因为爬虫频繁访问url, 使得服务器忽视爬虫的请求, 最终返回503响应状态码</li>
</ul>

<p><strong>常见状态码表格形式 (了解就行)</strong></p>
<table>
<thead>
<tr>
<th>状态码</th>
<th>代表意思</th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>200</td>
<td>成功</td>
<td></td>
<td></td>
</tr>
<tr>
<td>302</td>
<td>跳转, 新的url在响应的Location头中给出</td>
<td></td>
<td></td>
</tr>
<tr>
<td>303</td>
<td>浏览器对于POST的响应进行重新定向至新的url</td>
<td></td>
<td></td>
</tr>
<tr>
<td>307</td>
<td>浏览器对应GET响应进行重新定向至新的url</td>
<td></td>
<td></td>
</tr>
<tr>
<td>403</td>
<td>资源不可用; 服务器理解客户的请求, 但拒绝处理它(没有权限)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>404</td>
<td>找不到资源</td>
<td></td>
<td></td>
</tr>
<tr>
<td>500</td>
<td>服务器内部错误</td>
<td></td>
<td></td>
</tr>
<tr>
<td>503</td>
<td>服务器又有维护或者负载过重未能应答, 在响应中可能会携带Retry-After响应头; 有可能是因为爬虫频繁访问url, 使得服务器忽视爬虫的请求, 最终返回503响应状态码</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>总结 所有的状态码都不可信, 一切以是否从抓包得到的响应中获得到的数据为准 network中抓包得到的源码才是判断依据, elements中的源码是渲染之后的源码</strong></p>
<table>
<thead>
<tr>
<th>请求过程</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>浏览器</td>
<td>发送所有请求, 进行渲染</td>
</tr>
<tr>
<td>爬虫</td>
<td>发送所有请求, 不会渲染</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>请页面可分为</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>骨骼文件</td>
<td>html静态文件</td>
</tr>
<tr>
<td>肌肉文件</td>
<td>js/ajax请求</td>
</tr>
<tr>
<td>皮肤文件</td>
<td>css/font/图片等</td>
</tr>
</tbody></table>
<p><strong>抓包过程: 根据发送请求的流程分别在 骨骼 / 肌肉 / 皮肤 响应中查找数据</strong></p>
]]></content>
  </entry>
  <entry>
    <title>爬虫 请求头和响应头(吃牢饭集合)</title>
    <url>/reptile-header.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>

<h1 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h1><h1 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h1><p><strong>301是永久重定向, 之后的请求中客户端应该使用新的URI(即, 可以被浏览器缓存), 对于POST/PUT/DELETE请求 客户端不应该自动的重定向</strong></p>
<p><strong>302是由于未知原因重定向, 之后的请求中客户端不应该用新的URI, 对于POST/PUT/DELETE请求 客户端不应该自动重定向</strong></p>
<p><strong>303是由于未知原因重定向, 之后的请求中客户端不应该用新的URI, 对于POST/PUT/DELETE请求 客户端应该使用GET请求来替代</strong></p>
<p><strong>307是临时重定向, 之后资源可能会回到这个位置, 之后的请求中客户端应该使用旧的URI, 对于POST/PUT/DELETE请求 客户端不应该自动重定向</strong></p>
<!-- # 查看报文

**点击Request Headers旁边的view parsed**

**注意: view parsed没点之前其实是给你优化过的**

# 报文格式

GET|HTTP|1.1|Host|
-|-|-|-|
方法 | 路径 | 协议版本 |发送请求的域名

<ul>
<li>Content-Type</li>
<li>Host (主机和端口号)</li>
<li>Connection (链接类型/常链接)</li>
<li>UPgrade-Insecure-Requests (升级为HTTPS请求)</li>
<li>User-Agent (用户代理 提供系统信息和浏览器信息)</li>
<li>Referer (页面跳转处)</li>
<li>Cookie (Cookie数据非常重要,)</li>
<li>Authorization (表示HTTP协议中需要认证资源的认证信息, 例如用于jwt认证)</li>
</ul>

**请求头表格形式**

 特别关注|以下几个请求头|| |
-|-|-|-|
Host | 域名 |  |
Connection | 常链接 |  |
UPgrade-Insecure-Requests | 升级为HTTPS请求 |  |
User-Agent | 用户代理|  |
Refrer | 页面跳转处, 防盗链 |  |
Cookie | 保持状态, 用于跳过账号密码 |  |

**响应头表格形式**

 特别关注|以下几个请求头|| |
-|-|-|-|
HTTP/1.1 | 协议 |  |
200 | 状态码 |  |
Set-Cookie | cookie到用户浏览器的缓存非常重要用于跳过账号密码 |  |

# 状态码

**常见的状态码 (了解就行)**

<ul>
<li>200: 成功</li>
<li>302: 跳转, 新的url在响应的Location头中给出</li>
<li>303: 浏览器对于POST的响应进行重新定向至新的url</li>
<li>307: 浏览器对应GET响应进行重新定向至新的url</li>
<li>403: 资源不可用; 服务器理解客户的请求, 但拒绝处理它(没有权限)</li>
<li>404: 找不到资源</li>
<li>500: 服务器内部错误</li>
<li>503: 服务器又有维护或者负载过重未能应答, 在响应中可能会携带Retry-After响应头; 有可能是因为爬虫频繁访问url, 使得服务器忽视爬虫的请求, 最终返回503响应状态码</li>
</ul>

**常见状态码表格形式 (了解就行)**

 状态码|代表意思|| |
-|-|-|-|
200 | 成功 |  |
302 | 跳转, 新的url在响应的Location头中给出 |  |
303 | 浏览器对于POST的响应进行重新定向至新的url |  |
307 | 浏览器对应GET响应进行重新定向至新的url |  |
403 | 资源不可用; 服务器理解客户的请求, 但拒绝处理它(没有权限) |  |
404 | 找不到资源 |  |
500 | 服务器内部错误 |  |
503 | 服务器又有维护或者负载过重未能应答, 在响应中可能会携带Retry-After响应头; 有可能是因为爬虫频繁访问url, 使得服务器忽视爬虫的请求, 最终返回503响应状态码 |  |

**总结 所有的状态码都不可信, 一切以是否从抓包得到的响应中获得到的数据为准 network中抓包得到的源码才是判断依据, elements中的源码是渲染之后的源码**

 请求过程||
-|-|
 浏览器| 发送所有请求, 进行渲染 |  
  爬虫| 发送所有请求, 不会渲染 |  


 请页面可分为||
-|-|
骨骼文件| html静态文件 |  
肌肉文件| js/ajax请求 | 
皮肤文件| css/font/图片等 |  

**抓包过程: 根据发送请求的流程分别在 骨骼 / 肌肉 / 皮肤 响应中查找数据**


 -->
]]></content>
  </entry>
  <entry>
    <title>爬虫 访问百度翻译(牢饭吃到饱)</title>
    <url>/reptile-Baidutranslate.html</url>
    <content><![CDATA[<p><strong>每天一个入狱小技巧</strong></p>
<a id="more"></a>


<h1 id="导入requests"><a href="#导入requests" class="headerlink" title="导入requests"></a>导入requests</h1><!--more-->
<p><strong>打开cmd输入以下代码</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure>
<h1 id="百度翻译案例"><a href="#百度翻译案例" class="headerlink" title="百度翻译案例"></a>百度翻译案例</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url &#x3D; &quot;https:&#x2F;&#x2F;fanyi.baidu.com&#x2F;sug&quot;</span><br><span class="line"></span><br><span class="line">s &#x3D; input(&quot;请输入你要翻译的英文单词&quot;)</span><br><span class="line"></span><br><span class="line">dat &#x3D; &#123;</span><br><span class="line">        &quot;kw&quot;:s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">tou &#x3D; &#123;</span><br><span class="line">    &quot;user-agent&quot;: &quot;Mozilla&#x2F;5.0 (Linux; Android 6.0; Nexus 5 Build&#x2F;MRA58N) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;90.0.4430.85 Mobile Safari&#x2F;537.36&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pachon &#x3D; requests.post(url,headers&#x3D;tou,data&#x3D;dat)</span><br><span class="line"></span><br><span class="line">print(pachon)</span><br><span class="line"></span><br><span class="line">print(pachon.json())</span><br><span class="line"></span><br><span class="line">pachon.close()  #断开&#x2F;关闭连接, 一定要断开</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>什么是线程?什么是进程?线程与进程到底是什么关系</title>
    <url>/Thread-Process.html</url>
    <content><![CDATA[<p><strong>概念</strong></p>
<a id="more"></a>

<h1 id="什么是线程-学习进程最重要的还是学习线程"><a href="#什么是线程-学习进程最重要的还是学习线程" class="headerlink" title="什么是线程(学习进程最重要的还是学习线程)"></a>什么是线程(学习进程最重要的还是学习线程)</h1><p><strong>线程就是独立执行的路径，就算在什么都不干的话，里面会有(主线程)main线程，Java里面还有个一个收垃圾的gc线程</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ Thread是线程的英文</span><br></pre></td></tr></table></figure>

<h1 id="什么是进程"><a href="#什么是进程" class="headerlink" title="什么是进程"></a>什么是进程</h1><p><strong>把程序跑起来才叫做进程，进程是执行程序的一次执行过程是一个动态的概念</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ Process是进程的英文</span><br></pre></td></tr></table></figure>
<h1 id="线程与进程到底是什么关系"><a href="#线程与进程到底是什么关系" class="headerlink" title="线程与进程到底是什么关系"></a>线程与进程到底是什么关系</h1><p><strong>一个进程里面可以包含若干个线程，一个进程里面必须要有一个线程，否则没有存在的意义</strong></p>
<h1 id="注意-线程开启不一定马上执行，JVM去告诉操作系统-线程的处理，操作系统再去告诉-CPU怎么处理线程，由CPU调度执行"><a href="#注意-线程开启不一定马上执行，JVM去告诉操作系统-线程的处理，操作系统再去告诉-CPU怎么处理线程，由CPU调度执行" class="headerlink" title="注意: 线程开启不一定马上执行，JVM去告诉操作系统 线程的处理，操作系统再去告诉 CPU怎么处理线程，由CPU调度执行"></a>注意: 线程开启不一定马上执行，JVM去告诉操作系统 线程的处理，操作系统再去告诉 CPU怎么处理线程，由CPU调度执行</h1>]]></content>
  </entry>
  <entry>
    <title>跟我一起学数学</title>
    <url>/mathematics.html</url>
    <content><![CDATA[<p><strong>走进数学的奇妙世界</strong></p>
<a id="more"></a>

<h1 id="高斯算法"><a href="#高斯算法" class="headerlink" title="高斯算法"></a>高斯算法</h1><p><strong>用于解决 1+2+3+4+5+6+7……一直加到n</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(首项 + 末项) * 项数 &#x2F; 2</span><br></pre></td></tr></table></figure>


<h1 id="衡量算法"><a href="#衡量算法" class="headerlink" title="衡量算法"></a>衡量算法</h1><p><strong>时间复杂度和空间复杂度</strong></p>
]]></content>
  </entry>
  <entry>
    <title>跟我一起学算法(概念章)</title>
    <url>/mathematics-concept.html</url>
    <content><![CDATA[<p><strong>走进数学的奇妙世界</strong></p>
<a id="more"></a>

<h1 id="衡量算法"><a href="#衡量算法" class="headerlink" title="衡量算法"></a>衡量算法</h1><p><strong>时间复杂度和空间复杂度</strong></p>
<h1 style="color:red;font-size:50px">时间复杂度: 程序的运行时间和效率</h1>

<h1 style="color:red;font-size:50px">空间复杂度: 程序运行时所占用的内存空间</h1>

<h1 id="什么是数据结构"><a href="#什么是数据结构" class="headerlink" title="什么是数据结构"></a>什么是数据结构</h1><p><strong>数据结构是数据的组织、管理和存储格式，其使用目的是为了高效地访问和修改数据</strong></p>
<p><strong>数据结构包含数组、链表这样的线性数据结构，也包含树、图这样的复杂数据结构</strong></p>
<h1 id="什么是时间复杂度"><a href="#什么是时间复杂度" class="headerlink" title="什么是时间复杂度"></a>什么是时间复杂度</h1><p><strong>时间复杂度是对一个算法运行时间长短的量度，用大O表示，记作T(n)=O(f(n))</strong></p>
<p><strong>常见的时间复杂度按照从低到高的顺序，包括O(1)、O(logn)、O(n)、O(nlogn)、O(n2)等</strong></p>
<h1 id="什么是空间复杂度"><a href="#什么是空间复杂度" class="headerlink" title="什么是空间复杂度"></a>什么是空间复杂度</h1><p><strong>空间复杂度是对一个算法在运行过程中临时占用存储空间大小的量度，用大O表示，记作S(n)=O(f(n))</strong></p>
<p><strong>常见的空间复杂度按照从低到高的顺序，包括O(1)、O(n)、O(n2)等。其中递归算法的空间复杂度和递归深度成正比</strong></p>
]]></content>
  </entry>
  <entry>
    <title>百度搜索技巧</title>
    <url>/baidu.html</url>
    <content><![CDATA[<p><strong>技巧</strong></p>
<a id="more"></a>

<h1 id="精确匹配"><a href="#精确匹配" class="headerlink" title="精确匹配"></a>精确匹配</h1><p>搜索关键字加” “就行了 用法: “史迪奇”</p>
<h1 id="消除无关性"><a href="#消除无关性" class="headerlink" title="消除无关性"></a>消除无关性</h1><p>搜索关键字加(-)就行了 用法: (-史迪奇)</p>
<h1 id="并行搜索"><a href="#并行搜索" class="headerlink" title="并行搜索"></a>并行搜索</h1><p>搜索关键字加(|)就行了 用法: (史迪奇|史迪仔)</p>
<h1 id="搜索范围限定在网页标题中"><a href="#搜索范围限定在网页标题中" class="headerlink" title="搜索范围限定在网页标题中"></a>搜索范围限定在网页标题中</h1><p>搜索关键字加intitle:就行了 用法: intitle:史迪奇</p>
<h1 id="搜索范围限定在特定站点中"><a href="#搜索范围限定在特定站点中" class="headerlink" title="搜索范围限定在特定站点中"></a>搜索范围限定在特定站点中</h1><p>知道站点的前提下 site:站点域名就行了不要带http://  用法: intitle:<a href="https://sdq3.gitee.io/baidu.html">https://sdq3.gitee.io/baidu.html</a></p>
<h1 id="搜索范围限定在url链接"><a href="#搜索范围限定在url链接" class="headerlink" title="搜索范围限定在url链接"></a>搜索范围限定在url链接</h1><p>搜索关键字加inurl: 就行了 用法:史迪奇 inurl:小怪物</p>
<h1 id="特定格式的文档检索"><a href="#特定格式的文档检索" class="headerlink" title="特定格式的文档检索"></a>特定格式的文档检索</h1><p>搜索关键字加filetype: 就行了   用法:filetype:PDF 如PDF、DOC、XLS等</p>
<h1 id="精确匹配-电影-小说"><a href="#精确匹配-电影-小说" class="headerlink" title="精确匹配 电影 小说"></a>精确匹配 电影 小说</h1><p>搜索关键字加&lt;&gt;就行了 用法: &lt;史迪奇&gt;</p>
<h1 id="开始连接和正在连接"><a href="#开始连接和正在连接" class="headerlink" title="开始连接和正在连接"></a>开始连接和正在连接</h1><p>搜索关键字加(开始连接|正在连接)就行了  用法: 星际宝贝(开始连接|正在连接)</p>
<h1 id="计算器功能"><a href="#计算器功能" class="headerlink" title="计算器功能"></a>计算器功能</h1><p>搜索关键字加数字加减就行了  用法: 史迪奇*3-2+1</p>
<h1 id="仅搜索网站标题"><a href="#仅搜索网站标题" class="headerlink" title="仅搜索网站标题"></a>仅搜索网站标题</h1><p>搜索关键字加t:就行了 用法: t:史迪奇</p>
<h1 id="仅搜索网站的网址"><a href="#仅搜索网站的网址" class="headerlink" title="仅搜索网站的网址"></a>仅搜索网站的网址</h1><p>搜索关键字加u:就行了 用法: u:sdq3.gitee.io</p>
<h1 id="关键字都必须包含"><a href="#关键字都必须包含" class="headerlink" title="关键字都必须包含"></a>关键字都必须包含</h1><p>搜索关键字加 +就行了 用法: 史迪奇 +史迪仔 +是个人</p>
<h1 id="减去想要去除的关键词"><a href="#减去想要去除的关键词" class="headerlink" title="减去想要去除的关键词"></a>减去想要去除的关键词</h1><p>搜索关键字加 -就行了 用法: 史迪奇 -不是个人</p>
]]></content>
  </entry>
  <entry>
    <title>私有云配置(个人笔记)</title>
    <url>/Private-cloud.html</url>
    <content><![CDATA[<p><strong>要有Linux基础</strong></p>
<a id="more"></a>


<h1 id="空白分区划分"><a href="#空白分区划分" class="headerlink" title="空白分区划分"></a>空白分区划分</h1><p><strong>CentOS7的安装与CentOS6.5的安装有明显的区别。在CentOS7安装过程中，设置分区都需要一个挂载点，这样一来就无法创建两个空白的磁盘分区作为cinder服务和swift服务的存储磁盘了</strong></p>
<p><strong>所以我们应该在系统安装过程中留下足够的磁盘大小，系统安装完成后，使用命令parted划分新分区，然后使用mkfs.xfs进行文件系统格式化，完成空白分区的划分  “强烈建议使用fdisk”</strong></p>
<p><strong>parted具体命令如下: 不建议使用</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@compute ~]<span class="comment"># parted /dev/md126</span></span><br></pre></td></tr></table></figure>

<p><strong>创建swift分区，从702G到</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@compute ~]<span class="comment"># (parted) mkpart swift 702G 803G    803G                                                  </span></span><br><span class="line">[root@compute ~]<span class="comment"># mkfs.xfs /dev/md126p5</span></span><br></pre></td></tr></table></figure>
<p><strong>fdisk具体命令如下: 强烈建议使用</strong></p>
<p><strong>查看</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@compute ~]<span class="comment"># fdisk -l </span></span><br></pre></td></tr></table></figure>
<p><strong>sda为硬盘号</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@compute ~]<span class="comment"># fdisk /dev/sda </span></span><br></pre></td></tr></table></figure>

<p><strong>选择m n是创建 d是删除 w是保存</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Command (m <span class="keyword">for</span> <span class="built_in">help</span>): m</span><br><span class="line">Command action</span><br><span class="line">   a   toggle a bootable flag</span><br><span class="line">   b   edit bsd disklabel</span><br><span class="line">   c   toggle the dos compatibility flag</span><br><span class="line">   d   delete a partition</span><br><span class="line">   g   create a new empty GPT partition table</span><br><span class="line">   G   create an IRIX (SGI) partition table</span><br><span class="line">   l   list known partition types</span><br><span class="line">   m   <span class="built_in">print</span> this menu</span><br><span class="line">   n   add a new partition</span><br><span class="line">   o   create a new empty DOS partition table</span><br><span class="line">   p   <span class="built_in">print</span> the partition table</span><br><span class="line">   q   quit without saving changes</span><br><span class="line">   s   create a new empty Sun disklabel</span><br><span class="line">   t   change a partition<span class="string">&#x27;s system id</span></span><br><span class="line"><span class="string">   u   change display/entry units</span></span><br><span class="line"><span class="string">   v   verify the partition table</span></span><br><span class="line"><span class="string">   w   write table to disk and exit </span></span><br></pre></td></tr></table></figure>
<h1 id="配置网络-主机名-修改和添加"><a href="#配置网络-主机名-修改和添加" class="headerlink" title="配置网络 主机名 修改和添加"></a>配置网络 主机名 修改和添加</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># vi /etc/sysconfig/network-scripts/ifcfg-enp*(具体的网口)文件</span></span><br></pre></td></tr></table></figure>
<p><strong>(1) controller节点 配置网络:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># 私网的ip地址</span></span><br><span class="line">[root@controller]<span class="comment"># device=enp8s0</span></span><br><span class="line">[root@controller]<span class="comment"># type=Ethernet</span></span><br><span class="line">[root@controller]<span class="comment"># onboot=yes</span></span><br><span class="line">[root@controller]<span class="comment"># nm_controlled=no</span></span><br><span class="line">[root@controller]<span class="comment"># bootroto=static</span></span><br><span class="line">[root@controller]<span class="comment"># ipaddr=192.168.88.131</span></span><br><span class="line">[root@controller]<span class="comment"># prefix=24</span></span><br><span class="line">[root@controller]<span class="comment"># </span></span><br><span class="line">[root@controller]<span class="comment"># 公网的ip地址</span></span><br><span class="line">[root@controller]<span class="comment"># device=enp9s0</span></span><br><span class="line">[root@controller]<span class="comment"># type=Ethernet</span></span><br><span class="line">[root@controller]<span class="comment"># onboot=yes</span></span><br><span class="line">[root@controller]<span class="comment"># nm_controlled=no</span></span><br><span class="line">[root@controller]<span class="comment"># bootroto=static</span></span><br><span class="line">[root@controller]<span class="comment"># ipaddr=192.168.200.10</span></span><br><span class="line">[root@controller]<span class="comment"># prefix=24</span></span><br></pre></td></tr></table></figure>
<p><strong>生效</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># service network restart</span></span><br></pre></td></tr></table></figure>
<p><strong>查看</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># ip a</span></span><br></pre></td></tr></table></figure>
<p><strong>配置主机名: 输入完成 按ctrl+d 退出  重新登陆</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># hostnamectl set-hostname controller</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>(2) compute 节点 配置网络:</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># 私网的ip地址</span></span><br><span class="line">[root@controller]<span class="comment"># device=enp8s0      //设备名称</span></span><br><span class="line">[root@controller]<span class="comment"># type=Ethernet</span></span><br><span class="line">[root@controller]<span class="comment"># onboot=yes</span></span><br><span class="line">[root@controller]<span class="comment"># nm_controlled=no</span></span><br><span class="line">[root@controller]<span class="comment"># bootroto=static</span></span><br><span class="line">[root@controller]<span class="comment"># ipaddr=192.168.100.20</span></span><br><span class="line">[root@controller]<span class="comment"># prefix=24</span></span><br><span class="line">[root@controller]<span class="comment"># </span></span><br><span class="line">[root@controller]<span class="comment"># 公网的ip地址</span></span><br><span class="line">[root@controller]<span class="comment"># device=enp9s0</span></span><br><span class="line">[root@controller]<span class="comment"># type=Ethernet</span></span><br><span class="line">[root@controller]<span class="comment"># onboot=yes</span></span><br><span class="line">[root@controller]<span class="comment"># nm_controlled=no</span></span><br><span class="line">[root@controller]<span class="comment"># bootroto=static</span></span><br><span class="line">[root@controller]<span class="comment"># ipaddr=192.168.200.20</span></span><br><span class="line">[root@controller]<span class="comment"># prefix=24</span></span><br></pre></td></tr></table></figure>
<p><strong>生效</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># service network restart</span></span><br></pre></td></tr></table></figure>

<p><strong>查看</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># ip a</span></span><br></pre></td></tr></table></figure>
<p><strong>配置主机名: 输入完成 按ctrl+d 退出  重新登陆</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># hostnamectl set-hostname compute/controller</span></span><br></pre></td></tr></table></figure>
<p><strong>查看</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># hostname</span></span><br></pre></td></tr></table></figure>
<h1 id="配置yum源"><a href="#配置yum源" class="headerlink" title="配置yum源"></a>配置yum源</h1><p><strong>Controller和compute节点</strong></p>
<p><strong>(1)yum源备份</strong></p>
<p><strong>命令解释: 用来为文件或目录改名、或将文件或目录移入其它位置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># mv /etc/yum.repos.d/*  /opt/</span></span><br></pre></td></tr></table></figure>
<p><strong>(2)创建repo文件</strong></p>
<p><strong>controller 在/etc/yum.repos.d创建源文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># vi contrller.repo   </span></span><br></pre></td></tr></table></figure>
<p><strong>配置本地file</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># [centos]</span></span><br><span class="line">[root@controller]<span class="comment"># name=centos</span></span><br><span class="line">[root@controller]<span class="comment"># baseurl=file:///opt/centos</span></span><br><span class="line">[root@controller]<span class="comment"># gpgcheck=0</span></span><br><span class="line">[root@controller]<span class="comment"># enabled=1</span></span><br><span class="line">[root@controller]<span class="comment"># [iaas]</span></span><br><span class="line">[root@controller]<span class="comment"># name=iaas</span></span><br><span class="line">[root@controller]<span class="comment"># baseurl=file:///opt/iaas-repo</span></span><br><span class="line">[root@controller]<span class="comment"># gpgcheck=0</span></span><br><span class="line">[root@controller]<span class="comment"># enabled=1</span></span><br></pre></td></tr></table></figure>
<p><strong>查看</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># yum repolist</span></span><br><span class="line">[root@controller]<span class="comment"># cat [文件名]</span></span><br></pre></td></tr></table></figure>
<p><strong>compute 在/etc/yum.repos.d创建centos.repo源文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># vi compute.repo </span></span><br></pre></td></tr></table></figure>
<p><strong>全部移走</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># mv * /tmp</span></span><br></pre></td></tr></table></figure>
<p><strong>配置ftp</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># [centos]</span></span><br><span class="line">[root@controller]<span class="comment"># name=centos</span></span><br><span class="line">[root@controller]<span class="comment"># baseurl=ftp://192.168.88.131/centos</span></span><br><span class="line">[root@controller]<span class="comment"># gpgcheck=0</span></span><br><span class="line">[root@controller]<span class="comment"># enabled=1</span></span><br><span class="line">[root@controller]<span class="comment"># [iaas]</span></span><br><span class="line">[root@controller]<span class="comment"># name=iaas</span></span><br><span class="line">[root@controller]<span class="comment"># baseurl=ftp://192.168.88.131/iaas-repo</span></span><br><span class="line">[root@controller]<span class="comment"># gpgcheck=0</span></span><br><span class="line">[root@controller]<span class="comment"># enabled=1</span></span><br></pre></td></tr></table></figure>
<p><strong>配置http</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># [centos]</span></span><br><span class="line">[root@controller]<span class="comment"># name=centos</span></span><br><span class="line">[root@controller]<span class="comment"># baseurl=http://192.168.88.131/centos</span></span><br><span class="line">[root@controller]<span class="comment"># gpgcheck=0</span></span><br><span class="line">[root@controller]<span class="comment"># enabled=1</span></span><br><span class="line">[root@controller]<span class="comment"># [iaas]</span></span><br><span class="line">[root@controller]<span class="comment"># name=iaas</span></span><br><span class="line">[root@controller]<span class="comment"># baseurl=http://192.168.88.131/iaas-repo</span></span><br><span class="line">[root@controller]<span class="comment"># gpgcheck=0</span></span><br><span class="line">[root@controller]<span class="comment"># enabled=1</span></span><br></pre></td></tr></table></figure>
<p><strong>查看</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># yum repolist</span></span><br><span class="line">[root@controller]<span class="comment"># cat [文件名]</span></span><br></pre></td></tr></table></figure>

<h1 id="挂载iso文件"><a href="#挂载iso文件" class="headerlink" title="挂载iso文件"></a>挂载iso文件</h1><p><strong>挂载CentOS-7xxxx.iso</strong></p>
<p><strong>命令解释: mount挂载Linux系统外的文件, loop是mount用来加载loop设备的选项，不是文件系统类型</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># mount -o loop /home/sdq/CentOS-7-x86_64-DVD-2003.iso  /mnt</span></span><br></pre></td></tr></table></figure>
<p><strong>命令解释: 删除重来</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># rm -rf /opt/centos/*</span></span><br></pre></td></tr></table></figure>
<p><strong>mkdir创建</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># mkdir /opt/centos</span></span><br></pre></td></tr></table></figure>

<p><strong>查看</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># df</span></span><br></pre></td></tr></table></figure>

<p><strong>意思是并将光盘内的数据拷贝到centos文件夹中，数据有点多，要等一会</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># cp -rvf /mnt/* /opt/centos/</span></span><br></pre></td></tr></table></figure>

<p><strong>umount可卸除目前挂在Linux目录中的文件系统</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># umount  /mnt/</span></span><br></pre></td></tr></table></figure>
<p><strong>挂载XianDian-IaaS-v2.4.iso</strong></p>
<p><strong>mount挂载Linux系统外的文件, loop是mount用来加载loop设备的选项，不是文件系统类型</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># mount -o loop /home/sdq/chinaskills_cloud_iaas.iso  /mnt</span></span><br></pre></td></tr></table></figure>

<p><strong>意思是并将光盘内的数据拷贝到opt文件夹中，数据有点多，要等一会</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># cp -rvf /mnt/* /opt/</span></span><br></pre></td></tr></table></figure>
<p><strong>umount可卸除目前挂在Linux目录中的文件系统</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># umount  /mnt/</span></span><br></pre></td></tr></table></figure>
<h1 id="搭建ftp服务器，开启并设置自启"><a href="#搭建ftp服务器，开启并设置自启" class="headerlink" title="搭建ftp服务器，开启并设置自启"></a>搭建ftp服务器，开启并设置自启</h1><p><strong>安装vsftpd 默认-y= yes</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller ~]<span class="comment"># yum install vsftpd –y</span></span><br></pre></td></tr></table></figure>
<p><strong>添加anon_root=/opt/</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller ~]<span class="comment"># vi /etc/vsftpd/vsftpd.conf</span></span><br></pre></td></tr></table></figure>
<p><strong>启动服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller ~]<span class="comment"># systemctl start vsftpd</span></span><br></pre></td></tr></table></figure>

<p><strong>查看</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># yum repolist</span></span><br></pre></td></tr></table></figure>
<p><strong>在开机时启用服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller ~]<span class="comment"># systemctl enable vsftpd</span></span><br></pre></td></tr></table></figure>
<h1 id="搭建http服务器，开启并设置自启"><a href="#搭建http服务器，开启并设置自启" class="headerlink" title="搭建http服务器，开启并设置自启"></a>搭建http服务器，开启并设置自启</h1><p><strong>安装httpd 默认-y= yes</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller ~]<span class="comment"># rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span></span><br><span class="line">[root@controller ~]<span class="comment"># yum install httpd –y</span></span><br></pre></td></tr></table></figure>
<p><strong>/var/www/html改”/opt”</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller ~]<span class="comment"># vi /etc/httpd/conf/httpd.conf</span></span><br></pre></td></tr></table></figure>
<p><strong>启动服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller ~]<span class="comment"># systemctl start httpd</span></span><br></pre></td></tr></table></figure>

<p><strong>在开机时启用服务</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller ~]<span class="comment"># systemctl enable httpd</span></span><br></pre></td></tr></table></figure>
<h1 id="配置防火墙和Selinux"><a href="#配置防火墙和Selinux" class="headerlink" title="配置防火墙和Selinux"></a>配置防火墙和Selinux</h1><p><strong>controller/compute都要</strong></p>
<p><strong>编辑selinux文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># vi /etc/selinux/config </span></span><br><span class="line">[root@controller]<span class="comment"># SELINUX=permissive</span></span><br><span class="line">[root@controller selinux]<span class="comment"># setenforce 0</span></span><br></pre></td></tr></table></figure>
<!-- [root@controller selinux]# getenforce     //查看 -->
<p><strong>查看</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># getenforce </span></span><br></pre></td></tr></table></figure>
<p><strong>关闭防火墙并设置开机不自启</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># systemctl stop firewalld.service</span></span><br><span class="line">[root@controller]<span class="comment"># systemctl disable firewalld.service</span></span><br></pre></td></tr></table></figure>
<p><strong>查看</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># systemctl status firewalld.service</span></span><br></pre></td></tr></table></figure>
<p><strong>清除缓存和验证yum源 controller/compute都要</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># yum clean all</span></span><br><span class="line">[root@controller]<span class="comment"># yum repolist</span></span><br></pre></td></tr></table></figure>
<h1 id="编辑环境变量"><a href="#编辑环境变量" class="headerlink" title="编辑环境变量"></a>编辑环境变量</h1><p><strong>controller和compute节点</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># yum install iaas-xiandian -y</span></span><br></pre></td></tr></table></figure>
<p><strong>编辑文件/etc/xiandian/openrc.sh, 此文件是安装过程中的各项参数, 根据每项参数上一行的说明及服务器实际情况进行配置</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># HOST_IP=192.168.88.131</span></span><br><span class="line">[root@controller]<span class="comment"># HOST_PASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># HOST_NAME=controller</span></span><br><span class="line">[root@controller]<span class="comment"># HOST_IP_NODE=192.168.100.20</span></span><br><span class="line">[root@controller]<span class="comment"># HOST_PASS_NODE=000000</span></span><br><span class="line">[root@controller]<span class="comment"># HOST_NAME_NODE=compute</span></span><br><span class="line">[root@controller]<span class="comment"># network_segment_IP=192.168.100.0/24</span></span><br><span class="line">[root@controller]<span class="comment"># RABBIT_USER=openstack</span></span><br><span class="line">[root@controller]<span class="comment"># RABBIT_PASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># DB_PASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># DOMAIN_NAME=demo</span></span><br><span class="line">[root@controller]<span class="comment"># ADMIN_PASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># DEMO_PASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># KEYSTONE_DBPASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># GLANCE_DBPASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># GLANCE_PASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># NOVA_DBPASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># NOVA_PASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># NEUTRON_DBPASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># NEUTRON_PASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># METADATA_SECRET=000000</span></span><br><span class="line">[root@controller]<span class="comment"># INTERFACE_IP=192.168.88.131/192.168.100.20(controllerIP/computeIP)</span></span><br><span class="line">[root@controller]<span class="comment"># INTERFACE_NAME=enp9s0 (外部网络网卡名称)</span></span><br><span class="line">[root@controller]<span class="comment"># Physical_NAME=provider (外部网络适配器名称)</span></span><br><span class="line">[root@controller]<span class="comment"># minvlan=101 (vlan网络范围的第一个vlanID)</span></span><br><span class="line">[root@controller]<span class="comment"># maxvlan=200 (vlan网络范围的最后一个vlanID)</span></span><br><span class="line">[root@controller]<span class="comment"># CINDER_DBPASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># CINDER_PASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># BLOCK_DISK=md126p4 (空白分区)</span></span><br><span class="line">[root@controller]<span class="comment"># SWIFT_PASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># OBJECT_DISK=md126p5 (空白分区)</span></span><br><span class="line">[root@controller]<span class="comment"># STORAGE_LOCAL_NET_IP=192.168.100.20</span></span><br><span class="line">[root@controller]<span class="comment"># HEAT_DBPASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># HEAT_PASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># ZUN_DBPASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># ZUN_PASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># KURYR_DBPASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># KURYR_PASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># CEILOMETER_DBPASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># CEILOMETER_PASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># AODH_DBPASS=000000</span></span><br><span class="line">[root@controller]<span class="comment"># AODH_PASS=000000</span></span><br></pre></td></tr></table></figure>
<h1 id="通过脚本安装服务"><a href="#通过脚本安装服务" class="headerlink" title="通过脚本安装服务"></a>通过脚本安装服务</h1><p><strong>执行脚本iaas-pre-host.sh进行安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller ~]<span class="comment"># iaas-pre-host.sh</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller ~]<span class="comment"># chronyc sources -v</span></span><br></pre></td></tr></table></figure>
<h1 id="通过脚本安装数据库服务"><a href="#通过脚本安装数据库服务" class="headerlink" title="通过脚本安装数据库服务"></a>通过脚本安装数据库服务</h1><p><strong>Controller节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-mysql.sh</span></span><br></pre></td></tr></table></figure>
<h1 id="通过脚本安装keystone服务"><a href="#通过脚本安装keystone服务" class="headerlink" title="通过脚本安装keystone服务"></a>通过脚本安装keystone服务</h1><p><strong>Controller节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-keystone.sh</span></span><br></pre></td></tr></table></figure>
<h1 id="通过脚本安装glance服务"><a href="#通过脚本安装glance服务" class="headerlink" title="通过脚本安装glance服务"></a>通过脚本安装glance服务</h1><p><strong>Controller节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-glance.sh</span></span><br></pre></td></tr></table></figure>
<h1 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h1><p><strong>首先下载(Wget)提供的系统镜像到本地，本次以上传CentOS_7.5_x86_64镜像为例 安装Wget，从Ftp服务器上下载镜像到本地</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># source admin-openrc.sh</span></span><br><span class="line">[root@controller]<span class="comment"># glance image-create --name &quot;CentOS7.5&quot; --disk-format qcow2  --container-format bare --progress &lt;       /opt/images/CentOS_7.5_x86_64_XD.qcow2  </span></span><br></pre></td></tr></table></figure>
<h1 id="安装Nova计算服务"><a href="#安装Nova计算服务" class="headerlink" title="安装Nova计算服务"></a>安装Nova计算服务</h1><p><strong>Controller节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-nova-controller.sh</span></span><br></pre></td></tr></table></figure>
<p><strong>Compute节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-nova-compute.sh</span></span><br></pre></td></tr></table></figure>
<h1 id="安装Neutron网络服务"><a href="#安装Neutron网络服务" class="headerlink" title="安装Neutron网络服务"></a>安装Neutron网络服务</h1><p><strong>Controller节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-neutron-controller.sh</span></span><br></pre></td></tr></table></figure>
<p><strong>Compute节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-neutron-compute.sh</span></span><br></pre></td></tr></table></figure>



<h1 id="安装Dashboard服务"><a href="#安装Dashboard服务" class="headerlink" title="安装Dashboard服务"></a>安装Dashboard服务</h1><p><strong>Controller节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># aas-install-dashboard.sh</span></span><br></pre></td></tr></table></figure>

<h1 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h1><p><strong>打开浏览器访问Dashboard, 网址<a href="http://controller/">http://controller</a> (或本机内网ip) /dashboard</strong><br><strong>注: 检查防火墙规则，确保允许http服务相关端口通行，或者关闭防火墙</strong></p>
<h1 id="创建云主机"><a href="#创建云主机" class="headerlink" title="创建云主机"></a>创建云主机</h1><p><strong>(1) 管理员-&gt;资源管理-&gt;云主机类型-&gt;创建云主机类型</strong></p>
<p><strong>(2) 管理员-&gt;网络-&gt;网络-&gt;创建网络</strong></p>
<p><strong>(2) 项目-&gt;网络-&gt;安全组-&gt;管理规则-&gt;添加规则(ICMP、TCP、UDP)</strong> </p>
<p><strong>(4) 项目-&gt;资源管理-&gt;云主机-&gt;创建云主机</strong></p>
<h1 id="安装Cinder块存储服务"><a href="#安装Cinder块存储服务" class="headerlink" title="安装Cinder块存储服务"></a>安装Cinder块存储服务</h1><p><strong>Controller节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-cinder-controller.sh</span></span><br></pre></td></tr></table></figure>
<p><strong>Compute节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-cinder-compute.sh</span></span><br></pre></td></tr></table></figure>
<h1 id="验证-以后会用到"><a href="#验证-以后会用到" class="headerlink" title="验证  [以后会用到]"></a>验证  [以后会用到]</h1><p><strong>Controller节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">使用cinder create 创建一个新的卷</span><br><span class="line">[root@controller]<span class="comment"># cinder create  --display-name myVolume 1</span></span><br><span class="line">通过cinder list 命令查看是否正确创建</span><br><span class="line">[root@controller]<span class="comment"># cinder list </span></span><br></pre></td></tr></table></figure>
<p><strong>Compute节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-neutron-compute.sh</span></span><br></pre></td></tr></table></figure>
<h1 id="安装Swift对象存储服务"><a href="#安装Swift对象存储服务" class="headerlink" title="安装Swift对象存储服务"></a>安装Swift对象存储服务</h1><p><strong>Controller节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-swift-controller.sh</span></span><br></pre></td></tr></table></figure>
<p><strong>Compute节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-swift-compute.sh</span></span><br></pre></td></tr></table></figure>
<h1 id="安装Heat编配服务"><a href="#安装Heat编配服务" class="headerlink" title="安装Heat编配服务"></a>安装Heat编配服务</h1><p><strong>Controller节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-heat.sh</span></span><br></pre></td></tr></table></figure>
<h1 id="安装Zun服务"><a href="#安装Zun服务" class="headerlink" title="安装Zun服务"></a>安装Zun服务</h1><p><strong>Controller节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-zun-controller.sh</span></span><br></pre></td></tr></table></figure>
<p><strong>Compute节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-zun-compute.sh</span></span><br></pre></td></tr></table></figure>
<h1 id="上传镜像-1"><a href="#上传镜像-1" class="headerlink" title="上传镜像"></a>上传镜像</h1><p><strong>以CentOS7_1804.tar镜像为例, CentOS7_1804.tar镜像包存放在XianDian-IaaS-v2.4.iso镜像包中, 将docker镜像上传到glance中, 通过openstack使用镜像启动容器</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># source /etc/keystone/admin-openrc.sh</span></span><br><span class="line">[root@controller]<span class="comment"># openstack image create centos7.5 --public --container-format docker --disk-format raw &lt; CentOS7_1804.tar</span></span><br></pre></td></tr></table></figure>
<h1 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h1><p><strong>通过glance存储镜像启动容器</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># zun run --image-driver glance centos7.5</span></span><br><span class="line">[root@controller]<span class="comment"># zun list</span></span><br></pre></td></tr></table></figure>
<h1 id="安装Ceilometer监控服务"><a href="#安装Ceilometer监控服务" class="headerlink" title="安装Ceilometer监控服务"></a>安装Ceilometer监控服务</h1><p><strong>Controller节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-ceilometer-controller.sh</span></span><br></pre></td></tr></table></figure>
<p><strong>Compute节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-ceilometer-compute.sh</span></span><br></pre></td></tr></table></figure>
<h1 id="安装Aodh监控服务"><a href="#安装Aodh监控服务" class="headerlink" title="安装Aodh监控服务"></a>安装Aodh监控服务</h1><p><strong>Controller节点 执行以下脚本</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># iaas-install-aodh.sh</span></span><br></pre></td></tr></table></figure>
<h1 id="更新-清除所有"><a href="#更新-清除所有" class="headerlink" title="更新/清除所有"></a>更新/清除所有</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># yum clean all</span></span><br></pre></td></tr></table></figure>
<h1 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h1><p><strong>httpd为服务名称</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@controller]<span class="comment"># systemctl restart httpd</span></span><br></pre></td></tr></table></figure>

<h1 id="添加控制节点资源到云平台"><a href="#添加控制节点资源到云平台" class="headerlink" title="添加控制节点资源到云平台"></a>添加控制节点资源到云平台</h1><p><strong>修改openrc.sh  把compute节点的IP和主机名改为controller节点的IP和主机名</strong></p>
<p><strong>运行iaas-install-nova-compute.sh  行过程中需要确认登录controller节点和输入controller节点root用户密码</strong></p>
<h1 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scp -r [文件名] [用户名]@[ip]:&#x2F;home&#x2F;[用户名]</span><br></pre></td></tr></table></figure>
<h1 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh [用户名]@[ip]</span><br></pre></td></tr></table></figure>
<p>生成ssh公钥</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure>
<p>复制密钥给主机2</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-copy-id [用户名]@[ip]  </span><br></pre></td></tr></table></figure>
<p>然后输入主机2的密码</p>
<p>密钥位置 传过来的在用户目录  将要传的在root目录后缀为pub是公钥 rsa是私钥</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;home&#x2F;用户名</span><br><span class="line">ls -a</span><br><span class="line">cd .ssh</span><br></pre></td></tr></table></figure>
<h1 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;[路径]</span><br></pre></td></tr></table></figure>
<h1 id="查看当前路径"><a href="#查看当前路径" class="headerlink" title="查看当前路径"></a>查看当前路径</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pwd</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
</search>
